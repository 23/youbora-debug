{"version":3,"sources":["node_modules/youboralib/package.json","node_modules/youboralib/src/actionbuilder/actionbuilder.js","node_modules/youboralib/src/actionbuilder/adbufferbegin.js","node_modules/youboralib/src/actionbuilder/adbufferend.js","node_modules/youboralib/src/actionbuilder/adjoin.js","node_modules/youboralib/src/actionbuilder/adpause.js","node_modules/youboralib/src/actionbuilder/adresume.js","node_modules/youboralib/src/actionbuilder/adstart.js","node_modules/youboralib/src/actionbuilder/adstop.js","node_modules/youboralib/src/actionbuilder/bufferbegin.js","node_modules/youboralib/src/actionbuilder/bufferend.js","node_modules/youboralib/src/actionbuilder/data.js","node_modules/youboralib/src/actionbuilder/error.js","node_modules/youboralib/src/actionbuilder/fatalerror.js","node_modules/youboralib/src/actionbuilder/init.js","node_modules/youboralib/src/actionbuilder/join.js","node_modules/youboralib/src/actionbuilder/pause.js","node_modules/youboralib/src/actionbuilder/ping.js","node_modules/youboralib/src/actionbuilder/preloadbegin.js","node_modules/youboralib/src/actionbuilder/preloadend.js","node_modules/youboralib/src/actionbuilder/resume.js","node_modules/youboralib/src/actionbuilder/seekbegin.js","node_modules/youboralib/src/actionbuilder/seekend.js","node_modules/youboralib/src/actionbuilder/start.js","node_modules/youboralib/src/actionbuilder/stop.js","node_modules/youboralib/src/chrono.js","node_modules/youboralib/src/comm/communication.js","node_modules/youboralib/src/comm/request.js","node_modules/youboralib/src/controller/controller.js","node_modules/youboralib/src/controller/infogatherer.js","node_modules/youboralib/src/emitter.js","node_modules/youboralib/src/log.js","node_modules/youboralib/src/object.js","node_modules/youboralib/src/options.js","node_modules/youboralib/src/plugin/chronostatus.js","node_modules/youboralib/src/plugin/flagstatus.js","node_modules/youboralib/src/plugin/generic.js","node_modules/youboralib/src/plugin/playheadmonitor.js","node_modules/youboralib/src/polyfills.js","node_modules/youboralib/src/timer.js","node_modules/youboralib/src/transform/cdn.js","node_modules/youboralib/src/transform/hls.js","node_modules/youboralib/src/transform/nqs6.js","node_modules/youboralib/src/transform/resource.js","node_modules/youboralib/src/transform/transform.js","node_modules/youboralib/src/transform/view.js","node_modules/youboralib/src/util.js","node_modules/youboralib/src/youboralib.js","package.json","src/plugin.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","youbora","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_args","raw","scope","escapedName","name","rawSpec","spec","type","_from","_id","_inCache","_location","_nodeVersion","_npmOperationalInternal","host","tmp","_npmUser","email","_npmVersion","_phantomChildren","_requested","_requiredBy","_resolved","_shasum","_shrinkwrap","_spec","_where","author","bugs","dependencies","description","devDependencies","browserify","codecov","del","eslint","eslint-config-standard","eslint-plugin-node","eslint-plugin-promise","eslint-plugin-standard","gulp","gulp-load-plugins","gulp-rename","gulp-sourcemaps","gulp-streamify","gulp-uglify","gulp-util","istanbul","jasmine","mock-browser","through2","vinyl-buffer","vinyl-source-stream","watchify","directories","dist","shasum","tarball","gitHead","homepage","license","main","maintainers","optionalDependencies","readme","repository","url","scripts","build","postversion","pretest","test","version","2","YouboraObject","Log","YBRequest","FlagStatus","ChronoStatus","ActionBuilder","extend","constructor","infomanager","_info","_monitor","plugin","monitor","_flags","flags","_chronos","chronos","adnalyzer","_adFlags","_adChronos","_adMonitor","getIsAllowed","setChronosAndFlags","getServiceName","getParams","notice","req","buildRequest","params","request","service","_buildParams","paramList","forEach","param","getterName","Param","lastSent","warn","bind","_buildParamsIfDifferent","value","playhead","playrate","fps","droppedFrames","mediaDuration","bitrate","throughput","rendition","title","title2","live","mediaResource","transactionCode","properties","playerVersion","player","cdn","pluginVersion","param1","param2","param3","param4","param5","param6","param7","param8","param9","param10","adPosition","adPlayhead","adDuration","adBitrate","adTitle","adResource","adPlayerVersion","adProperties","adnalyzerVersion","pluginInfo","isp","connectionType","ip","deviceCode","system","accountCode","username","joinDuration","bufferDuration","seekDuration","pauseDuration","adJoinDuration","adBufferDuration","totalAdDuration","preloadDuration","adPauseDuration","referer","nodeHost","nodeType","nodeTypeString","../comm/request","../log","../object","../plugin/chronostatus","../plugin/flagstatus","3","AdBufferBeginActionBuilder","isHalted","isJoined","isBuffering","buffer","start","./actionbuilder","4","AdBufferEndActionBuilder","stop","adNumber","5","AdJoinActionBuilder","isStarted","join","6","AdPauseActionBuilder","isPaused","pause","7","AdResumeActionBuilder","8","AdStartActionBuilder","total","_getAdNumber","getAdPosition","9","AdStopActionBuilder","chrono","reset","10","BufferBeginActionBuilder","data","convertFromSeek","isSeeking","startTime","seek","lastTime","11","BufferEndActionBuilder","12","DataActionBuilder","apiVersion","outputformat","13","StartActionBuilder","ErrorActionBuilder","errorMsg","./start","14","FatalErrorActionBuilder","prototype","apply","errorLevel","./error","15","InitActionBuilder","isInitiated","16","JoinActionBuilder","17","PauseActionBuilder","18","PingActionBuilder","verbose","isAdBuffering","entities","_getChangedEntities","19","PreloadBeginActionBuilder","isPreloading","preload","20","PreloadEndActionBuilder","21","ResumeActionBuilder","22","SeekBeginActionBuilder","convertFromBuffer","23","SeekEndActionBuilder","24","25","StopActionBuilder","26","Chrono","stopTime","offset","getDeltaTime","now","Date","getTime","./object","27","Transform","Communication","transforms","_requests","sendRequest","callback","on","Event","SUCCESS","_registerRequest","addTransform","transform","parse","isBlocking","push","DONE","_processRequests","removeTransform","pos","indexOf","splice","workingQueue","rejected","shift","_transform","send","ret","../transform/transform","./request","28","options","xhr","createXHR","Object","assign","method","requestHeaders","maxRetries","retryAfter","cache","retries","setParam","XMLHttpRequest","ActiveXObject","err","error","getXHR","getUrl","getParamString","event","addEventListener","off","removeEventListener","key","encodeURIComponent","JSON","stringify","slice","getParam","open","hasOwnProperty","setRequestHeader","genericError","setTimeout","ERROR","logLevel","Level","VERBOSE","_globalListeners","LOAD","ABORT","onEvery","offEvery","index","29","Timer","InfoGatherer","ViewTransform","Nqs6Transform","ResourceTransform","YouboraController","map","_init","_registerListeners","setOptions","getOptions","_ping","_sendPing","viewTransform","interval","target","response","pingTime","resourceTransform","stopPings","_initComm","init","getResource","_comm","startPings","isRunning","_initListener","_startListener","_joinListener","_pauseListener","_resumeListener","_seekBeginListener","_seekEndListener","_bufferBeginListener","_bufferEndListener","_errorListener","_fatalErrorListener","_stopListener","_preloadBeginListener","_preloadEndListener","setAdnalyzer","_registerAdnalyzerListeners","_adStartListener","_adJoinListener","_adPauseListener","_adResumeListener","_adBufferBeginListener","_adBufferEndListener","_adStopListener","_sendRequest","emit","_executeBuilder","builder","nextView","diffTime","../actionbuilder/adbufferbegin","../actionbuilder/adbufferend","../actionbuilder/adjoin","../actionbuilder/adpause","../actionbuilder/adresume","../actionbuilder/adstart","../actionbuilder/adstop","../actionbuilder/bufferbegin","../actionbuilder/bufferend","../actionbuilder/error","../actionbuilder/fatalerror","../actionbuilder/init","../actionbuilder/join","../actionbuilder/pause","../actionbuilder/ping","../actionbuilder/preloadbegin","../actionbuilder/preloadend","../actionbuilder/resume","../actionbuilder/seekbegin","../actionbuilder/seekend","../actionbuilder/start","../actionbuilder/stop","../comm/communication","../timer","../transform/nqs6","../transform/resource","../transform/view","./infogatherer","30","Util","controller","_options","_controller","getHost","addProtocol","stripProtocol","getPlayhead","parseNumber","getPlayrate","getFramesPerSecond","getDroppedFrames","getWebkitDroppedFrames","tag","webkitDroppedFrameCount","getDuration","Math","round","getBitrate","getWebkitBitrate","webkitVideoDecodedByteCount","_lastAdBitrate","delta","getThroughput","getRendition","getTitle","getTitle2","getIsLive","getOriginalResource","getTransactionCode","getMetadata","getPlayerVersion","getPlayerName","getCdn","getCdnName","getPluginVersion","getVersion","getExtraparam1","getExtraparam2","getExtraparam3","getExtraparam4","getExtraparam5","getExtraparam6","getExtraparam7","getExtraparam8","getExtraparam9","getExtraparam10","getPosition","getAdPlayhead","getAdDuration","getAdBitrate","getWebkitAdBitrate","getAdTitle","getAdResource","getAdPlayerVersion","getAdMetadata","getAdnalyzerVersion","getPluginInfo","libVersion","getIp","getIsp","getConnectionType","getDeviceCode","getAccountCode","getUsername","getReferer","location","href","getNodeHost","getNodeType","getNodeTypeString","getJoinDuration","getBufferDuration","getSeekDuration","getPauseDuration","getPreloadDuration","getAdJoinDuration","getAdBufferDuration","getAdPauseDuration","getTotalAdDuration","../util","../version","31","Emitter","_listeners","Array","isArray","_eachCallback","32","_emitter","arguments","SILENT","WARNING","NOTICE","DEBUG","LOG","plainLogs","report","msg","level","color","console","log","letters","letter","prefix","_getCurrentTime","document","documentMode","_plainReport","logMethod","debug","d","hh","getDate","mm","getMinutes","ss","getSeconds","mmm","getMilliseconds","m","loadLevelFromUrl","search","exec","m2","./emitter","33","protoProps","staticProps","NewClass","parent","create","enumerable","writable","configurable","34","Options","base","./log","35","../chrono","36","37","Controller","PlayheadMonitor","GenericPlugin","beginMonitoring","getElementById","resumeMonitoring","registerListeners","pauseMonitoring","unregisterListeners","endMonitoring","createBufferMonitor","Type","BUFFER","createSeekMonitor","SEEK","createBufferAndSeekMonitor","INIT","START","JOIN","PAUSE","RESUME","SEEK_BEGIN","SEEK_END","BUFFER_BEGIN","BUFFER_END","FATAL_ERROR","STOP","PRELOAD_BEGIN","PRELOAD_END","PRE_START","PRE_JOIN","PRE_PAUSE","PRE_RESUME","PRE_SEEK_BEGIN","PRE_SEEK_END","PRE_BUFFER_BEGIN","PRE_BUFFER_END","PRE_ERROR","PRE_FATAL_ERROR","PRE_STOP","PRE_PRELOAD_BEGIN","../controller/controller","../emitter","../options","./chronostatus","./flagstatus","./playheadmonitor","38","_plugin","_seekEnabled","_bufferEnabled","_interval","_chrono","_jumpNextProgress","_lastPlayhead","_timer","progress","deltaTime","seekThreshold","kTHRESHOLD_RATIO","bufferThreshold","minBuffer","kMIN_BUFFER_RATIO","currentPlayhead","_getPlayhead","diffPlayhead","abs","NONE","39","applyPolyfills","Function","b","TypeError","C","concat","undefined","output","source","nextKey","Temp","propertiesObject","result","defineProperties","thisArg","len","toString","obj","40","_setTick","clearTimeout","timer","./chrono","41","CdnTransform","cdnName","parsers","parseType","addParser","parser","setCdnName","setParseType","_cdnName","_cdnNodeHost","_cdnNodeTypeString","_cdnNodeType","responses","headerString","_parseResponse","_requestResponse","resp","getAllResponseHeaders","done","headers","split","line","headerName","_executeParser","matches","regex","trim","element","toUpperCase","_cdns","Level3","X-WR-DIAG","Cloudfront","Akamai","Highwinds","Fastly","Balancer","setBalancerHeaderName","add","./transform","42","HlsTransform","_realResource","resource","parentResource","res","lastIndexOf","responseText","43","_cloneParam","entityType","entityValue","to","from","44","info","__super__","_hlsEnabled","_cdnEnabled","_cdnList","_cdnNameHeader","_isBusy","_initResource","_setTimeout","_parseHLS","_parseCDN","_parseTimeout","hlsTransform","_hlsTransform","cdnList","cdnTransform","./cdn","./hls","45","46","_viewIndex","_requestData","_receiveData","_failedData","q","h","c","pt","getViewCode","../actionbuilder/data","47","replace","httpSecure","protocol","def","isNaN","Infinity","listenAllEvents","extraEvents","playerEvents","buildRenditionString","width","height","48","../package.json","49","previousYoubora","noConflict","VERSION","Request","plugins","Generic","./comm/communication","./comm/request","./controller/controller","./options","./plugin/chronostatus","./plugin/flagstatus","./plugin/generic","./plugin/playheadmonitor","./polyfills","./timer","./transform/cdn","./transform/resource","./transform/transform","./util","./version","50","youboralib","51","pkg","Html5","currentTime","duration","currentSrc","playListener","timeupdateListener","pauseListener","playingListener","errorListener","seekingListener","endedListener","onPlay","onTimeupdate","onPause","onPlaying","onError","onSeeking","onEnded"],"mappings":"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","file":"sp.min.js","sourcesContent":["module.exports={\n  \"_args\": [\n    [\n      {\n        \"raw\": \"youboralib@6.0.0-rc\",\n        \"scope\": null,\n        \"escapedName\": \"youboralib\",\n        \"name\": \"youboralib\",\n        \"rawSpec\": \"6.0.0-rc\",\n        \"spec\": \"6.0.0-rc\",\n        \"type\": \"version\"\n      },\n      \"/home/jaguilar/workspace/youboralib6/plugins/html5\"\n    ]\n  ],\n  \"_from\": \"youboralib@6.0.0-rc\",\n  \"_id\": \"youboralib@6.0.0-rc\",\n  \"_inCache\": true,\n  \"_location\": \"/youboralib\",\n  \"_nodeVersion\": \"6.9.1\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"packages-18-east.internal.npmjs.com\",\n    \"tmp\": \"tmp/youboralib-6.0.0-rc.tgz_1480068193823_0.4878544704988599\"\n  },\n  \"_npmUser\": {\n    \"name\": \"jaguilar\",\n    \"email\": \"jaguilar@nicepeopleatwork.com\"\n  },\n  \"_npmVersion\": \"3.10.8\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"raw\": \"youboralib@6.0.0-rc\",\n    \"scope\": null,\n    \"escapedName\": \"youboralib\",\n    \"name\": \"youboralib\",\n    \"rawSpec\": \"6.0.0-rc\",\n    \"spec\": \"6.0.0-rc\",\n    \"type\": \"version\"\n  },\n  \"_requiredBy\": [\n    \"#USER\",\n    \"/\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/youboralib/-/youboralib-6.0.0-rc.tgz\",\n  \"_shasum\": \"49a60bac4fb3b3e437c81de51c516aaa3246b9f5\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"youboralib@6.0.0-rc\",\n  \"_where\": \"/home/jaguilar/workspace/youboralib6/plugins/html5\",\n  \"author\": {\n    \"name\": \"Jordi Aguilar\"\n  },\n  \"bugs\": {\n    \"email\": \"project@hostname.com\"\n  },\n  \"dependencies\": {},\n  \"description\": \"[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com) [![Build Status](https://travis-ci.org/NicePeopleAtWork/Youbora-YouboraLib-JS.svg)](https://travis-ci.org/NicePeopleAtWork/Youbora-YouboraLib\",\n  \"devDependencies\": {\n    \"browserify\": \"^13.1.0\",\n    \"codecov\": \"^1.0.1\",\n    \"del\": \"^2.2.2\",\n    \"eslint\": \"^3.7.1\",\n    \"eslint-config-standard\": \"^6.2.0\",\n    \"eslint-plugin-node\": \"^2.1.2\",\n    \"eslint-plugin-promise\": \"^3.4.0\",\n    \"eslint-plugin-standard\": \"^2.0.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-load-plugins\": \"^1.3.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sourcemaps\": \"^1.6.0\",\n    \"gulp-streamify\": \"^1.0.2\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"istanbul\": \"^0.4.5\",\n    \"jasmine\": \"^2.5.2\",\n    \"mock-browser\": \"^0.92.12\",\n    \"through2\": \"^2.0.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.7.0\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"49a60bac4fb3b3e437c81de51c516aaa3246b9f5\",\n    \"tarball\": \"https://registry.npmjs.org/youboralib/-/youboralib-6.0.0-rc.tgz\"\n  },\n  \"gitHead\": \"3faa412c235955726fd798158265fe5ce84c6644\",\n  \"homepage\": \"https://github.com/NicePeopleAtWork/Youbora-YouboraLib-JS#readme\",\n  \"license\": \"MIT\",\n  \"main\": \"src/youboralib.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"jaguilar\",\n      \"email\": \"jaguilar@nicepeopleatwork.com\"\n    }\n  ],\n  \"name\": \"youboralib\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/NicePeopleAtWork/Youbora-YouboraLib-JS.git\"\n  },\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"postversion\": \"git push && git push --tags\",\n    \"pretest\": \"npm run build\",\n    \"preversion\": \"npm test\",\n    \"test\": \"istanbul cover --include-all-sources --root src ./node_modules/jasmine/bin/jasmine.js\",\n    \"version\": \"npm run build && git add -A\"\n  },\n  \"version\": \"6.0.0-rc\"\n}\n","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar YBRequest = require('../comm/request')\nvar FlagStatus = require('../plugin/flagstatus')\nvar ChronoStatus = require('../plugin/chronostatus')\n\nvar ActionBuilder = YouboraObject.extend(\n  /** @lends ActionBuilder.prototype */\n  {\n    /**\n     * This class will build params associated with each event: /start, /joinTime...\n     *\n     * @constructs ActionBuilder\n     * @extends YouboraObject\n     * @memberof youbora\n     * @abstract\n     *\n     * @param {InfoManager} gatherer An InfoManager instance\n     */\n    constructor: function (infomanager) {\n      this._info = infomanager\n\n      this._monitor = infomanager.plugin.monitor\n      this._flags = infomanager.plugin.flags\n      this._chronos = infomanager.plugin.chronos\n\n      if (infomanager.plugin.adnalyzer) {\n        this._adFlags = infomanager.plugin.adnalyzer.flags\n        this._adChronos = infomanager.plugin.adnalyzer.chronos\n        this._adMonitor = infomanager.plugin.adnalyzer._adMonitor\n      } else {\n        this._adFlags = new FlagStatus()\n        this._adChronos = new ChronoStatus()\n      }\n    },\n\n    /**\n     * Override this method to check the associated flags. ie: return this._info.getIsStartSent()\n     */\n    getIsAllowed: function () {\n      return true\n    },\n\n    /**\n     * Override this method to update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.joinDuration.start()\n     *\n     * @returns {boolean}\n     */\n    setChronosAndFlags: function () {},\n\n    /**\n     * Override this method to return the service name. ie: /start, /joinTime...\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/'\n    },\n\n    /**\n     * Override this method to return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function () {\n      return {}\n    },\n\n    /**\n     * Notices when the request is succesfully generated. Override this for custom logs\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (req) {\n      Log.notice(this.getServiceName())\n    },\n\n    /**\n     * Returns a request ready to be enqueued using {@link Communication#sendRequest}\n     *\n     * @param {object} [params] Params to be sent to getParams function.\n     * @return {YBRequest}\n     */\n    buildRequest: function (params) {\n      var request = null\n\n      if (this.getIsAllowed()) {\n        this.setChronosAndFlags()\n\n        params = this.getParams(params)\n        var service = this.getServiceName()\n\n        request = new YBRequest(null, service, params)\n\n        this.notice(params)\n      }\n\n      return request\n    },\n\n    /**\n     * Adds to params all the entities specified in paramList, unless they are already set.\n     *\n     * @private\n     * @param {Object} params Object of params key:value.\n     * @param {Array[string]} paramList A list of params to fetch.\n     */\n    _buildParams: function (params, paramList) {\n      params = params || {}\n      paramList.forEach(function (param) {\n        if (params[param]) { return }\n        var getterName = ActionBuilder.Param[param]\n\n        if (this._info[getterName]) {\n          params[param] = this._info[getterName]()\n          this._info.lastSent[param] = params[param]\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }.bind(this))\n      return params\n    },\n\n    /**\n     * Similar to _buildParams but only adds params if they have changed.\n     *\n     * @private\n     * @param {Object} params Object of params key:value.\n     * @param {Array[string]} paramList A list of params to fetch.\n     */\n    _buildParamsIfDifferent: function (params, paramList) {\n      params = params || {}\n      paramList.forEach(function (param) {\n        if (params[param]) { return }\n        var getterName = ActionBuilder.Param[param]\n\n        if (this._info[getterName]) {\n          var value = this._info[getterName]()\n          if (this._info.lastSent[param] !== value && value) {\n            params[param] = value\n            this._info.lastSent[param] = value\n          }\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }.bind(this))\n      return params\n    }\n  }, {\n    // Static Members\n    /** List of params and its related getter */\n    Param: {\n      playhead: 'getPlayhead',\n      playrate: 'getPlayrate',\n      fps: 'getFramesPerSecond',\n      droppedFrames: 'getDroppedFrames',\n      mediaDuration: 'getDuration',\n      bitrate: 'getBitrate',\n      throughput: 'getThroughput',\n      rendition: 'getRendition',\n      title: 'getTitle',\n      title2: 'getTitle2',\n      live: 'getIsLive',\n      mediaResource: 'getResource',\n      transactionCode: 'getTransactionCode',\n      properties: 'getMetadata',\n      playerVersion: 'getPlayerVersion',\n      player: 'getPlayerName',\n      cdn: 'getCdn',\n      pluginVersion: 'getPluginVersion',\n\n      param1: 'getExtraparam1',\n      param2: 'getExtraparam2',\n      param3: 'getExtraparam3',\n      param4: 'getExtraparam4',\n      param5: 'getExtraparam5',\n      param6: 'getExtraparam6',\n      param7: 'getExtraparam7',\n      param8: 'getExtraparam8',\n      param9: 'getExtraparam9',\n      param10: 'getExtraparam10',\n\n      adPosition: 'getAdPosition',\n      adPlayhead: 'getAdPlayhead',\n      adDuration: 'getAdDuration',\n      adBitrate: 'getAdBitrate',\n      adTitle: 'getAdTitle',\n      adResource: 'getAdResource',\n      adPlayerVersion: 'getAdPlayerVersion',\n      adProperties: 'getAdMetadata',\n      adnalyzerVersion: 'getAdnalyzerVersion',\n\n      pluginInfo: 'getPluginInfo',\n\n      isp: 'getIsp',\n      connectionType: 'getConnectionType',\n      ip: 'getIp',\n\n      deviceCode: 'getDeviceCode',\n\n      system: 'getAccountCode',\n      accountCode: 'getAccountCode',\n      username: 'getUsername',\n\n      joinDuration: 'getJoinDuration',\n      bufferDuration: 'getBufferDuration',\n      seekDuration: 'getSeekDuration',\n      pauseDuration: 'getPauseDuration',\n\n      adJoinDuration: 'getAdJoinDuration',\n      adBufferDuration: 'getAdBufferDuration',\n      totalAdDuration: 'getTotalAdDuration',\n      preloadDuration: 'getPreloadDuration',\n      adPauseDuration: 'getAdPauseDuration',\n\n      referer: 'getReferer',\n\n      nodeHost: 'getNodeHost',\n      nodeType: 'getNodeType',\n      nodeTypeString: 'getNodeTypeString'\n    }\n\n  }\n)\n\nmodule.exports = ActionBuilder\n","var ActionBuilder = require('./actionbuilder')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdBufferBeginActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdBufferBeginActionBuilder = ActionBuilder.extend(\n  /** @lends AdBufferBeginActionBuilder.prototype */\n  {\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdBufferBeginSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._adFlags.isJoined &&\n        !this._adFlags.isBuffering\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._adFlags.isBuffering = true\n\n      this._adChronos.buffer.start()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adBuffer-begin'\n    }\n  }\n)\n\nmodule.exports = AdBufferBeginActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdBufferEndActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdBufferEndActionBuilder = ActionBuilder.extend(\n  /** @lends AdBufferEndActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdBufferEndSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._adFlags.isJoined &&\n        this._adFlags.isBuffering\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._adFlags.isBuffering = false\n\n      this._adChronos.buffer.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adBufferUnderrun'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.adBufferDuration + 'ms')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, ['adBufferDuration', 'adPlayhead', 'adPosition'])\n      params.adNumber = this._info.lastSent.adNumber\n      return params\n    }\n  }\n)\n\nmodule.exports = AdBufferEndActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdJoinActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdJoinActionBuilder = ActionBuilder.extend(\n  /** @lends AdJoinActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdJoinSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._adFlags.isStarted &&\n        !this._adFlags.isJoined\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._adFlags.isJoined = true\n\n      this._adChronos.join.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adJoin'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.joinDuration + 'ms')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, ['joinAdDuration', 'adPlayhead'])\n      params = this._buildParamsIfDifferent(params, [\n        'adTitle',\n        'adDuration',\n        'adResource'\n      ])\n      params.adNumber = this._info.lastSent.adNumber\n      return params\n    }\n  }\n)\n\nmodule.exports = AdJoinActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdPauseActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdPauseActionBuilder = ActionBuilder.extend(\n  /** @lends AdPauseActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdPauseSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._adFlags.isJoined &&\n        !this._adFlags.isPaused\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._adFlags.isPaused = true\n\n      this._adChronos.pause.start()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adPause'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' at ' + params.adPlayhead + 's')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, ['adPlayhead', 'adPosition'])\n      params.adNumber = this._info.lastSent.adNumber\n      return params\n    }\n  }\n)\n\nmodule.exports = AdPauseActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdResumeActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdResumeActionBuilder = ActionBuilder.extend(\n  /** @lends AdResumeActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdResumeSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._adFlags.isJoined &&\n        this._adFlags.isPaused\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._adFlags.isPaused = false\n\n      this._adChronos.pause.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adResume'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' at ' + params.adPlayhead + 's')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, ['adPauseDuration', 'adPlayhead', 'adPosition'])\n      params.adNumber = this._info.lastSent.adNumber\n      return params\n    }\n  }\n)\n\nmodule.exports = AdResumeActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdStartActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdStartActionBuilder = ActionBuilder.extend(\n  /** @lends AdStartActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdStartSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isStarted &&\n        !this._adFlags.isStarted\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._adFlags.isStarted = true\n\n      this._adChronos.join.start()\n      this._adChronos.total.start()\n\n      if (this._adMonitor) this._adMonitor.start()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adStart'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + (params.adTitle || params.adResource))\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      // We need to get this before buildParams is called or adNumber will be overrided\n      var adNumber = this._getAdNumber()\n\n      params = this._buildParams(params, [\n        'playhead',\n        'adTitle',\n        'adPosition',\n        'adDuration',\n        'adResource',\n        'adPlayerVersion',\n        'adProperties',\n\n        'adnalyzerVersion'\n      ])\n      params.adNumber = adNumber\n\n      return params\n    },\n\n    _getAdNumber: function () {\n      var adNumber = this._info.lastSent.adNumber\n      if (adNumber && this._info.lastSent.adPosition === this._info.getAdPosition()) {\n        adNumber += 1\n      } else {\n        adNumber = 1\n      }\n      this._info.lastSent.adNumber = adNumber\n      return adNumber\n    }\n  }\n)\n\nmodule.exports = AdStartActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs AdStopActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar AdStopActionBuilder = ActionBuilder.extend(\n  /** @lends AdStopActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsAdStopSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._adFlags.isStarted\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      var chrono = this._adChronos.total\n      chrono.stop()\n\n      this._adFlags.reset()\n      this._adChronos.reset()\n\n      this._adChronos.total = chrono\n\n      if (this._adMonitor) this._adMonitor.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/adStop'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.totalAdDuration + 'ms')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      var params = this._buildParams(params, [\n        'adBitrate',\n        'adPlayhead',\n        'totalAdDuration',\n        'adPosition'\n      ])\n      params.adNumber = this._info.lastSent.adNumber\n      return params\n    }\n  }\n)\n\nmodule.exports = AdStopActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs BufferBeginActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar BufferBeginActionBuilder = ActionBuilder.extend(\n  /** @lends BufferBeginActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsBufferBeginSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isJoined &&\n        !this._flags.isBuffering\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * Will convert from seek if e.data.convertFromSeek is true.\n     * ie: this._info.plugin.chronos.total.start()\n     *\n     * @param {Object} [e] The event info\n     */\n    setChronosAndFlags: function (e) {\n      if (e.data && e.data.convertFromSeek === true && this._flags.isSeeking) {\n        Log.notice('Converting current buffer to seek')\n\n        this._chronos.buffer.startTime = this._chronos.seek.startTime\n        this._chronos.buffer.lastTime = 0\n        this._chronos.seek.stop()\n\n        this._flags.isSeeking = false\n      } else {\n        this._chronos.buffer.start()\n      }\n\n      this._flags.isBuffering = true\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/buffer-begin'\n    }\n  }\n)\n\nmodule.exports = BufferBeginActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs BufferEndActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar BufferEndActionBuilder = ActionBuilder.extend(\n  /** @lends BufferEndActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsBufferEndSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isJoined &&\n        this._flags.isBuffering\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isBuffering = false\n\n      this._chronos.buffer.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/bufferUnderrun'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.bufferDuration + 'ms')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      return this._buildParams(params, ['bufferDuration', 'playhead'])\n    }\n  }\n)\n\nmodule.exports = BufferEndActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs DataActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar DataActionBuilder = ActionBuilder.extend(\n  /** @lends DataActionBuilder.prototype */\n  {\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/data'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.system)\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, ['pluginVersion', 'system'])\n      params.apiVersion = 'v6,v7'\n      params.outputformat = 'jsonp'\n      return params\n    }\n  }\n)\n\nmodule.exports = DataActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar StartActionBuilder = require('./start')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs ErrorActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar ErrorActionBuilder = ActionBuilder.extend(\n  /** @lends ErrorActionBuilder.prototype */\n  {\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/error'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.errorMsg)\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = new StartActionBuilder(this._info).getParams(params)\n      return this._buildParams(params, ['player'])\n    }\n  }\n)\n\nmodule.exports = ErrorActionBuilder\n","var ErrorActionBuilder = require('./error')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs FatalErrorActionBuilder\n * @extends ErrorActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar FatalErrorActionBuilder = ErrorActionBuilder.extend(\n  /** @lends FatalErrorActionBuilder.prototype */\n  {\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.joinDuration.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.reset()\n      this._adFlags.reset()\n      this._chronos.reset()\n      this._adChronos.reset()\n\n      this._flags.isHalted = true\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' FATAL ' + params.errorMsg)\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = ErrorActionBuilder.prototype.getParams.apply(this, params)\n      params.errorLevel = 'fatal'\n      return params\n    }\n  }\n)\n\nmodule.exports = FatalErrorActionBuilder\n","var StartActionBuilder = require('./start')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs InitActionBuilder\n * @extends StartActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar InitActionBuilder = StartActionBuilder.extend(\n  /** @lends InitActionBuilder.prototype */\n  {\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.joinDuration.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isInitiated = true\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/init'\n    }\n  }\n)\n\nmodule.exports = InitActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs JoinActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar JoinActionBuilder = ActionBuilder.extend(\n  /** @lends JoinActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsJoinSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isStarted &&\n        !this._flags.isJoined &&\n        !this._adFlags.isStarted\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.join.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isJoined = true\n\n      this._chronos.join.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/joinTime'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + params.joinDuration + 'ms')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, ['joinDuration', 'playhead'])\n      return this._buildParamsIfDifferent(params, [\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource'\n      ])\n    }\n  }\n)\n\nmodule.exports = JoinActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs PauseActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar PauseActionBuilder = ActionBuilder.extend(\n  /** @lends PauseActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsPauseSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isJoined &&\n        !this._flags.isPaused\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isPaused = true\n\n      this._chronos.pause.start()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/pause'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' at ' + params.playhead + 's')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      return this._buildParams(params, ['playhead'])\n    }\n  }\n)\n\nmodule.exports = PauseActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs PingActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar PingActionBuilder = ActionBuilder.extend(\n  /** @lends PingActionBuilder.prototype */\n  {\n    /**\n     * Check the associated flags. ie: return this._info.getIsPingSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isStarted\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/ping'\n    },\n\n    /**\n     * Logs successful request.\n     */\n    notice: function (params) {\n      Log.verbose(this.getServiceName())\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      params = this._buildParams(params, [\n        'playhead',\n        'bitrate',\n        'throughput',\n        'fps',\n        'droppedFrames',\n        'playrate',\n\n        'adPlayhead',\n        'adBitrate'\n      ])\n\n      if (this._flags.isBuffering) params = this._buildParams(params, ['bufferDuration'])\n      if (this._flags.isPaused) params = this._buildParams(params, ['pauseDuration'])\n      if (this._flags.isSeeking) params = this._buildParams(params, ['seekDuration'])\n      if (this._flags.isAdBuffering) params = this._buildParams(params, ['adBufferDuration'])\n\n      params.entities = this._getChangedEntities()\n\n      return params\n    },\n\n    /**\n     * Return changed entities since last check\n     *\n     * @private\n     */\n    _getChangedEntities: function () {\n      return this._buildParamsIfDifferent({}, [\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'adTitle',\n        'connectionType',\n        'deviceCode',\n        'ip',\n        'username',\n        'cdn',\n        'nodeHost',\n        'nodeType',\n        'nodeTypeString'\n      ])\n    }\n  }\n)\n\nmodule.exports = PingActionBuilder\n","var ActionBuilder = require('./actionbuilder')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs PreloadBeginActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar PreloadBeginActionBuilder = ActionBuilder.extend(\n  /** @lends PreloadBeginActionBuilder.prototype */\n  {\n    /**\n     * Check the associated flags. ie: return this._info.getIsPreloadBeginSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isPreloading\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isPreloading = true\n\n      this._chronos.preload.start()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/preload-begin'\n    }\n  }\n)\n\nmodule.exports = PreloadBeginActionBuilder\n","var ActionBuilder = require('./actionbuilder')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs PreloadEndActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar PreloadEndActionBuilder = ActionBuilder.extend(\n  /** @lends PreloadEndActionBuilder.prototype */\n  {\n    /**\n     * Check the associated flags. ie: return this._info.getIsPreloadEndSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return this._flags.isPreloading\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      if (this._flags.isPreloading) {\n        this._flags.isPreloading = false\n\n        this._chronos.preload.stop()\n      }\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/preload-end ' + this._chronos.preload.getDeltaTime(false) + 'ms'\n    }\n  }\n)\n\nmodule.exports = PreloadEndActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs ResumeActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar ResumeActionBuilder = ActionBuilder.extend(\n  /** @lends ResumeActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsResumeSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isJoined &&\n        this._flags.isPaused\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isPaused = false\n\n      this._chronos.pause.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/resume'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' at ' + params.playhead + 's')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      return this._buildParams(params, ['pauseDuration', 'playhead'])\n    }\n  }\n)\n\nmodule.exports = ResumeActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs SeekBeginActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar SeekBeginActionBuilder = ActionBuilder.extend(\n  /** @lends SeekBeginActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsSeekBeginSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isJoined &&\n        !this._flags.isSeeking\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * Will convert from buffer if e.data.convertFromSeek is NOT false.\n     * ie: this._info.plugin.chronos.total.start()\n     *\n     * @param {Object} [e] The event info\n     */\n    setChronosAndFlags: function (e) {\n      if (e.data && e.data.convertFromBuffer !== false && this._flags.isBuffering) {\n        Log.notice('Converting current buffer to seek')\n\n        this._chronos.seek.startTime = this._chronos.buffer.startTime\n        this._chronos.seek.lastTime = 0\n        this._chronos.buffer.stop()\n\n        this._flags.isBuffering = false\n      } else {\n        this._chronos.seek.start()\n      }\n\n      this._flags.isSeeking = true\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/seek-begin'\n    }\n  }\n)\n\nmodule.exports = SeekBeginActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs SeekEndActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar SeekEndActionBuilder = ActionBuilder.extend(\n  /** @lends SeekEndActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsSeekEndSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isJoined &&\n        this._flags.isSeeking\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isSeeking = false\n\n      this._chronos.seek.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/seek'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() +\n        ' to ' + params.playhead +\n        ' in ' + params.seekDuration + 'ms'\n      )\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      return this._buildParams(params, ['seekDuration', 'playhead'])\n    }\n  }\n)\n\nmodule.exports = SeekEndActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs StartActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar StartActionBuilder = ActionBuilder.extend(\n  /** @lends StartActionBuilder.prototype */\n  {\n\n    /**\n     * Check the associated flags. ie: return this._info.getIsStartSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isStarted\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.joinDuration.start()\n     */\n    setChronosAndFlags: function () {\n      this._flags.isStarted = true\n      this._flags.isHalted = false\n\n      if (this._chronos.join.startTime === 0) this._chronos.join.start()\n      this._chronos.total.start()\n\n      if (this._monitor) this._monitor.start()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/start'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' ' + (params.title || params.mediaResource))\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      return this._buildParams(params, [\n        'accountCode',\n        'username',\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource',\n        'transactionCode',\n        'properties',\n        'cdn',\n        'playerVersion',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'pluginVersion',\n        'pluginInfo',\n        'isp',\n        'connectionType',\n        'ip',\n        'deviceCode',\n        'preloadDuration'\n      ])\n    }\n  }\n)\n\nmodule.exports = StartActionBuilder\n","var ActionBuilder = require('./actionbuilder')\nvar Log = require('../log')\n\n/**\n * This class will build request, manipulate flags and chronos for the associated event.\n *\n * @constructs StopActionBuilder\n * @extends ActionBuilder\n * @memberof youbora\n * @abstract\n */\nvar StopActionBuilder = ActionBuilder.extend(\n  /** @lends StopActionBuilder.prototype */\n  {\n    /**\n     * Check the associated flags. ie: return this._info.getIsResumeSent()\n     *\n     * @returns {boolean}\n     */\n    getIsAllowed: function () {\n      return !this._flags.isHalted &&\n        this._flags.isStarted\n    },\n\n    /**\n     *update chronos and flags as needed.\n     * ie: this._info.plugin.chronos.total.start()\n     */\n    setChronosAndFlags: function () {\n      var chrono = this._chronos.total\n      chrono.stop()\n\n      this._flags.reset()\n      this._adFlags.reset()\n      this._chronos.reset()\n      this._adChronos.reset()\n\n      this._chronos.total = chrono\n\n      if (this._monitor) this._monitor.stop()\n    },\n\n    /**\n     * Return the service name\n     *\n     * @returns {string}\n     */\n    getServiceName: function () {\n      return '/stop'\n    },\n\n    /**\n     * Logs successful request.\n     *\n     * @param {object} params Object of params created.\n     */\n    notice: function (params) {\n      Log.notice(this.getServiceName() + ' at ' + params.playhead + 's')\n    },\n\n    /**\n     * Return the params needed for the request.\n     *\n     * @returns {object}\n     */\n    getParams: function (params) {\n      return this._buildParams(params, ['bitrate', 'playhead'])\n    }\n  }\n)\n\nmodule.exports = StopActionBuilder\n","var YouboraObject = require('./object')\n\nvar Chrono = YouboraObject.extend(\n  /** @lends Chrono.prototype */\n  {\n    /**\n     * This class calculates time lapses between two points.\n     *\n     * @constructs Chrono\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      /** Start time */\n      this.startTime = 0\n\n      /** Stop time */\n      this.stopTime = 0\n\n      /** Offset to be added to deltaTime and stop. in ms. */\n      this.offset = 0\n    },\n\n    /**\n     * Returns the time between start() and the last stop() in ms. Returns -1 if start wasn't \n     * called.\n     * @param {boolean} [stop=true] If true, it will force a stop() if it wasn't called before.\n     * @return {number} Time lapse in ms.\n     */\n    getDeltaTime: function (stop) {\n      var now = new Date().getTime()\n      if (this.startTime) {\n        if (stop && !this.stopTime) { this.stopTime = now }\n        return this.offset + (now - this.startTime)\n      } else {\n        return -1\n      }\n    },\n\n    /**\n     * Starts the chrono.\n     */\n    start: function () {\n      this.startTime = new Date().getTime()\n      this.stopTime = 0\n    },\n\n    /**\n     * Stops the timer and returns current delta time.\n     * @return {number} Returns the delta time\n     */\n    stop: function () {\n      this.stopTime = new Date().getTime()\n      return this.startTime ? this.offset + (this.stopTime - this.startTime) : -1\n    }\n  }\n)\n\nmodule.exports = Chrono\n","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar YBRequest = require('./request')\nvar Transform = require('../transform/transform')\n\nvar Communication = YouboraObject.extend(\n  /** @lends Communication.prototype */\n  {\n    /**\n     * Youbora Communication implements an abstraction layer over API requests.\n     * Internally, Communication implements queues of {@link Request} objects.\n     * This queue can be blocked using {@link Transform}\n     *\n     * @constructs Communication\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {string} host The fastdata host address.\n     * @param {boolean} httpSecure True for https, false for http, undefined for //.\n     */\n    constructor: function () {\n      /** Array of {@link Transform}, only when the array is empty the request Queues will begin sending. */\n      this.transforms = []\n\n      /**\n       * Queue of {@link YBRequest}\n       * @private\n       */\n      this._requests = []\n    },\n\n    /**\n     * Enqueues the request provided.\n     *\n     * @param {YBRequest} request Request to be enqueued\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    sendRequest: function (request, callback) {\n      if (request) {\n        if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n        this._registerRequest(request)\n      }\n    },\n\n    /**\n     * Build a generic request to the given host.\n     *\n     * @param {string} host Host of the service called.\n     * @param {string} service A string with the service to be called. ie: '/data', '/joinTime'...\n     * @param {Object} [params] Object of key:value params.\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    buildRequest: function (host, service, params, callback) {\n      params = params || {}\n      var request = new YBRequest(host, service, params)\n      if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n      this._registerRequest(request)\n    },\n\n    /**\n     * Adds a Transform to the queue. See {@link Transform}.\n     *\n     * @param {RequestTransform} transform\n     */\n    addTransform: function (transform) {\n      if (transform.parse && transform.isBlocking) {\n        this.transforms.push(transform)\n        transform.on(Transform.Event.DONE, this._processRequests.bind(this))\n      } else {\n        Log.warn(transform + ' is not a valid RequestTransform.')\n      }\n    },\n\n    /**\n     * Removes a {@link Transform}.\n     *\n     * @param {RequestTransform} transform Transform object to remove.\n     */\n    removeTransform: function (transform) {\n      var pos = this.transforms.indexOf(transform)\n      if (pos !== -1) {\n        this.transforms.splice(pos, 1)\n      } else {\n        Log.warn('Trying to remove unexisting Transform \\'' + transform + '\\'.')\n      }\n    },\n\n    /**\n     * Adds an {@link YBRequest} to the queue of requests.\n     *\n     * @private\n     * @param {YBRequest} request The Request to be queued.\n     */\n    _registerRequest: function (request) {\n      this._requests.push(request)\n      this._processRequests()\n    },\n\n    /**\n     * Execute pending requests in the queue. Returns rejected ones to the queue.\n     * @private\n     */\n    _processRequests: function () {\n      var workingQueue = this._requests\n      this._requests = []\n\n      var rejected = []\n      while (workingQueue.length) {\n        var request = workingQueue.shift()\n        if (this._transform(request)) {\n          request.send()\n        } else {\n          rejected.push(request)\n        }\n      }\n\n      while (rejected.length) {\n        this._requests.push(rejected.shift())\n      }\n    },\n\n    /**\n     * Pass the given request to each transform.\n     * @private\n     * @returns {bool} True if everything is right. False if some parser rejected it.\n     */\n    _transform: function (request) {\n      var ret = true\n      this.transforms.forEach(function (transform) {\n        if (transform.isBlocking(request)) {\n          ret = false\n          return // break foreach loop\n        } else {\n          transform.parse(request)\n        }\n      })\n      return ret\n    }\n  })\n\nmodule.exports = Communication\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = YouboraObject.extend(\n  /** @lends YBRequest.prototype */\n  {\n    /**\n     * YBYBRequest class will wrap XmlHttpRequest and extend its functionality, allowing youbora\n     * to manage queues, blockers and retries.\n     *\n     * @constructs YBRequest\n     * @extends Object\n     * @memberof youbora\n     *\n     * @param {string} host URL of the request. ie: nqs.nice264.com\n     * @param {string} [service] Name of the service. ie '/start'\n     * @param {Object} [params] Object of key:value params.\n     * @param {Object} [options] Object with custom options.\n     * @param {string} [options.method=\"GET\"] Specifies the method of the request. ie: \"GET\", \"HEAD\".\n     * @param {string} [options.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [options.retryAfter=5000] Time in ms before sending a failed request again.\n     * 0 to disable.\n     * @param {number} [options.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [options.cache=false] If false, timestamp will be added to each request to\n     * prevent caching.\n     */\n    constructor: function (host, service, params, options) {\n      /** Instance of XmlHttpRequest (or the item returned by createXHR method). */\n      this.xhr = this.createXHR()\n\n      /** Host of the request */\n      this.host = host || ''\n\n      /** Service of the request */\n      this.service = service || ''\n\n      /** Object of params of the request */\n      this.params = params || {}\n\n      /** Options of the request */\n      this.options = Object.assign({\n        method: 'GET',\n        requestHeaders: {},\n        maxRetries: 3,\n        retryAfter: 5000,\n        cache: false\n      }, options)\n\n      /** Number of times this request has failed and retried. */\n      this.retries = 0\n\n      // Add timemark\n      if (!this.options.cache) {\n        this.setParam('timemark', new Date().getTime())\n      }\n    },\n\n    /**\n     * Creates XMLHttpRequest if it is available in the browser.\n     * If not, it tries to create an ActiveXObject XMLHTTP item.\n     * Override this function for custom environments.\n     *\n     * @return YBRequest handler.\n     */\n    createXHR: function () {\n      try {\n        if (XMLHttpRequest) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      } catch (err) {\n        Log.error(err)\n        return {}\n      }\n    },\n\n    /**\n     * Returns xhr object.\n     *\n     * @return {XmlHttpRequest} object.\n     */\n    getXHR: function () {\n      return this.xhr\n    },\n\n    /** Returns the complete formed url of the request url+service+params. */\n    getUrl: function () {\n      return this.host + this.service + this.getParamString()\n    },\n\n    /**\n     * Wraps this.getHXR.addEventListener.\n     * Accepts a callback that receives (this YBRequest, event)\n     */\n    on: function (event, callback) {\n      if (typeof callback === 'function') {\n        this.xhr.addEventListener(event, callback.bind(this, this))\n      } else {\n        Log.warn('Tried to register a not-a-function callback.')\n      }\n      return this\n    },\n\n    /** Wraps this.getHXR.removeEventListener */\n    off: function (event, callback) {\n      if (typeof callback === 'function') {\n        this.xhr.removeEventListener(event, callback)\n      } else {\n        Log.warn('Tried to register a not-a-function callback.')\n      }\n      return this\n    },\n\n    /**\n     * Returns the params of the request, stringified.\n     * ie: '?pluginVersion=5.1.0&systemCode=nicetv'.\n     * @return {string} Concatenated Params\n     */\n    getParamString: function () {\n      try {\n        var params = '?'\n        for (var key in this.params) {\n          var param = this.params[key]\n          if (param !== null && typeof param === 'object') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(JSON.stringify(param)) + '&'\n          } else if (param !== null && typeof param !== 'undefined' && param !== '') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(param) + '&'\n          }\n        }\n        return params.slice(0, -1)\n      } catch (err) {\n        Log.error(err)\n        return ''\n      }\n    },\n\n    /**\n     * Returns the value of the given param, or undefined.\n     * @param {string} key Name of the param.\n     * @return {any}\n     */\n    getParam: function (key) {\n      return this.params[key]\n    },\n\n    /**\n     * Add or set a parameter for the request.\n     * ie: if you want to add 'username=user' use setParam('username', 'user').\n     * @param {string} key Name of the param.\n     * @param {string} value Name of the param.\n     * @return this\n     */\n    setParam: function (key, value) {\n      this.params[key] = value\n      return this\n    },\n\n    /**\n     * Sends the request.\n     *\n     * @return returns xhr.send()\n     */\n    send: function () {\n      try {\n        this.xhr.open(this.options.method, this.getUrl(), true)\n\n        // Add custom headers\n        if (this.options.requestHeaders) {\n          for (var key in this.options.requestHeaders) {\n            if (this.options.requestHeaders.hasOwnProperty(key)) {\n              this.xhr.setRequestHeader(key, this.options.requestHeaders[key])\n            }\n          }\n        }\n\n        // Add retries system\n        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {\n          var genericError = function () {\n            if (this.retries >= this.options.maxRetries) {\n              Log.error('Aborting failed request \"' + this.service + '\". Max retries reached.')\n            } else {\n              Log.warn('YBRequest \"' + this.service + '\" failed. Retry ' + (this.retries + 1) + ' of ' +\n                this.options.maxRetries + ' in ' + this.options.retryAfter + 'ms.')\n\n              setTimeout(function () {\n                this.retries += 1\n                this.send()\n              }.bind(this), this.options.retryAfter)\n            }\n          }\n          if (this.retries === 0) {\n            this.on(YBRequest.Event.ERROR, genericError.bind(this))\n          }\n        }\n\n        // Log XHR\n        if (Log.logLevel <= Log.Level.VERBOSE) {\n          Log.verbose('XHR Req: ' + this.getUrl())\n        }\n\n        // Register 'on every' listeners\n        for (var event in YBRequest._globalListeners) {\n          YBRequest._globalListeners[event].forEach(function (callback) {\n            this.on(event, callback)\n          }.bind(this))\n        }\n\n        // Send\n        return this.xhr.send()\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  },\n\n  /** @lends YBRequest */\n  {\n    /**\n     * List of events that could be fired from XHR\n     * @enum\n     */\n    Event: {\n      /** Request successful */\n      SUCCESS: 'load',\n      /** Request successful */\n      LOAD: 'load', // Native JS\n      /** Request returned error */\n      ERROR: 'error',\n      /** Request aborted */\n      ABORT: 'abort'\n    },\n\n    /** @private */\n    _globalListeners: {},\n\n    /**\n     * Adds a callback to every instance.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    onEvery: function (event, callback) {\n      if (typeof callback === 'function') {\n        YBRequest._globalListeners[event] = YBRequest._globalListeners[event] || []\n        YBRequest._globalListeners[event].push(callback)\n      } else {\n        Log.warn('Callback ' + callback + ' is not a function.')\n      }\n    },\n\n    /**\n     * Removes a global callback\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    offEvery: function (event, callback) {\n      if (YBRequest._globalListeners[event]) {\n        var index = YBRequest._globalListeners[event].indexOf(callback)\n        if (index !== -1) {\n          YBRequest._globalListeners[event].splice(index, 1)\n        }\n      }\n    }\n  })\n\nmodule.exports = YBRequest\n","var YouboraObject = require('../object')\nvar Timer = require('../timer')\nvar Log = require('../log')\n\nvar Communication = require('../comm/communication')\nvar InfoGatherer = require('./infogatherer')\nvar ViewTransform = require('../transform/view')\nvar Nqs6Transform = require('../transform/nqs6')\nvar ResourceTransform = require('../transform/resource')\n\nvar PingActionBuilder = require('../actionbuilder/ping')\nvar PreloadBeginActionBuilder = require('../actionbuilder/preloadbegin')\nvar PreloadEndActionBuilder = require('../actionbuilder/preloadend')\nvar InitActionBuilder = require('../actionbuilder/init')\nvar StartActionBuilder = require('../actionbuilder/start')\nvar JoinActionBuilder = require('../actionbuilder/join')\nvar PauseActionBuilder = require('../actionbuilder/pause')\nvar ResumeActionBuilder = require('../actionbuilder/resume')\nvar SeekBeginActionBuilder = require('../actionbuilder/seekbegin')\nvar SeekEndActionBuilder = require('../actionbuilder/seekend')\nvar BufferBeginActionBuilder = require('../actionbuilder/bufferbegin')\nvar BufferEndActionBuilder = require('../actionbuilder/bufferend')\nvar StopActionBuilder = require('../actionbuilder/stop')\nvar ErrorActionBuilder = require('../actionbuilder/error')\nvar FatalErrorActionBuilder = require('../actionbuilder/fatalerror')\nvar AdStartActionBuilder = require('../actionbuilder/adstart')\nvar AdJoinActionBuilder = require('../actionbuilder/adjoin')\nvar AdPauseActionBuilder = require('../actionbuilder/adpause')\nvar AdResumeActionBuilder = require('../actionbuilder/adresume')\nvar AdBufferBeginActionBuilder = require('../actionbuilder/adbufferbegin')\nvar AdBufferEndActionBuilder = require('../actionbuilder/adbufferend')\nvar AdStopActionBuilder = require('../actionbuilder/adstop')\n\nvar YouboraController = YouboraObject.extend(\n  /** @lends YouboraController.prototype */\n  {\n    /**\n     * This class will manage the main flow of the application.\n     *\n     * @constructs YouboraController\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {GenericPlugin} plugin A GenericPlugin instance\n     * @param {Options} options An Options instance\n     */\n    constructor: function (plugin, options) {\n      /** A reference to the plugin */\n      this.plugin = plugin\n\n      /** a reference to options object */\n      this.options = options\n\n      // Adds plugin to static map\n      YouboraController.map.push(plugin)\n\n      this._init()\n\n      this._registerListeners()\n    },\n\n    /**\n     * Sets the {@link Options}.\n     *\n     * @param {Object|bool} [options={}] An object compiling to {@link Options} constructor.\n     */\n    setOptions: function (options) {\n      this.options.setOptions(options)\n    },\n\n    /**\n     * Get the current options.\n     *\n     * @returns {Options}\n     */\n    getOptions: function () {\n      return this.options\n    },\n\n    /**\n     * Init class properties\n     */\n    _init: function () {\n      this._info = new InfoGatherer(this)\n      this._ping = this._ping = new Timer(this._sendPing.bind(this), 5000)\n\n      this.viewTransform = new ViewTransform(this._info)\n      this.viewTransform.on(ViewTransform.Event.DONE, function (e) { // Data response\n        this._ping.interval = e.target.response.pingTime * 1000\n      }.bind(this))\n\n      this.resourceTransform = new ResourceTransform(this.options, this._info)\n    },\n\n    /**\n     * Reset all variables and stop all timers\n     */\n    reset: function () {\n      this.stopPings()\n      this.resourceTransform = new ResourceTransform(this.options, this._info)\n    },\n\n    /**\n     * Initializes {@Communication}. Called in every /start.\n     * @private\n     */\n    _initComm: function () {\n      this.resourceTransform.init(this._info.getResource())\n\n      this._comm = new Communication()\n      this._comm.addTransform(this.viewTransform)\n      this._comm.addTransform(this.resourceTransform)\n      this._comm.addTransform(new Nqs6Transform())\n    },\n\n    /**\n     * Starts sending pings\n     */\n    startPings: function () {\n      if (!this._ping.isRunning) this._ping.start()\n    },\n\n    /**\n     * Stops sending pings\n     */\n    stopPings: function () {\n      this._ping.stop()\n    },\n\n    /**\n     * Set all the plugin listeners\n     * @private\n     */\n    _registerListeners: function () {\n      this.plugin.on('init', this._initListener.bind(this))\n      this.plugin.on('start', this._startListener.bind(this))\n      this.plugin.on('join', this._joinListener.bind(this))\n      this.plugin.on('pause', this._pauseListener.bind(this))\n      this.plugin.on('resume', this._resumeListener.bind(this))\n      this.plugin.on('seek-begin', this._seekBeginListener.bind(this))\n      this.plugin.on('seek-end', this._seekEndListener.bind(this))\n      this.plugin.on('buffer-begin', this._bufferBeginListener.bind(this))\n      this.plugin.on('buffer-end', this._bufferEndListener.bind(this))\n      this.plugin.on('error', this._errorListener.bind(this))\n      this.plugin.on('fatal-error', this._fatalErrorListener.bind(this))\n      this.plugin.on('stop', this._stopListener.bind(this))\n\n      this.plugin.on('preload-begin', this._preloadBeginListener.bind(this))\n      this.plugin.on('preload-end', this._preloadEndListener.bind(this))\n    },\n\n    /**\n     * Sets an adnalyer and register its listeners. Will be called automatically.\n     */\n    setAdnalyzer: function () {\n      if (this.plugin.adnalyzer) {\n        this._registerAdnalyzerListeners()\n      } else {\n        Log.warn('Tried to call controller.setAdnalyzer without an adnalyzed defined.')\n      }\n    },\n\n    _registerAdnalyzerListeners: function () {\n      this.plugin.adnalyzer.on('start', this._adStartListener.bind(this))\n      this.plugin.adnalyzer.on('join', this._adJoinListener.bind(this))\n      this.plugin.adnalyzer.on('pause', this._adPauseListener.bind(this))\n      this.plugin.adnalyzer.on('resume', this._adResumeListener.bind(this))\n      this.plugin.adnalyzer.on('buffer-begin', this._adBufferBeginListener.bind(this))\n      this.plugin.adnalyzer.on('buffer-end', this._adBufferEndListener.bind(this))\n      this.plugin.adnalyzer.on('stop', this._adStopListener.bind(this))\n    },\n\n    /**\n     * Send request to {@link Communication}\n     *\n     * @private\n     * @param {Object} event Event data\n     * @param {ActionBuilder} builder Builder object\n     * @param {boolean} [adnalyer=true] If true, pre-event will be emitted from the adnalyzer.\n     */\n    _sendRequest: function (event, request, adnalyzer) {\n      if (request && this.options['config.enabled']) {\n        if (adnalyzer && this.plugin.adnalyzer) {\n          this.plugin.adnalyzer.emit('pre-' + event.type)\n        } else {\n          this.plugin.emit('pre-' + event.type)\n        }\n        this._comm.sendRequest(request)\n      }\n    },\n\n    /**\n     * Set flags and notice\n     *\n     * @private\n     * @param {Object} event Event data\n     * @param {ActionBuilder} builder Builder object\n     * @param {boolean} [adnalyer=true] If true, pre-event will be emitted from the adnalyzer.\n     */\n    _executeBuilder: function (event, builder, adnalyzer) {\n      if (builder.getIsAllowed()) {\n        builder.setChronosAndFlags(event)\n        builder.notice()\n        if (adnalyzer && this.plugin.adnalyzer) {\n          this.plugin.adnalyzer.emit('pre-' + event.type)\n        } else {\n          this.plugin.emit('pre-' + event.type)\n        }\n      }\n    },\n\n    _preloadBeginListener: function (e) {\n      this._executeBuilder(e, new PreloadBeginActionBuilder(this._info))\n    },\n\n    _preloadEndListener: function (e) {\n      this._executeBuilder(e, new PreloadEndActionBuilder(this._info))\n    },\n\n    _initListener: function (e) {\n      var builder = new InitActionBuilder(this._info)\n      if (builder.getIsAllowed()) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this.startPings()\n      }\n\n      this._sendRequest(e, builder.buildRequest())\n    },\n\n    _startListener: function (e) {\n      var builder = new StartActionBuilder(this._info)\n      if (builder.getIsAllowed()) {\n        if (!this.plugin.flags.isInitiated) this.viewTransform.nextView()\n        if (!this._comm) this._initComm()\n        this.startPings()\n      }\n\n      this._sendRequest(e, builder.buildRequest())\n    },\n\n    _joinListener: function (e) {\n      this._sendRequest(e, new JoinActionBuilder(this._info).buildRequest())\n    },\n\n    _pauseListener: function (e) {\n      this._sendRequest(e, new PauseActionBuilder(this._info).buildRequest())\n    },\n\n    _resumeListener: function (e) {\n      this._sendRequest(e, new ResumeActionBuilder(this._info).buildRequest())\n    },\n\n    _seekBeginListener: function (e) {\n      this._executeBuilder(e, new SeekBeginActionBuilder(this._info))\n    },\n\n    _seekEndListener: function (e) {\n      this._sendRequest(e, new SeekEndActionBuilder(this._info).buildRequest())\n    },\n\n    _bufferBeginListener: function (e) {\n      this._executeBuilder(e, new BufferBeginActionBuilder(this._info))\n    },\n\n    _bufferEndListener: function (e) {\n      this._sendRequest(e, new BufferEndActionBuilder(this._info).buildRequest())\n    },\n\n    _errorListener: function (e) {\n      if (!this._comm) this._initComm()\n      this._sendRequest(e, new ErrorActionBuilder(this._info).buildRequest())\n    },\n\n    _fatalErrorListener: function (e) {\n      if (!this._comm) this._initComm()\n      this._sendRequest(e, new FatalErrorActionBuilder(this._info).buildRequest())\n      this.reset()\n    },\n\n    _stopListener: function (e) {\n      this._sendRequest(e, new StopActionBuilder(this._info).buildRequest())\n      this.reset()\n    },\n\n    // Ads\n    _adStartListener: function (e) {\n      this._sendRequest(e, new AdStartActionBuilder(this._info).buildRequest(), true)\n    },\n\n    _adJoinListener: function (e) {\n      this._sendRequest(e, new AdJoinActionBuilder(this._info).buildRequest(), true)\n    },\n\n    _adPauseListener: function (e) {\n      this._sendRequest(e, new AdPauseActionBuilder(this._info).buildRequest(), true)\n    },\n\n    _adResumeListener: function (e) {\n      this._sendRequest(e, new AdResumeActionBuilder(this._info).buildRequest(), true)\n    },\n\n    _adBufferBeginListener: function (e) {\n      this._executeBuilder(e, new AdBufferBeginActionBuilder(this._info), true)\n    },\n\n    _adBufferEndListener: function (e) {\n      this._sendRequest(e, new AdBufferEndActionBuilder(this._info).buildRequest(), true)\n    },\n\n    _adStopListener: function (e) {\n      this._sendRequest(e, new AdStopActionBuilder(this._info).buildRequest(), true)\n    },\n\n    _sendPing: function (diffTime) {\n      if (this.options['config.enabled']) {\n        var builder = new PingActionBuilder(this._info)\n        this._comm.sendRequest(builder.buildRequest({ diffTime: diffTime }))\n      }\n    }\n  },\n  /** @lends YouboraController */\n  {\n    // Static members\n    /** Contains a static reference to plugins created. */\n    map: []\n  }\n)\n\nmodule.exports = YouboraController\n","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar Util = require('../util')\nvar version = require('../version')\n\nvar InfoGatherer = YouboraObject.extend(\n  /** @lends InfoGatherer.prototype */\n  {\n    /**\n     * This class will fetch information about the reproduction from a {@link YouboraController}\n     *\n     * @constructs InfoGatherer\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {YouboraController} controller A YouboraController instance\n     */\n    constructor: function (controller) {\n      this.plugin = controller.plugin\n      this._options = controller.options\n      this._controller = controller\n\n      /** Stores last sent values */\n      this.lastSent = {}\n    },\n\n    // ------------------------------------- INFO GETTERS -----------------------------------------\n\n    /** Returns service host */\n    getHost: function () {\n      return Util.addProtocol(Util.stripProtocol(\n        this._options['config.host'],\n        this._options['config.httpSecure']\n      ))\n    },\n\n    /** Returns content's playhead */\n    getPlayhead: function () {\n      var ret = 0\n      try {\n        ret = this.plugin.getPlayhead()\n      } catch (err) {\n        Log.warn('An error occurred while calling getPlayhead', err)\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns content's PlayRate */\n    getPlayrate: function () {\n      var ret = ''\n      try {\n        ret = this.plugin.getPlayrate()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayrate', err)\n      }\n      return ret\n    },\n\n    /** Returns content's FramesPerSecond */\n    getFramesPerSecond: function () {\n      var ret = ''\n      try {\n        ret = this.plugin.getFramesPerSecond()\n      } catch (err) {\n        Log.warn('An error occured while calling getFramesPerSecond', err)\n      }\n      return ret\n    },\n\n    /** Returns content's DroppedFrames */\n    getDroppedFrames: function () {\n      var ret = ''\n      try {\n        ret = this.plugin.getDroppedFrames()\n        if (!ret) {\n          ret = this.getWebkitDroppedFrames()\n        }\n      } catch (err) {\n        Log.warn('An error occured while calling getDroppedFrames', err)\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /**\n     * Returns dropped frames as per webkitDroppedFrameCount\n     *\n     * @returns {number}\n     */\n    getWebkitDroppedFrames: function () {\n      if (this.plugin.tag && this.plugin.tag.webkitDroppedFrameCount) {\n        return this.plugin.tag.webkitDroppedFrameCount\n      }\n      return null\n    },\n\n    /** Returns content's Duration */\n    getDuration: function () {\n      var ret = this._options['content.duration']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getDuration', err)\n        }\n      }\n      return Util.parseNumber(Math.round(ret), 0)\n    },\n\n    /** Returns content's Bitrate */\n    getBitrate: function () {\n      var ret = this._options['content.bitrate']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitBitrate: function () {\n      if (this.plugin.tag && this.plugin.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this.plugin.tag.webkitVideoDecodedByteCount\n        if (this._lastAdBitrate) {\n          var delta = this.plugin.tag.webkitVideoDecodedByteCount - this._lastAdBitrate\n          bitrate = Math.round(((delta) / 5) * 8)\n        }\n        this._lastAdBitrate = this.plugin.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns content's Throughput */\n    getThroughput: function () {\n      var ret = this._options['content.throughput']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getThroughput()\n        } catch (err) {\n          Log.warn('An error occured while calling getThroughput', err)\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /** Returns content's Rendition */\n    getRendition: function () {\n      var ret = this._options['content.rendition']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getRendition()\n        } catch (err) {\n          Log.warn('An error occured while calling getRendition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title */\n    getTitle: function () {\n      var ret = this._options['content.title']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title2 */\n    getTitle2: function () {\n      var ret = this._options['content.title2']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getTitle2()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle2', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's IsLive */\n    getIsLive: function () {\n      var ret = this._options['content.isLive']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getIsLive()\n        } catch (err) {\n          Log.warn('An error occured while calling getIsLive', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Resource after being parsed by the resourceTransform */\n    getResource: function () {\n      var ret = null\n      if (!this._controller.resourceTransform.isBlocking()) {\n        ret = this._controller.resourceTransform.getResource()\n      }\n\n      return ret || this.getOriginalResource()\n    },\n\n    /** Returns content's original Resource */\n    getOriginalResource: function () {\n      var ret = null\n      ret = this._options['content.resource']\n      if (ret === null) {\n        try {\n          ret = this.plugin.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getResource', err)\n          ret = null\n        }\n      }\n      return ret || 'unknown'\n    },\n\n    /** Returns content's TransactionCode */\n    getTransactionCode: function () {\n      return this._options['content.transactionCode']\n    },\n\n    /** Returns content's Metadata */\n    getMetadata: function () {\n      return this._options['content.metadata']\n    },\n\n    /** Returns content's PlayerVersion */\n    getPlayerVersion: function () {\n      var ret = ''\n      try {\n        ret = this.plugin.getPlayerVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayerVersion', err)\n      }\n      return ret\n    },\n\n    /** Returns content's PlayerName */\n    getPlayerName: function () {\n      var ret = ''\n      try {\n        ret = this.plugin.getPlayerName()\n      } catch (err) {\n        Log.warn('An error occured while calling getPlayerName', err)\n      }\n      return ret\n    },\n\n    /** Returns content's Cdn */\n    getCdn: function () {\n      var ret = null\n      if (!this._controller.resourceTransform.isBlocking()) {\n        ret = this._controller.resourceTransform.getCdnName()\n      }\n      return ret || this._options['content.cdn']\n    },\n\n    /** Returns content's PluginVersion */\n    getPluginVersion: function () {\n      var ret = ''\n      try {\n        ret = this.plugin.getVersion()\n      } catch (err) {\n        Log.warn('An error occured while calling getPluginVersion', err)\n      }\n      return ret\n    },\n\n    /** Returns content's Extraparam1 */\n    getExtraparam1: function () {\n      return this._options['extraparam.1']\n    },\n\n    /** Returns content's Extraparam2 */\n    getExtraparam2: function () {\n      return this._options['extraparam.2']\n    },\n\n    /** Returns content's Extraparam3 */\n    getExtraparam3: function () {\n      return this._options['extraparam.3']\n    },\n\n    /** Returns content's Extraparam4 */\n    getExtraparam4: function () {\n      return this._options['extraparam.4']\n    },\n    /** Returns content's Extraparam5 */\n    getExtraparam5: function () {\n      return this._options['extraparam.5']\n    },\n\n    /** Returns content's Extraparam6 */\n    getExtraparam6: function () {\n      return this._options['extraparam.6']\n    },\n\n    /** Returns content's Extraparam7 */\n    getExtraparam7: function () {\n      return this._options['extraparam.7']\n    },\n\n    /** Returns content's Extraparam8 */\n    getExtraparam8: function () {\n      return this._options['extraparam.8']\n    },\n\n    /** Returns content's Extraparam9 */\n    getExtraparam9: function () {\n      return this._options['extraparam.9']\n    },\n\n    /** Returns content's Extraparam10 */\n    getExtraparam10: function () {\n      return this._options['extraparam.10']\n    },\n\n    /** Returns ad's position */\n    getAdPosition: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getPosition()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPosition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayhead */\n    getAdPlayhead: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdDuration */\n    getAdDuration: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdDuration', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdBitrate */\n    getAdBitrate: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitAdBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitAdBitrate: function () {\n      if (this.plugin.tag && this.plugin.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this.plugin.tag.webkitVideoDecodedByteCount\n        if (this._lastAdBitrate) {\n          var delta = this.plugin.tag.webkitVideoDecodedByteCount - this._lastAdBitrate\n          bitrate = Math.round(((delta) / 5) * 8)\n        }\n        this._lastAdBitrate = this.plugin.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns ad's AdTitle */\n    getAdTitle: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdResource */\n    getAdResource: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdResource', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayerVersion */\n    getAdPlayerVersion: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdMetadata */\n    getAdMetadata: function () {\n      return this._options['ad.metadata']\n    },\n\n    /** Returns ad's AdnalyzerVersion */\n    getAdnalyzerVersion: function () {\n      var ret = null\n      if (this.plugin.adnalyzer) {\n        try {\n          ret = this.plugin.adnalyzer.getVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdnalyzerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns PluginInfo */\n    getPluginInfo: function () {\n      var ret = {\n        pluginVersion: this.getPluginVersion(),\n        libVersion: version,\n        adnalyzerVersion: this.getAdnalyzerVersion()\n      }\n      return ret\n    },\n\n    /** Returns Ip */\n    getIp: function () {\n      return this._options['network.ip']\n    },\n\n    /** Returns Isp */\n    getIsp: function () {\n      return this._options['network.isp']\n    },\n\n    /** Returns ConnectionType */\n    getConnectionType: function () {\n      return this._options['network.connectionType']\n    },\n\n    /** Returns DeviceCode */\n    getDeviceCode: function () {\n      return this._options['device.code']\n    },\n\n    /** Returns AccountCode */\n    getAccountCode: function () {\n      return this._options['config.accountCode']\n    },\n\n    /** Returns Username */\n    getUsername: function () {\n      return this._options['config.username']\n    },\n\n    /** Get URL referer. */\n    getReferer: function () {\n      var ret = ''\n      if (typeof window !== 'undefined' && window.location) {\n        ret = window.location.href\n      }\n      return ret\n    },\n\n    /**\n     * Returns the nodehost\n     */\n    getNodeHost: function () {\n      return this._controller.resourceTransform.getNodeHost()\n    },\n\n    /**\n     * Returns the node type id\n     */\n    getNodeType: function () {\n      return this._controller.resourceTransform.getNodeType()\n    },\n\n    /**\n     * Returns the node type string\n     */\n    getNodeTypeString: function () {\n      return this._controller.resourceTransform.getNodeTypeString()\n    },\n\n    // ---------------------------------------- CHRONOS -------------------------------------------\n\n    /** Returns JoinDuration chrono delta time */\n    getJoinDuration: function () {\n      return this.plugin.chronos.join.getDeltaTime(false)\n    },\n\n    /** Returns BufferDuration chrono delta time */\n    getBufferDuration: function () {\n      return this.plugin.chronos.buffer.getDeltaTime(false)\n    },\n\n    /** Returns SeekDuration chrono delta time */\n    getSeekDuration: function () {\n      return this.plugin.chronos.seek.getDeltaTime(false)\n    },\n\n    /** Returns pauseDuration chrono delta time */\n    getPauseDuration: function () {\n      return this.plugin.chronos.pause.getDeltaTime(false)\n    },\n\n    /** Returns preload chrono delta time */\n    getPreloadDuration: function () {\n      return this.plugin.chronos.preload.getDeltaTime(false)\n    },\n\n    /** Returns AdJoinDuration chrono delta time */\n    getAdJoinDuration: function () {\n      return this.plugin.adnalyzer ? this.plugin.adnalyzer.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdBufferDuration chrono delta time */\n    getAdBufferDuration: function () {\n      return this.plugin.adnalyzer ? this.plugin.adnalyzer.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdPauseDuration chrono delta time */\n    getAdPauseDuration: function () {\n      return this.plugin.adnalyzer ? this.plugin.adnalyzer.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns total totalAdDuration chrono delta time */\n    getTotalAdDuration: function () {\n      return this.plugin.adnalyzer ? this.plugin.adnalyzer.chronos.total.getDeltaTime(false) : -1\n    }\n  }\n)\n\nmodule.exports = InfoGatherer\n","var YouboraObject = require('./object')\n\n/**\n * This class extends YouboraObject, adding event emitting/listening functionalities.\n * @constructs Emitter\n * @extends YouboraObject\n * @memberof youbora\n */\nvar Emitter = YouboraObject.extend(\n  /** @lends Emitter.prototype */\n  {\n    /**\n     * Sets a listener to a given event. Use {@link emit} to trigger those events.\n     * Pass '*' to listen ALL events.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event. Receives event and data.\n     * @return this\n     */\n    on: function (event, callback) {\n      this._listeners = this._listeners || {}\n      if (typeof callback === 'function') {\n        this._listeners[event] = this._listeners[event] || []\n        this._listeners[event].push(callback)\n        return this\n      }\n    },\n\n    /**\n     * Removes given callback from the listeners of this object.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     * @return this\n     */\n    off: function (event, callback) {\n      this._listeners = this._listeners || {}\n\n      if (this._listeners[event]) {\n        var index = this._listeners[event].indexOf(callback)\n        if (index !== -1) {\n          this._listeners[event].splice(index, 1)\n        }\n      }\n      return this\n    },\n\n    /**\n     * Emits given event, triggering all the associated callbacks.\n     * @param {string} event Name of the event.\n     * @param {object} [data] Custom data to be sent to the callbacks.\n     * @return this\n     */\n    emit: function (event, data) {\n      this._listeners = this._listeners || {}\n\n      if (Array.isArray(this._listeners[event])) {\n        this._listeners[event].forEach(this._eachCallback.bind(this, event, data))\n      }\n      if (Array.isArray(this._listeners['*'])) {\n        this._listeners['*'].forEach(this._eachCallback.bind(this, event, data))\n      }\n\n      return this\n    },\n\n    _eachCallback: function (event, data, callback) {\n      if (typeof callback === 'function') {\n        callback({ type: event, data: data, target: this })\n      }\n    }\n  }\n)\n\nmodule.exports = Emitter\n","var Emitter = require('./emitter')\n\n/**\n * Static Log class for YouboraLib\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Log = {\n\n  _emitter: new Emitter(),\n\n  /** Exposes {@link youbora.EvenfulObject.on} */\n  on: function () { Log._emitter.on.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.off} */\n  off: function () { Log._emitter.off.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.emit} */\n  emit: function () { Log._emitter.emit.apply(Log._emitter, arguments) },\n\n  /**\n   * Enum for log levels\n   * @enum\n   */\n  Level: {\n    /** No console outputs */\n    SILENT: 6,\n    /** Console will show errors */\n    ERROR: 5,\n    /** Console will show warnings */\n    WARNING: 4,\n    /** Console will show notices (ie: life-cyrcle logs) */\n    NOTICE: 3,\n    /** Console will show debug messages (ie: player events) */\n    DEBUG: 2,\n    /** Console will show verbose messages (ie: Http Requests) */\n    VERBOSE: 1\n  },\n\n  /**\n   * Enum for events\n   * @enum\n   */\n  Event: {\n    /** Sent each time a messaged is issued, even if log level does not handle it. */\n    LOG: 'log'\n  },\n\n  /**\n   * Only logs of this imporance or higher will be shown.\n   * @default youbora.Log.Levels.ERROR\n   * @see {@link youbora.Log.Levels}\n   */\n  logLevel: 5,\n\n  /**\n   * If true, console logs will always be outputed without colors (for debbugin in devices).\n   * @default false\n   */\n  plainLogs: false,\n\n  /**\n   * Returns a console message\n   *\n   * @private\n   * @param {(string|error|array)} msg Message string, error object or array of messages.\n   * @param {Log.Levels} [level=Log.Levels.NOTICE] Defines the level of the error sent.\n   * Only errors with higher or equal level than Log.logLevel will be displayed.\n   * @param {string} [color=darkcyan] Color of the header\n   * @see {@link Youbora.Log.debugLevel}\n   */\n  report: function (msg, level, color) {\n    if (console && console.log) {\n      level = level || Log.Level.NOTICE\n      color = color || 'darkcyan'\n\n      var letters = {\n        5: 'e', // Error\n        4: 'w', // Warning\n        3: 'n', // Notice\n        2: 'd', // Debug\n        1: 'v' // Verbose\n      }\n\n      var letter = letters[level]\n      var prefix = '[Youbora]' + Log._getCurrentTime() + ' ' + letter + ':'\n\n      this.emit('log', { level: level, msg: msg, prefix: prefix })\n\n      // Show messages in actual console if level is enought\n      if (Log.logLevel <= level) {\n        if (Log.plainLogs || document.documentMode) { // document.documentMode exits only in IE\n          // Plain log for IE and devices\n          Log._plainReport(msg, prefix)\n        } else {\n          // choose log method\n          var logMethod\n          if (level === Log.Level.ERROR && console.error) {\n            logMethod = console.error\n          } else if (level === Log.Level.WARNING && console.warn) {\n            logMethod = console.warn\n          } else if (level === Log.Level.DEBUG && console.debug) {\n            logMethod = console.debug\n          } else {\n            logMethod = console.log\n          }\n\n          // print message\n          prefix = '%c' + prefix\n          if (msg instanceof Array) {\n            msg.splice(0, 0, prefix, 'color: ' + color)\n            logMethod.apply(console, msg)\n          } else {\n            logMethod.call(console, prefix, 'color: ' + color, msg)\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the current time in format hh:mm:ss.mmm (with trailing 0s)\n   * @private\n   * @return {string} Current time.\n   */\n  _getCurrentTime: function () {\n    var d = new Date()\n    var hh = ('0' + d.getDate()).slice(-2)\n    var mm = ('0' + d.getMinutes()).slice(-2)\n    var ss = ('0' + d.getSeconds()).slice(-2)\n    var mmm = ('00' + d.getMilliseconds()).slice(-3)\n    return '[' + hh + ':' + mm + ':' + ss + '.' + mmm + ']'\n  },\n\n  /**\n   * Returns a console message without style\n   *\n   * @private\n   * @param {(string|object|array)} msg Message string, object or array of messages.\n   * @param {string} prefix Prefix of the message.\n   */\n  _plainReport: function (msg, prefix) {\n    if (msg instanceof Array) {\n      for (var m in msg) {\n        Log._plainReport(msg[m], prefix)\n      }\n    } else {\n      if (typeof msg === 'string') {\n        console.log(prefix + ' ' + msg)\n      } else {\n        console.log(prefix + ' <next line>')\n        console.log(msg)\n      }\n    }\n  },\n\n  /**\n   * Sends an error (level 1) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  error: function () {\n    Log.report([].slice.call(arguments), Log.Level.ERROR, 'darkred')\n  },\n\n  /**\n   * Sends a warning (level 2) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  warn: function () {\n    Log.report([].slice.call(arguments), Log.Level.WARNING, 'darkorange')\n  },\n\n  /**\n   * Sends a notice (level 3) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  notice: function () {\n    Log.report([].slice.call(arguments), Log.Level.NOTICE, 'darkgreen')\n  },\n\n  /**\n   * Sends a debug message (level 4) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  debug: function () {\n    Log.report([].slice.call(arguments), Log.Level.DEBUG, 'indigo')\n  },\n\n  /**\n   * Sends a verbose message (level 5) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  verbose: function () {\n    Log.report([].slice.call(arguments), Log.Level.VERBOSE, 'navy')\n  },\n\n  /**\n   * This function is automatically executed at youboralib's init.\n   * Will search inside window.location.search for attribute 'youbora-debug=X'.\n   * X can have one of these values, that will modify LogLevel.\n   * 6: SILENT,\n   * 5: ERROR,\n   * 4: WARNING,\n   * 3: NOTICE,\n   * 2: DEBUG,\n   * 1: VERBOSE\n   *\n   * If youbora-console=plain is present, plainLogs will be set to true.\n   */\n  loadLevelFromUrl: function () {\n    if (typeof window !== 'undefined' && window.location && window.location.search) {\n      var m = /\\?.*&*youbora-debug=(.+)/i.exec(window.location.search)\n      if (m !== null) {\n        Log.logLevel = m[1]\n      }\n\n      var m2 = /\\?.*&*youbora-debug=plain/i.exec(window.location.search)\n      if (m2 !== null) {\n        Log.plainLogs = true\n      }\n    }\n  }\n}\n\nmodule.exports = Log\n","var YouboraObject = function () {}\n\nYouboraObject.prototype = {\n  /**\n   * A base class that other Classes should inherit from.\n   * It has a no-op constructor intended to be overridden by classes that extend from this.\n   *\n   * @constructs YouboraObject\n   * @abstract\n   * @memberof youbora\n   */\n  constructor: function () {}\n}\n\n/**\n * This static method allows the extension of the current class, emulating 1-level inheritance.\n * Also add a helper __super__ object poiting to the parent prototypes methods\n * @see https://github.com/SBoudrias/class-extend\n * @example\n * var A = YouboraObject.extend({ a: 1, b: 1, c: { d: 0 } });\n * var a = new A(); // { a: 1, b: 1, c: { d: 0 } }\n *\n * var B = A.extend({ b: 2, c: { e: 3 } });\n * var b = new B(); // { a: 1, b: 2, c: { e: 3 } }\n *\n * @param  {Object} protoProps  Prototype properties (available on the instances)\n * @param  {Object} staticProps Static properties (available on the contructor)\n * @return {Object}             New sub class\n */\nYouboraObject.extend = function (protoProps, staticProps) {\n  var parent = this\n  var NewClass\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent's constructor.\n  if (protoProps && Object.prototype.hasOwnProperty.call(protoProps, 'constructor')) {\n    NewClass = protoProps.constructor\n  } else {\n    NewClass = function () { return parent.apply(this, arguments) }\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  Object.assign(NewClass, parent, staticProps)\n\n  // Set the prototype chain to inherit from `parent`\n  NewClass.prototype = Object.create(parent.prototype, {\n    constructor: {\n      value: NewClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  // Add prototype properties (instance properties) to the subclass,\n  // if supplied.\n  if (protoProps) Object.assign(NewClass.prototype, protoProps)\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  NewClass.__super__ = parent.prototype\n\n  return NewClass\n}\n\nmodule.exports = YouboraObject\n","var YouboraObject = require('./object')\nvar Log = require('./log')\n\nvar Options = YouboraObject.extend(\n  /** @lends Options.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     * @constructs Options\n     * @param {Object|Options} [options] A literal containing values.\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      /** @prop {boolean} [config.enabled=true] If false, the plugin won't send NQS requests. */\n      this['config.enabled'] = true\n\n      /**\n       * @prop {boolean} [config.httpSecure=null]\n       * Define the security of NQS calls.\n       * If true it will use 'https://',\n       * if false it will use 'http://',\n       * if null it will use '//'.\n       */\n      this['config.httpSecure'] = null\n\n      /** @prop {string} [config.host='nqs.nice264.com'] Host of the Fastdata service. */\n      this['config.host'] = 'nqs.nice264.com'\n\n      /**\n       * @prop {string} [config.accountCode='nicetest']\n       * NicePeopleAtWork account code that indicates the customer account.\n       */\n      this['config.accountCode'] = 'nicetest'\n\n      /** @prop {string} [config.username] User ID value inside your system. */\n      this['config.username'] = null\n\n      /**\n       * @prop {boolean} [parse.HLS=false]\n       * If true the plugin will parse HLS files to use the first .ts file found as resource.\n       * It might slow performance down.\n       */\n      this['parse.HLS'] = false\n\n      /**\n       * @prop {string} [parse.CDNNameHeader]\n       * If defined, resource parse will try to fetch the CDN code from the custom header defined\n       * by this property. ie: 'x-cdn-forward'\n       */\n      this['parse.CDNNameHeader'] = 'x-cdn-forward'\n\n      /**\n       * @prop {boolean} [parse.CDNNode.enabled=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CDNNode'] = false\n\n      /**\n       * @prop {array<string>} [parse.CDNNode.list=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CDNNode.list'] = ['Akamai', 'Cloudfront', 'Level3', 'Fastly', 'Highwinds']\n\n      /** @prop {string} [network.ip] IP of the viewer/user. ie= '100.100.100.100'. */\n      this['network.ip'] = null\n\n      /** @prop {string} [network.isp] Name of the internet service provider of the viewer/user. */\n      this['network.isp'] = null\n\n      /**\n       * @prop {string} [network.connectionType]\n       * See a list of codes in {@link http://mapi.youbora.com:8081/connectionTypes}\n       */\n      this['network.connectionType'] = null\n\n      /**\n       * @prop {string} [device.code]\n       * Youbora's device code. If specified it will rewrite info gotten from user agent.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/devices}\n       */\n      this['device.code'] = null\n\n      /** @prop {string} [content.resource] URL/path of the current media resource. */\n      this['content.resource'] = null\n\n      /** @prop {boolean} [content.isLive] True if the content is live false if VOD. */\n      this['content.isLive'] = null\n\n      /** @prop {string} [content.title] Title of the media. */\n      this['content.title'] = null\n\n      /** @prop {string} [content.title2] Secondary title of the media. */\n      this['content.title2'] = null\n\n      /** @prop {number} [content.duration] Duration of the media. */\n      this['content.duration'] = null\n\n      /** @prop {string} [content.transactionCode] Custom unique code to identify the view. */\n      this['content.transactionCode'] = null\n\n      /** @prop {int} {content.bitrate] Bitrate of the content in bits per second. */\n      this['content.bitrate'] = null\n\n      /** @prop {int} {content.throughput] Throughput of the client bandwith in bits per second. */\n      this['content.throughput'] = null\n\n      /** @prop {string} {content.rendition] Name of the current rendition of the content. */\n      this['content.rendition'] = null\n\n      /**\n       * @prop {string} [content.cdn]\n       * Codename of the CDN where the content is streaming from.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/cdns}\n       * */\n      this['content.cdn'] = null\n\n      /**\n       * @prop {object} [content.metadata={}]\n       * Item containing mixed extra information about the content like: director, parental rating,\n       * device info or the audio channels.This object may store any serializable key:value info.\n       */\n      this['content.metadata'] = {}\n\n      /**\n       * @prop {object} [ad.metadata={}]\n       * Item containing mixed extra information about ads like: campaign name or request url.\n       * This object may store any serializable key:value info.\n       */\n      this['ad.metadata'] = {}\n\n      /** @prop {string} [extraparam.1] Custom parameter 1. */\n      this['extraparam.1'] = null\n\n      /** @prop {string} [extraparam.2] Custom parameter 2. */\n      this['extraparam.2'] = null\n\n      /** @prop {string} [extraparam.3] Custom parameter 3. */\n      this['extraparam.3'] = null\n\n      /** @prop {string} [extraparam.4] Custom parameter 4. */\n      this['extraparam.4'] = null\n\n      /** @prop {string} [extraparam.5] Custom parameter 5. */\n      this['extraparam.5'] = null\n\n      /** @prop {string} [extraparam.6] Custom parameter 6. */\n      this['extraparam.6'] = null\n\n      /** @prop {string} [extraparam.7] Custom parameter 7. */\n      this['extraparam.7'] = null\n\n      /** @prop {string} [extraparam.8] Custom parameter 8. */\n      this['extraparam.8'] = null\n\n      /** @prop {string} [extraparam.9] Custom parameter 9. */\n      this['extraparam.9'] = null\n\n      /** @prop {string} [extraparam.10] Custom parameter 10. */\n      this['extraparam.10'] = null\n\n      this.setOptions(options)\n    },\n\n    /**\n     * Recursively sets the properties present in the params object.\n     * ie: this.username = params.username.\n     *\n     * @param {Object} options A literal or another Data containing values.\n     * @param {Object} [base=this] Start point for recursion.\n     */\n    setOptions: function (options, base) {\n      try {\n        base = base || this\n        if (typeof options !== 'undefined') {\n          for (var key in options) {\n            if (typeof base[key] === 'object' && base[key] !== null) {\n              this.setOptions(options[key], base[key])\n            } else {\n              base[key] = options[key]\n            }\n          }\n        }\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  }\n)\n\nmodule.exports = Options\n","var YouboraObject = require('../object')\nvar Chrono = require('../chrono')\n\nvar ChronoStatus = YouboraObject.extend(\n  /** @lends ChronoStatus.prototype */\n  {\n    /**\n     * This class contains all the {@link Chrono}s related to view status.\n     * Chronos measure time lapses between events.\n     * ie: between start and join, between seek-begin and seek-end, etc.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs ChronoStatus\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Chrono between preload-begin and preload-end. */\n      this.preload = new Chrono()\n\n      /** Chrono between start and joinTime. */\n      this.join = new Chrono()\n\n      /** Chrono between seek-begin and seek-end. */\n      this.seek = new Chrono()\n\n      /** Chrono between pause and resume. */\n      this.pause = new Chrono()\n\n      /** Chrono between buffer-begin and buffer-end. */\n      this.buffer = new Chrono()\n\n      /** Chrono for the totality of the view. */\n      this.total = new Chrono()\n    }\n  }\n)\n\nmodule.exports = ChronoStatus\n","var YouboraObject = require('../object')\n\nvar FlagStatus = YouboraObject.extend(\n  /** @lends FlagStatus.prototype */\n  {\n    /**\n     * This class contains all the flags related to view status.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs FlagStatus\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Flag when player is preloading. */\n      this.isPreloading = false\n\n      /** Flag when Init has been sent. */\n      this.isInitiated = false\n\n      /** Flag when Start has been sent. */\n      this.isStarted = false\n\n      /** Flag when Join has been sent. */\n      this.isJoined = false\n\n      /** Flag when Player is paused. */\n      this.isPaused = false\n\n      /** Flag when Player is seeking. */\n      this.isSeeking = false\n\n      /** Flag when Player is buffering. */\n      this.isBuffering = false\n\n      /** Flag trued when a fatal error is thrown */\n      this.isHalted = false\n    }\n  }\n)\n\nmodule.exports = FlagStatus\n","var Emitter = require('../emitter')\nvar Options = require('../options')\nvar Controller = require('../controller/controller')\nvar Log = require('../log')\nvar version = require('../version')\nvar ChronoStatus = require('./chronostatus')\nvar FlagStatus = require('./flagstatus')\nvar PlayheadMonitor = require('./playheadmonitor')\n\nvar GenericPlugin = Emitter.extend(\n  /** @lends GenericPlugin.prototype */\n  {\n    /**\n     * This class is the generic plugin from which specifics plugins will extend.\n     *\n     * @constructs GenericPlugin\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {Object|bool} [options={}]\n     * An object compiling to {@link Options} constructor.\n     * If you send a true, the plugin will be created without creating its {@link Controller},\n     * this is useful for testing and creating Adnalyzers.\n     */\n    constructor: function (options) {\n      /** An instance of {@link FlagStatus} */\n      this.flags = new FlagStatus()\n\n      /** An instance of {@link ChronoStatus} */\n      this.chronos = new ChronoStatus()\n\n      if (options !== true) {\n        /** Reference to the player tag */\n        this.player = null\n\n        /** Reference to the video/object tag, could be the same as the player. */\n        this.tag = null\n\n        /**\n         * Reference to an instance of {@link GenericPlugin} that will work as an ad analyzer.\n         * @type GenericPlugin\n         */\n        this.adnalyzer = null\n\n        /**\n         * Instance of {@link Controller}, unless true is sent in constructor.\n         * WARNING: Only access this if you know what you are doing!\n         * @type Controller\n         */\n        this.controller = new Controller(this, new Options(options))\n\n        Log.notice('Plugin ' + this.getVersion() + ' with Lib ' + version + ' is ready.')\n      }\n    },\n\n    /**\n     * Begin monitoring the given player. If it is an object, it will be saved as this.player.\n     * It it is a string, it will be saved as this.player = document.getElementById(...)\n     * Calls this.registerListeners.\n     *\n     * @param {object|string} player Either an instance of the player or a string containing an ID.\n     */\n    beginMonitoring: function (player) {\n      if (typeof player === 'string') {\n        this.player = document.getElementById(player)\n      } else {\n        this.player = player\n      }\n\n      this.tag = this.player\n\n      this.resumeMonitoring()\n    },\n\n    /**\n     * Calls registerListeners if exists. Resume pings.\n     */\n    resumeMonitoring: function () {\n      if (this.controller && this.flags.isStarted) this.controller.startPings()\n      if (this.registerListeners) this.registerListeners()\n    },\n\n    /**\n     * Calls unregisterListeners. Pauses pings.\n     */\n    pauseMonitoring: function () {\n      if (this.controller && this.flags.isStarted) this.controller.stopPings()\n\n      if (this.unregisterListeners) this.unregisterListeners()\n    },\n\n    /**\n     * Removes this.player and this.tag references. Calls this.unregisterListeners.\n     */\n    endMonitoring: function () {\n      this.pauseMonitoring()\n\n      this.player = null\n      this.tag = null\n\n      if (this.controller) this.controller.reset()\n    },\n\n    /**\n     * Override to create event binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.addEventListener('start', this.onStart.bind(this))\n     * },\n     * onStart: function (e) {\n     *  this.emit('start')\n     * }\n     */\n    registerListeners: function () {},\n\n    /**\n     * Override to create event de-binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.removeEventListener('start', this.onStart)\n     * }\n     */\n    unregisterListeners: function () {},\n\n    /** Override to return current playhead of the video */\n    getPlayhead: function () { return 0 },\n\n    /** Override to return current playrate */\n    getPlayrate: function () { return !this.flags.isPaused ? 1 : 0 },\n\n    /** Override to return Frames Per Secon (FPS) */\n    getFramesPerSecond: function () { return null },\n\n    /** Override to return dropped frames since start */\n    getDroppedFrames: function () { return null },\n\n    /** Override to return video duration */\n    getDuration: function () { return 0 },\n\n    /** Override to return current bitrate */\n    getBitrate: function () { return -1 },\n\n    /** Override to return user bandwidth throughput */\n    getThroughput: function () { return -1 },\n\n    /** Override to return rendition */\n    getRendition: function () { return '' },\n\n    /** Override to return title */\n    getTitle: function () { return '' },\n\n    /** Override to return title2 */\n    getTitle2: function () { return '' },\n\n    /** Override to recurn true if live and false if VOD */\n    getIsLive: function () { return false },\n\n    /** Override to return resource URL. */\n    getResource: function () { return 'unknown' },\n\n    /** Override to return player version */\n    getPlayerVersion: function () { return null },\n\n    /** Override to return player's name */\n    getPlayerName: function () { return null },\n\n    /** Override to return plugin version. */\n    getVersion: function () { return '6.0.0-Generic' },\n\n    /** Override to return current ad position (only ads) */\n    getPosition: function () { return null },\n\n    /**\n     * Sets an adnalyzer instance.\n     *\n     * @param {GenericPlguin} adnalyer Adnalyzer to be set.\n     */\n    setAdnalyzer: function (adnalyzer) {\n      this.adnalyzer = adnalyzer\n      if (this.controller) this.controller.setAdnalyzer()\n    },\n\n    /**\n     * Sets the plugin {@link Options}.\n     *\n     * @param {Object|bool} [options={}] An object compiling to {@link Options} constructor.\n     */\n    setOptions: function (options) {\n      if (this.controller) {\n        this.controller.setOptions(options)\n      } else {\n        Log.warn('Tried to call setOptions in a plugin without controller.')\n      }\n    },\n\n    /**\n     * Get the current options.\n     *\n     * @returns {Options}\n     */\n    getOptions: function () {\n      if (this.controller) {\n        return this.controller.getOptions()\n      } else {\n        Log.warn('Tried to call getOptions in a plugin without controller.')\n      }\n    },\n\n    /**\n     * Creates a {@link PlayheadMonitor} in this.monitor. It will track buffers.\n     */\n    createBufferMonitor: function () {\n      this.monitor = new PlayheadMonitor(this, PlayheadMonitor.Type.BUFFER)\n    },\n\n    /**\n     * Creates a {@link PlayheadMonitor} in this.monitor. It will track seeks.\n     */\n    createSeekMonitor: function () {\n      this.monitor = new PlayheadMonitor(this, PlayheadMonitor.Type.SEEK)\n    },\n\n    /**\n     * Creates a {@link PlayheadMonitor} in this.monitor. It will track buffers and seeks.\n     */\n    createBufferAndSeekMonitor: function () {\n      this.monitor = new PlayheadMonitor(this,\n        PlayheadMonitor.Type.SEEK | PlayheadMonitor.Type.BUFFER\n      )\n    }\n  },\n  /** @lend GenericPlugin */\n  {\n    // Static Memebers\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      INIT: 'init',\n      START: 'start',\n      JOIN: 'join',\n      PAUSE: 'pause',\n      RESUME: 'resume',\n      SEEK_BEGIN: 'seek-begin',\n      SEEK_END: 'seek-end',\n      BUFFER_BEGIN: 'buffer-begin',\n      BUFFER_END: 'buffer-end',\n      ERROR: 'error',\n      FATAL_ERROR: 'fatal-error',\n      STOP: 'stop',\n      PRELOAD_BEGIN: 'preload-begin',\n      PRELOAD_END: 'preload-end',\n\n      PRE_START: 'pre-start',\n      PRE_JOIN: 'pre-join',\n      PRE_PAUSE: 'pre-pause',\n      PRE_RESUME: 'pre-resume',\n      PRE_SEEK_BEGIN: 'pre-seek-begin',\n      PRE_SEEK_END: 'pre-seek-end',\n      PRE_BUFFER_BEGIN: 'pre-buffer-begin',\n      PRE_BUFFER_END: 'pre-buffer-end',\n      PRE_ERROR: 'pre-error',\n      PRE_FATAL_ERROR: 'pre-fatal-error',\n      PRE_STOP: 'pre-stop',\n      PRE_PRELOAD_BEGIN: 'pre-preload-begin',\n      PRE_PRELOAD_END: 'pre-preload-end'\n    }\n  }\n)\n\nmodule.exports = GenericPlugin\n","var YouboraObject = require('../object')\nvar Timer = require('../timer')\nvar Chrono = require('../chrono')\n  // var Log = require('../log')\n\nvar PlayheadMonitor = YouboraObject.extend(\n  /** @lends PlayheadMonitor.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     *\n     * @constructs PlayheadMonitor\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {GenericPlugin} plugin The plugin to monitor. Must have getPlayhead defined.\n     * @param {PlayheadMonitor.Type} [type=NONE]\n     * Which metric to monitor seek and/or buffer.\n     * Use bitwise operators to join both values (Type.BUFFER | Type.SEEK)\n     * @param {int} [interval=800] How many ms will wait between progress. -1 to disable.\n     */\n    constructor: function (plugin, type, interval) {\n      this._plugin = plugin\n      this._seekEnabled = type & PlayheadMonitor.Type.SEEK\n      this._bufferEnabled = type & PlayheadMonitor.Type.BUFFER\n      this._interval = interval || 800\n\n      this._chrono = new Chrono()\n      this._jumpNextProgress = false\n      this._lastPlayhead = 0\n\n      if (this._interval > 0) {\n        this._timer = new Timer(this.progress.bind(this), this._interval)\n      }\n\n      this._registerListeners()\n    },\n\n    /**\n     * Start interval checks.\n     */\n    start: function () {\n      this._timer.start()\n    },\n\n    /**\n     * Stop interval checks.\n     */\n    stop: function () {\n      if (this._timer) this._timer.stop()\n    },\n\n    _registerListeners: function () {\n      this._plugin.on('resume', this._resumeListener.bind(this))\n    },\n\n    _resumeListener: function (e) {\n      this._jumpNextProgress = true\n    },\n\n    /**\n     * Call this method at every tick of timeupdate/progress.\n     * If you defined an interval, do not fire this method manually.\n     */\n    progress: function () {\n      if (this._jumpNextProgress) {\n        this._jumpNextProgress = false\n        return // Jump tick\n      }\n\n      // Reset timer\n      var deltaTime = this._chrono.stop()\n      this._chrono.start()\n\n      // Define thresholds\n      var seekThreshold = deltaTime * PlayheadMonitor.kTHRESHOLD_RATIO\n      var bufferThreshold = deltaTime / PlayheadMonitor.kTHRESHOLD_RATIO\n      var minBuffer = deltaTime * PlayheadMonitor.kMIN_BUFFER_RATIO\n\n      // Calculate diff playhead\n      var currentPlayhead = this._getPlayhead()\n      var diffPlayhead = Math.abs(this._lastPlayhead - currentPlayhead) * 1000\n\n      // Log.debug('curr: ' + currentPlayhead +\n      //   ' last: ' + this._lastPlayhead +\n      //   ' diff: ' + diffPlayhead)\n\n      if (diffPlayhead < bufferThreshold) {\n        // Playhead is stalling > buffer\n        if (this._bufferEnabled &&\n          this._lastPlayhead > 0 &&\n          !this._plugin.flags.isBuffering &&\n          !this._plugin.flags.isPaused &&\n          !this._plugin.flags.isSeeking\n        ) {\n          this._plugin.emit('buffer-begin')\n        }\n      } else if (diffPlayhead > seekThreshold) {\n        // Playhead has jumped > seek\n        if (this._seekEnabled && this._lastPlayhead > 0 &&\n          !this._plugin.flags.isSeeking\n        ) {\n          this._plugin.emit('seek-begin')\n        }\n      } else {\n        // Healthy\n        if (this._seekEnabled &&\n          this._plugin.flags.isSeeking\n        ) {\n          this._plugin.emit('seek-end')\n        } else if (\n          this._bufferEnabled &&\n          this._plugin.flags.isBuffering &&\n          this._plugin.chronos.buffer.getDeltaTime(false) > minBuffer\n        ) {\n          this._plugin.emit('buffer-end')\n        }\n      }\n\n      // Update Playhead\n      this._lastPlayhead = currentPlayhead\n    },\n    /**\n     * Returns plugin's playhead. Override to add a custom playhead getter.\n     * @private\n     * @returns {double} Playhead in seconds\n     */\n    _getPlayhead: function () {\n      return this._plugin.getPlayhead()\n    }\n  }, {\n    // Static methods\n\n    /**\n     * Enum for monitoring type\n     * @enum\n     */\n    Type: {\n      /** Would not monitor */\n      NONE: 0,\n      /** Sends buffer-begin/end */\n      BUFFER: 1,\n      /** Sends seek-begin/end */\n      SEEK: 2\n    },\n\n    /** Threshold multiplier */\n    kTHRESHOLD_RATIO: 2,\n\n    /** Ignore small buffers under this ratio */\n    kMIN_BUFFER_RATIO: 1.1\n\n  })\n\nmodule.exports = PlayheadMonitor\n","/* eslint no-extend-native: \"off\" */\n\n/**\n * Youboralib applies polyfills (if needed) to the following functionalities:\n * Function.prototype.bind,\n * Object.assign,\n * Object.create,\n * Array.prototype.forEach,\n * Array.isArray,\n */\nvar applyPolyfills = function () {\n  // Bind\n  Function.prototype.bind = Function.prototype.bind || function (b) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n    }\n    var a = Array.prototype.slice\n    var f = a.call(arguments, 1)\n    var e = this\n    var C = function () {}\n    var d = function () {\n      return e.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)))\n    }\n    C.prototype = this.prototype\n    d.prototype = new C()\n    return d\n  }\n\n  // Assign\n  Object.assign = Object.assign || function (target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object')\n    }\n\n    var output = Object(target)\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index]\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey]\n          }\n        }\n      }\n    }\n    return output\n  }\n\n  // Create\n  Object.create = Object.create || (function () {\n    var Temp = function () {}\n    return function (prototype, propertiesObject) {\n      if (prototype !== Object(prototype) && prototype !== null) {\n        throw TypeError('Argument must be an object, or null')\n      }\n      Temp.prototype = prototype || {}\n      var result = new Temp()\n      Temp.prototype = null\n      if (propertiesObject !== undefined) {\n        Object.defineProperties(result, propertiesObject)\n      }\n\n      // to imitate the case of Object.create(null)\n      if (prototype === null) {\n        result.prototype = null\n      }\n      return result\n    }\n  })()\n\n  // Foreach\n  Array.prototype.forEach = Array.prototype.forEach || function (callback, thisArg) {\n    if (typeof (callback) !== 'function') {\n      throw new TypeError(callback + ' is not a function!')\n    }\n    var len = this.length\n    for (var i = 0; i < len; i++) {\n      callback.call(thisArg, this[i], i, this)\n    }\n  }\n\n  // isArray\n  Array.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]'\n  }\n}\n\nmodule.exports = applyPolyfills\n","var YouboraObject = require('./object')\nvar Chrono = require('./chrono')\n\nvar Timer = YouboraObject.extend(\n  /** @lends Timer.prototype */\n  {\n    /**\n     * Instances of this class will call a callback every setted interval.\n     *\n     * @param {function} callback The callback to call every due interval.\n     * Callback will receive lapsed ms between calls.\n     * @param {int} [interval=5000] Milliseconds between each call.\n     *\n     * @constructs Timer\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (callback, interval) {\n      this.callback = callback\n      this.interval = interval || 5000\n      this.isRunning = false\n      this._timer = null\n\n      this.chrono = new Chrono()\n    },\n\n    /**\n     * Starts the timer.\n     */\n    start: function () {\n      this.isRunning = true\n      this._setTick()\n    },\n\n    /**\n     * Stops the timer.\n     */\n    stop: function () {\n      this.isRunning = false\n      if (this._timer) clearTimeout(this._timer)\n    },\n\n    _setTick: function () {\n      this.chrono.start()\n      this.timer = setTimeout(function () {\n        this.callback(this.chrono.stop())\n        this._setTick()\n      }.bind(this), this.interval)\n    }\n  }\n)\n\nmodule.exports = Timer\n","var Transform = require('./transform')\nvar Log = require('../log')\nvar YBRequest = require('../comm/request')\n\nvar CdnTransform = Transform.extend(\n  /** @lends CdnTransform.prototype */\n  {\n    /**\n     * Extend this class to implement your own ResourceTransform parser task.\n     *\n     * @constructs CdnTransform\n     * @extends Transform\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function (options) {\n      this._options = Object.assign({\n        cdnName: null,\n        parsers: [],\n        requestHeaders: {},\n        parseType: function () { return 0 }\n      }, options)\n    },\n\n    addParser: function (parser) {\n      this._options.parsers.push(parser)\n      return this\n    },\n\n    setCdnName: function (name) {\n      this._options.cdnName = name\n      return this\n    },\n\n    setRequestHeader: function (key, value) {\n      this._options.requestHeaders[key] = value\n      return this\n    },\n\n    setParseType: function (parser) {\n      this._options.parseType = parser\n      return this\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Parses given headers to check for matches.\n     */\n    parse: function (url, responses) {\n      responses = responses || {}\n      var headerString = JSON.stringify(this._options.requestHeaders)\n      if (responses[headerString]) {\n        this._parseResponse(responses[headerString])\n      } else {\n        this._requestResponse(url, responses)\n      }\n    },\n\n    _requestResponse: function (url, responses) {\n      var headerString = JSON.stringify(this._options.requestHeaders)\n\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: this._options.requestHeaders\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        responses[headerString] = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(responses[headerString])\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      this._options.parsers.forEach(function (parser) {\n        headers.split('\\n').forEach(function (line) {\n          var index = line.indexOf(':')\n          if (index !== -1) {\n            var key = line.slice(0, index)\n            if (key === parser.headerName) {\n              this._executeParser(parser, line.slice(index + 1))\n            }\n          }\n        }.bind(this))\n      }.bind(this))\n      this.done()\n    },\n\n    _executeParser: function (parser, value) {\n      try {\n        var matches = parser.regex.exec(value.trim())\n        if (matches !== null) {\n          if (this._options.cdnName) this._cdnName = this._options.cdnName\n          switch (parser.element) {\n            case 'host':\n              this._cdnNodeHost = matches[1]\n              break\n            case 'type':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'host+type':\n              this._cdnNodeHost = matches[1]\n              this._cdnNodeTypeString = matches[2]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'type+host':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              this._cdnNodeHost = matches[2]\n              break\n            case 'name':\n              this._cdnName = matches[1].toUpperCase()\n              break\n          }\n        }\n      } catch (err) {\n        Log.warn('CDN parsing for ' + this._options.cdnName +\n          ' could not parse header value ' + value)\n      }\n    }\n\n  },\n\n  /** @lends CdnParser */\n  {\n    // Static members\n    _cdns: {\n      Level3: {\n        cdnName: 'LEVEL3',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-WR-DIAG',\n          regex: /Host:(.+)\\sType:(.+)/\n        }],\n        requestHeaders: {\n          'X-WR-DIAG': 'host'\n        },\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n            case 'TCP_MEM_HIT':\n            case 'TCP_IMS_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Cloudfront: {\n        cdnName: 'CLOUDFRT',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Amz-Cf-Id',\n          regex: /(.+)/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /(\\S+)\\s.+/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'Hit':\n              return 1\n            case 'Miss':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Akamai: {\n        cdnName: 'AKAMAI',\n        parsers: [{\n          element: 'type+host',\n          headerName: 'X-Cache',\n          regex: /(.+)\\sfrom\\s.+\\(.+\\/(.+)\\).*/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Highwinds: {\n        cdnName: 'HIGHNEGR',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-HW',\n          regex: /.+,[0-9]+\\.(.+)\\.(.+)/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'c':\n            case 'x':\n              return 1\n            default:\n              return 2\n          }\n        }\n      },\n      Fastly: {\n        cdnName: 'FASTLY',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Served-By',\n          regex: /([^,\\s]+)$/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /([^,\\s]+)$/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'HIT':\n              return 1\n            case 'MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Balancer: {\n        parsers: [{\n          element: 'name',\n          headerName: null,\n          regex: /(.+)/\n        }]\n      }\n    },\n\n    setBalancerHeaderName: function (name) {\n      CdnTransform._cdns.Balancer.parsers[0].headerName = name\n    },\n\n    create: function (key) {\n      if (CdnTransform._cdns[key]) {\n        return new CdnTransform(CdnTransform._cdns[key])\n      } else {\n        Log.warn('Tried to create an unexisting CdnTransform named ' + key)\n      }\n    },\n\n    add: function (key, parser) {\n      CdnTransform._cdns[key] = parser\n    }\n  }\n)\n\nmodule.exports = CdnTransform\n","var Transform = require('./transform')\nvar YBRequest = require('../comm/request')\nvar Log = require('../log')\n\nvar HlsTransform = Transform.extend(\n  /** @lends HlsTransform.prototype */\n  {\n    /**\n     * Extend this class to implement your own ResourceTransform parser task.\n     *\n     * @constructs HlsTransform\n     * @extends Transform\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     *\n     *\n     * @param {string} resource Either the resource url or the manifest body.\n     * @param {string} parentResource Parent resource in case relative paths are sent.\n     */\n    parse: function (resource, parentResource) {\n      parentResource = parentResource || ''\n\n      try {\n        var matches = /((\\S*?)(\\.m3u8|\\.m3u|\\.ts|\\.mp4)(\\?\\S*|\\n|\\r|$))/i.exec(resource)\n      } catch (err) {\n        Log.warn('Parse HLS Regex failed', err)\n        this.done()\n      }\n\n      if (matches !== null) { // get first line ending in .m3u8, .m3u, .mp4 or .ts\n        var res = matches[1].trim()\n\n        var index = parentResource.lastIndexOf('/')\n        if (res.indexOf('http') !== 0 && index !== -1) {\n          // If does not start with http, add parentResource relative route.\n          res = parentResource.slice(0, index) + '/' + res\n        }\n\n        if (matches[3] === '.m3u8' || matches[3] === '.m3u') { // It is m3u8 or m3u...\n          var request = new YBRequest(res, null, null, { cache: true })\n\n          request.on(YBRequest.Event.SUCCESS, function (resp) {\n            this.parse(resp.getXHR().responseText, matches[2])\n          }.bind(this))\n\n          request.on(YBRequest.Event.ERROR, function (resp) {\n            this.done()\n          }.bind(this))\n\n          request.send()\n        } else { // It is mp4 or ts...\n          this._realResource = res\n          this.done()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    getResource: function () {\n      return this._realResource\n    }\n  }\n)\n\nmodule.exports = HlsTransform\n","var Transform = require('./transform')\n\nvar Nqs6Transform = Transform.extend(\n  /** @lends Nqs6Transform.prototype */\n  {\n\n    /**\n     * This class ensures NQS6 retrocompatibility\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.done()\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      this._cloneParam(request, 'accountCode', 'system')\n      this._cloneParam(request, 'transactionCode', 'transcode')\n      this._cloneParam(request, 'username', 'user')\n      this._cloneParam(request, 'mediaResource', 'resource')\n      this._cloneParam(request, 'errorMsg', 'msg')\n\n      if (request.service !== '/joinTime') {\n        this._cloneParam(request, 'playhead', 'time')\n      }\n\n      switch (request.service) {\n        case '/start':\n          this._cloneParam(request, 'mediaDuration', 'duration')\n          break\n\n        case '/joinTime':\n          this._cloneParam(request, 'joinDuration', 'time')\n          this._cloneParam(request, 'playhead', 'eventTime')\n          break\n\n        case '/seek':\n          this._cloneParam(request, 'seekDuration', 'duration')\n          break\n\n        case '/bufferUnderrun':\n          this._cloneParam(request, 'bufferDuration', 'duration')\n          break\n\n        case '/ping':\n          for (var key in request.params.entities) {\n            request.params.entityType = key\n            request.params.entityValue = request.params.entities[key]\n            break\n          }\n          break\n      }\n    },\n\n    _cloneParam: function (request, from, to) {\n      request.params[to] = request.params[from]\n    }\n  })\n\nmodule.exports = Nqs6Transform\n","var Transform = require('./transform')\nvar HlsTransform = require('./hls')\nvar CdnTransform = require('./cdn')\nvar Log = require('../log')\n\nvar ResourceTransform = Transform.extend(\n  /** @lends ResourceTransform.prototype */\n  {\n    /**\n     * This class parses resource to fetch transportstreams, CDNs and Node info.\n     *\n     * @constructs ResourceTransform\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Otions} options Instance of {@link Options}\n     */\n    constructor: function (options, info) {\n      ResourceTransform.__super__.constructor.apply(this, arguments)\n\n      this._hlsEnabled = options['parse.HLS']\n      this._cdnEnabled = options['parse.CDNNode']\n      this._cdnList = options['parse.CDNNode.list']\n      this._cdnNameHeader = options['parse.CDNNameHeader']\n      CdnTransform.setBalancerHeaderName(this._cdnNameHeader)\n      this._info = info\n\n      this._isBusy = false\n    },\n\n    getResource: function () {\n      return this._realResource || this._initResource\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    init: function (resource) {\n      if (!this._isBusy) {\n        this._isBusy = true\n\n        this._initResource = resource\n\n        this._setTimeout()\n\n        if (this._hlsEnabled) {\n          this._parseHLS()\n        } else if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }\n    },\n\n    _setTimeout: function () {\n      // Abort operation after 3s\n      this._parseTimeout = setTimeout(function () {\n        if (this._isBusy) {\n          this.done()\n          Log.warn(\n            'ResourceTransform has exceded the maximum execution time (3s) and will be aborted.'\n          )\n        }\n      }.bind(this), 3000)\n    },\n\n    _parseHLS: function () {\n      var hlsTransform = new HlsTransform()\n      hlsTransform.on(HlsTransform.Event.DONE, function () {\n        this._realResource = this._hlsTransform.getResource()\n        if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }.bind(this))\n      hlsTransform.parse(this._initResource)\n    },\n\n    _parseCDN: function () {\n      var cdnList = this._cdnList.slice()\n      cdnList.forEach(function (cdn) {\n        if (this.getNodeHost()) return // break\n\n        var cdnTransform = CdnTransform.create(cdn)\n        cdnTransform.on(CdnTransform.Event.DONE, function () {\n          this._cdnName = cdnTransform.getCdnName()\n          this._cdnNodeHost = cdnTransform.getNodeHost()\n          this._cdnNodeTypeString = cdnTransform.getNodeTypeString()\n          this._cdnNodeType = cdnTransform.getNodeType()\n\n          if (this.getNodeHost()) this.done()\n        }.bind(this))\n        cdnTransform.parse(this.getResource())\n      }.bind(this))\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      if (request.service === '/start') {\n        this._info.lastSent.mediaResource = request.params.mediaResource = this.getResource()\n\n        if (this._cdnEnabled) {\n          this._info.lastSent.cdn = request.params.cdn = request.params.cdn || this.getCdnName()\n          this._info.lastSent.nodeHost = request.params.nodeHost = this.getNodeHost()\n          this._info.lastSent.nodeType = request.params.nodeType = this.getNodeType()\n          request.params.nodeTypeString = this.getNodeTypeString()\n          this._info.lastSent.nodeTypeString = request.params.nodeTypeString\n        }\n      }\n    }\n  })\n\nmodule.exports = ResourceTransform\n","var Emitter = require('../emitter')\n\nvar Transform = Emitter.extend(\n  /** @lends Parser.prototype */\n\n  /**\n   * Transform classes among youbora helps the library parse and work with data.\n   * HLSParser, CDNParser, ResourceTransform or ViewTransform all extend from this class.\n   *\n   * @constructs Parser\n   * @extends Emitter\n   * @memberof youbora\n   * @abstract\n   */\n  {\n    constructor: function () {\n      this._isBusy = true\n    },\n\n    /**\n     * Override this method to transform info.\n     */\n    parse: function () {},\n\n    /**\n     * Returns if transform is blocking\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      return this._isBusy\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this._isBusy = false\n      this.emit(Transform.Event.DONE)\n    }\n  },\n\n  /** @lends Parser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /**\n       * Notifies that this parser is done processing.\n       */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = Transform\n","var YBRequest = require('../comm/request')\nvar Transform = require('./transform')\nvar Log = require('../log')\nvar Util = require('../util')\nvar DataActionBuilder = require('../actionbuilder/data')\n\nvar ViewTransform = Transform.extend(\n  /** @lends ViewTransform.prototype */\n  {\n    /**\n     * This class manages Fastdata service and view index.\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Otions} options Instance of {@link InfoGatherer}\n     */\n    constructor: function (info) {\n      ViewTransform.__super__.constructor.apply(this, arguments)\n\n      /** /data response */\n      this.response = {}\n\n      this._viewIndex = -1\n\n      var request = new DataActionBuilder(info).buildRequest()\n      request.host = info.getHost()\n      this._requestData(request)\n    },\n\n    _requestData: function (request) {\n      request\n        .on(YBRequest.Event.SUCCESS, this._receiveData.bind(this))\n        .on(YBRequest.Event.ERROR, this._failedData.bind(this))\n        .send()\n\n      if (request.params.system === 'nicetest') {\n        Log.error(\n          'No accountCode has been set. Please set your accountCode inside plugin\\'s options.'\n        )\n      }\n    },\n\n    _receiveData: function (req, e) {\n      try {\n        var msg = req.getXHR().response\n        var resp = JSON.parse(msg.slice(msg.indexOf('(') + 1, msg.lastIndexOf(')')))\n\n        this.response.host = Util.addProtocol(resp.q.h)\n        this.response.code = resp.q.c\n        this.response.pingTime = resp.q.pt\n\n        this.done()\n      } catch (err) {\n        Log.error('Fastdata response is invalid.')\n      }\n    },\n\n    _failedData: function (req, e) {\n      Log.error('Fastdata request failed.')\n    },\n\n    /**\n     * Call this method when a new content begins, it will increment the view index (_0, _1, _2...)\n     * @return {string} new viewcode\n     */\n    nextView: function () {\n      this._viewIndex += 1\n      return this.getViewCode()\n    },\n\n    /**\n     * Returns current viewcode\n     * @return {string} viewcode\n     */\n    getViewCode: function () {\n      return this.response.code + '_' + this._viewIndex\n    },\n\n    /**\n     * Transform requests\n     * @param {youbora.comm.YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      request.host = request.host || this.response.host\n      request.params.code = request.params.code || this.getViewCode()\n      if (request.service === '/ping' || request.service === '/start') {\n        request.params.pingTime = request.params.pingTime || this.response.pingTime\n      }\n    }\n  })\n\nmodule.exports = ViewTransform\n","var Log = require('./log')\n\n/**\n * This static class provides utilities\n * @class\n * @static\n * @memberof youbora\n */\nvar Util = {\n  /**\n   * Strip {protocol}:// and // from the begining of the string.\n   *\n   * @param {string} url\n   * @returns {string} stripped url\n   */\n  stripProtocol: function (url) {\n    try {\n      return url.replace(/^(.*?:\\/\\/|\\/\\/)/i, '')\n    } catch (err) {\n      Log.warn(err)\n      return url\n    }\n  },\n\n  /**\n   * Adds specific protocol. ie: [http[s]:]//nqs.nice264.com\n   *\n   * @param {string} url Domain of the service.\n   * @param {boolean|null} [httpSecure]\n   * If true will add https, if false http.\n   * Otherwise will add //\n   * @return Return the complete service URL.\n   */\n  addProtocol: function (url, httpSecure) {\n    try {\n      if (httpSecure === true) {\n        return 'https://' + url\n      } else if (window.location.protocol.indexOf('http') === 0) {\n        return '//' + url\n      } else {\n        return 'http://' + url\n      }\n    } catch (err) {\n      Log.warn(err)\n      return 'http://localhost/'\n    }\n  },\n\n  /**\n   * Return n if it isn't NaN, negative, Infinity, null or undefined.\n   * In any other case, return def.\n   *\n   * @param {mixed} n Number to be parsed.\n   * @param {number} defl Number to return if n is not correct.\n   */\n  parseNumber: function (n, def) {\n    if (!isNaN(n) && n >= 0 && n !== Infinity && n !== null && typeof n !== 'undefined') {\n      return n\n    } else {\n      return def\n    }\n  },\n\n  /**\n   * This utility function will add most of the HTML5 event listener to the player sent.\n   * This common events will be listened: 'canplay', 'buffering', 'waiting', 'ended', 'play',\n   * 'playing', 'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked', 'stalled',\n   * 'dispose', 'loadeddata', 'loadstart'.\n   *\n   * Events will be reported as DEBUG level messages.\n   *\n   * @param {object|function} o Object to attach the events.\n   * @param {array} [extraEvents]\n   * An array of extra events to watch. ie:  ['timeupdate', 'progress'].\n   * If the first item is null, no common events will be added.\n   * @param {function} [report] Callback function called to report events.\n   * Default calls Log.debug()\n   */\n  listenAllEvents: function (o, extraEvents, report) {\n    try {\n      if (Log.logLevel <= Log.Level.DEBUG) {\n        report = report || function (e) {\n          Log.debug('Event: ' + e.type)\n        }\n\n        var playerEvents = [\n          'canplay', 'buffering', 'waiting', 'ended', 'play', 'playing',\n          'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked',\n          'stalled', 'dispose', 'loadeddata', 'loadstart'\n        ]\n        if (extraEvents) {\n          if (extraEvents[0] === null) {\n            extraEvents.shift()\n            playerEvents = extraEvents\n          } else {\n            playerEvents = playerEvents.concat(extraEvents)\n          }\n        }\n\n        for (var i = 0; i < playerEvents.length; i++) {\n          if (typeof o === 'function') {\n            o.call(window, playerEvents[i], report)\n          } else if (o.on) {\n            o.on(playerEvents[i], report)\n          } else if (o.addEventListener) {\n            o.addEventListener(playerEvents[i], report)\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(err)\n    }\n  },\n\n  /**\n   * Builds a string that represents the rendition.\n   *\n   * The returned string will have the following format: <width>x<height>@bitrate<suffix?>.\n   * If either the width or height are < 1, only the bitrate will be returned.\n   * If bitrate is < 1, only the dimensions will be returned.\n   * If bitrate is < and there is no dimensions, a null will be returned.\n   * The bitrate will also have one of the following suffixes dependin on its\n   * magnitude: bps, Kbps, Mbps\n   *\n   * @param {any} width The width of the asset. If only 1 argument is sent, it will be treated\n   * as bitrate.\n   * @param {any} height The height of the asset.\n   * @param {any} bitrate The indicated bitrate (in the manifest) of the asset.\n   * @returns {string} A string with the following format: <width>x<height>@<bitrate><suffix>\n   */\n  buildRenditionString: function (width, height, bitrate) {\n    if (arguments.length === 1) {\n      bitrate = width\n      width = null\n      height = null\n    }\n\n    var ret = ''\n    if (width && height) {\n      ret = width + 'x' + height\n      if (bitrate > 0) {\n        ret += '@'\n      }\n    }\n\n    if (bitrate < 1) {\n      return ret\n    } else if (bitrate < 1e3) {\n      ret += Math.round(bitrate) + 'bps'\n    } else if (bitrate < 1e6) {\n      bitrate = Math.round(bitrate / 1e3)\n      ret += bitrate + 'Kbps'\n    } else {\n      bitrate = Math.round(bitrate / 1e4) / 1e2\n      ret += bitrate + 'Mbps'\n    }\n\n    return ret || null\n  }\n\n}\n\nmodule.exports = Util\n","// No-Conflict\nvar previousYoubora = youbora\nvar youbora = {}\n\n/**\n * This allows you to run multiple instances of YouboraLib on the same webapp.\n * After loading the new version, call `noConflict()` to get a reference to it.\n * At the same time the old version will be returned to Youbora.\n */\nyoubora.noConflict = function () {\n  youbora = previousYoubora\n  return this\n}\n\n// Info\nyoubora.VERSION = require('./version')\n\n// Polyfills\nrequire('./polyfills')() // Apply pollyfills\n\n// Classes\nyoubora.Object = require('./object')\nyoubora.Emitter = require('./emitter')\nyoubora.Log = require('./log')\nyoubora.Util = require('./util')\nyoubora.Chrono = require('./chrono')\nyoubora.Timer = require('./timer')\nyoubora.Options = require('./options')\n\n// Comm classes\nyoubora.Request = require('./comm/request')\nyoubora.Communication = require('./comm/communication')\n\n// Resource Transform\nyoubora.Transform = require('./transform/transform')\nyoubora.ResourceTransform = require('./transform/resource')\nyoubora.CdnTransform = require('./transform/cdn')\n\n// Controller Classes\nyoubora.Controller = require('./controller/controller')\n\n// Plugin helper Classes\nyoubora.ChronoStatus = require('./plugin/chronostatus')\nyoubora.FlagStatus = require('./plugin/flagstatus')\nyoubora.PlayheadMonitor = require('./plugin/playheadmonitor')\n\n// Plugins\nyoubora.plugins = {\n  Generic: require('./plugin/generic')\n}\n\n// Load LogLevel from url\nyoubora.Log.loadLevelFromUrl()\n\nmodule.exports = youbora\n","module.exports={\n  \"name\": \"youbora-html5-plugin\",\n  \"version\": \"6.0.0-rc\",\n  \"description\": \"\",\n  \"main\": \"src/plugin.js\",\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"version\": \"npm run build && git add -A\",\n    \"postversion\": \"git push && git push --tags\"\n  },\n  \"dependencies\": {\n    \"youboralib\": \"^6.0.0-rc\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^13.1.0\",\n    \"del\": \"^2.2.2\",\n    \"eslint\": \"^3.7.1\",\n    \"eslint-config-standard\": \"^6.2.0\",\n    \"eslint-plugin-node\": \"^2.1.2\",\n    \"eslint-plugin-promise\": \"^3.4.0\",\n    \"eslint-plugin-standard\": \"^2.0.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-load-plugins\": \"^1.3.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sourcemaps\": \"^1.6.0\",\n    \"gulp-streamify\": \"^1.0.2\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"through2\": \"^2.0.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.7.0\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/NicePeopleAtWork/Youbora-Html5-JS.git\"\n  },\n  \"author\": \"Jordi Aguilar\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"email\": \"support@nicepeopleatwork.com\"\n  },\n  \"homepage\": \"https://github.com/NicePeopleAtWork/Youbora-Html5-JS#readme\"\n}\n","var youbora = require('youboralib')\nvar pkg = require('../package.json')\n\nyoubora.plugins.Html5 = youbora.plugins.Generic.extend({\n  getVersion: function () {\n    return pkg.version + '-html5'\n  },\n\n  getPlayhead: function () {\n    return this.player ? this.player.currentTime : 0\n  },\n\n  getDuration: function () {\n    return this.player ? this.player.duration : 0\n  },\n\n  getResource: function () {\n    return this.player ? this.player.currentSrc : 'unknown'\n  },\n\n  getPlayerName: function () {\n    return 'html5'\n  },\n\n  getPlayerVersion: function () {\n    return this.getPlayerName()\n  },\n\n  registerListeners: function () {\n    youbora.Util.listenAllEvents(this.player)\n\n    // Enable playhead monitor\n    this.createBufferMonitor()\n\n    // Register listeners\n    this.player.addEventListener('play', this.playListener.bind(this))\n    this.player.addEventListener('timeupdate', this.timeupdateListener.bind(this))\n    this.player.addEventListener('pause', this.pauseListener.bind(this))\n    this.player.addEventListener('playing', this.playingListener.bind(this))\n    this.player.addEventListener('error', this.errorListener.bind(this))\n    this.player.addEventListener('seeking', this.seekingListener.bind(this))\n    this.player.addEventListener('ended', this.endedListener.bind(this))\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    this.player.removeEventListener('play', this.onPlay)\n    this.player.removeEventListener('timeupdate', this.onTimeupdate)\n    this.player.removeEventListener('pause', this.onPause)\n    this.player.removeEventListener('playing', this.onPlaying)\n    this.player.removeEventListener('error', this.onError)\n    this.player.removeEventListener('seeking', this.onSeeking)\n    this.player.removeEventListener('ended', this.onEnded)\n  },\n\n  playListener: function (e) {\n    this.emit('start')\n  },\n\n  timeupdateListener: function (e) {\n    if (this.getPlayhead() > 0.1) {\n      this.emit('join')\n    }\n  },\n\n  pauseListener: function (e) {\n    this.emit('pause')\n  },\n\n  playingListener: function (e) {\n    this.emit('resume')\n    this.emit('seek-end')\n  },\n\n  errorListener: function (e) {\n    this.emit('error', {\n      msg: 'PLAY_FAILURE'\n    })\n  },\n\n  seekingListener: function (e) {\n    this.emit('seek-begin')\n  },\n\n  endedListener: function (e) {\n    this.emit('stop')\n  }\n\n})\n\nmodule.exports = youbora\n"]}