{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/youboralib/package.json","node_modules/youboralib/src/adapter/adapter.js","node_modules/youboralib/src/adapter/playbackchronos.js","node_modules/youboralib/src/adapter/playbackflags.js","node_modules/youboralib/src/adapter/playheadmonitor.js","node_modules/youboralib/src/chrono.js","node_modules/youboralib/src/comm/communication.js","node_modules/youboralib/src/comm/request.js","node_modules/youboralib/src/comm/transform/cdnparser.js","node_modules/youboralib/src/comm/transform/flow.js","node_modules/youboralib/src/comm/transform/hlsparser.js","node_modules/youboralib/src/comm/transform/nqs6.js","node_modules/youboralib/src/comm/transform/resource.js","node_modules/youboralib/src/comm/transform/transform.js","node_modules/youboralib/src/comm/transform/view.js","node_modules/youboralib/src/emitter.js","node_modules/youboralib/src/log.js","node_modules/youboralib/src/object.js","node_modules/youboralib/src/plugin/options.js","node_modules/youboralib/src/plugin/plugin.js","node_modules/youboralib/src/plugin/requestbuilder.js","node_modules/youboralib/src/polyfills.js","node_modules/youboralib/src/timer.js","node_modules/youboralib/src/util.js","node_modules/youboralib/src/version.js","node_modules/youboralib/src/youboralib.js","package.json","src/adapter.js","src/sp.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","youbora","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_args","raw","scope","escapedName","name","rawSpec","spec","type","hosted","ssh","sshUrl","httpsUrl","gitUrl","shortcut","directUrl","_from","_id","_inCache","_location","_phantomChildren","_requested","_requiredBy","_resolved","_shasum","_shrinkwrap","_spec","_where","author","bugs","email","dependencies","description","devDependencies","browserify","codecov","convert-source-map","del","eslint","eslint-config-standard","eslint-plugin-node","eslint-plugin-promise","eslint-plugin-standard","gulp","gulp-load-plugins","gulp-rename","gulp-sourcemaps","gulp-streamify","gulp-uglify","gulp-util","istanbul","jasmine","mock-browser","offset-sourcemap-lines","through2","vinyl-buffer","vinyl-source-stream","watchify","gitHead","homepage","license","main","optionalDependencies","readme","readmeFilename","repository","url","scripts","build","postversion","pretest","preversion","test","version","Emitter","Log","PlaybackChronos","PlaybackFlags","PlayheadMonitor","Adapter","extend","constructor","player","flags","chronos","monitor","document","getElementById","tag","registerListeners","notice","getVersion","emit","Event","READY","unregisterListeners","dispose","stop","fireStop","monitorPlayhead","monitorBuffers","monitorSeeks","Type","BUFFER","SEEK","getPlayhead","getPlayrate","isPaused","getFramesPerSecond","getDroppedFrames","getDuration","getBitrate","getThroughput","getRendition","getTitle","getTitle2","getIsLive","getResource","getPlayerVersion","getPlayerName","getPosition","fireStart","params","isStarted","total","start","join","START","fireJoin","isJoined","JOIN","firePause","pause","PAUSE","fireResume","skipNextTick","RESUME","fireBufferBegin","convertFromSeek","isBuffering","isSeeking","buffer","seek","clone","reset","BUFFER_BEGIN","fireBufferEnd","BUFFER_END","fireSeekBegin","convertFromBuffer","SEEK_BEGIN","fireSeekEnd","SEEK_END","STOP","fireError","msg","metadata","level","errorCode","errorMsg","errorMetadata","errorLevel","ERROR","fireFatalError","FATAL_ERROR","YouboraObject","Chrono","Timer","adapter","interval","_adapter","_seekEnabled","_bufferEnabled","_interval","_chrono","_lastPlayhead","_timer","progress","bind","deltaTime","bufferThreshold","kBUFFER_THRESHOLD_RATIO","seekThreshold","kSEEK_THRESHOLD_RATIO","currentPlayhead","_getPlayhead","diffPlayhead","Math","abs","NONE","startTime","stopTime","offset","getDeltaTime","now","Date","getTime","chrono","YBRequest","Transform","Communication","transforms","_requests","sendRequest","request","callback","on","SUCCESS","_registerRequest","buildRequest","host","service","addTransform","transform","parse","isBlocking","push","DONE","_processRequests","warn","removeTransform","pos","indexOf","splice","workingQueue","rejected","shift","_transform","send","ret","forEach","options","xhr","createXHR","Object","assign","method","requestHeaders","maxRetries","retryAfter","cache","retries","setParam","XMLHttpRequest","ActiveXObject","err","error","getXHR","getUrl","getParamString","event","addEventListener","off","removeEventListener","key","param","encodeURIComponent","JSON","stringify","slice","getParam","value","open","hasOwnProperty","setRequestHeader","genericError","setTimeout","logLevel","Level","VERBOSE","verbose","_globalListeners","LOAD","ABORT","onEvery","offEvery","index","CdnParser","_options","cdnName","parsers","parseType","done","addParser","parser","setCdnName","setParseType","getCdnName","_cdnName","getNodeHost","_cdnNodeHost","getNodeTypeString","_cdnNodeTypeString","getNodeType","_cdnNodeType","responses","headerString","_parseResponse","_requestResponse","resp","getAllResponseHeaders","headers","split","line","headerName","_executeParser","matches","regex","exec","trim","element","toUpperCase","_cdns","Level3","X-WR-DIAG","Cloudfront","Akamai","Highwinds","Fastly","Balancer","setBalancerHeaderName","create","add","FlowTransform","_services","_isBusy","prototype","apply","arguments","HlsParser","_realResource","resource","parentResource","res","lastIndexOf","responseText","Nqs6Transform","_cloneParam","entities","entityType","entityValue","from","to","ResourceTransform","plugin","__super__","_plugin","_initResource","init","_cdnNameHeader","_hlsEnabled","isParseHls","_cdnEnabled","isParseCdnNode","_cdnList","getParseCdnNodeList","getParseCdnNodeNameHeader","_setTimeout","_parseHLS","_parseCDN","_parseTimeout","hlsTransform","_hlsTransform","cdn","pop","cdnParser","lastSent","requestBuilder","mediaResource","nodeHost","nodeType","nodeTypeString","Util","ViewTransform","response","_viewIndex","apiVersion","outputformat","buildParams","system","getHost","_receiveData","_failedData","req","addProtocol","q","h","c","pingTime","pt","nextView","getViewCode","_listeners","data","Array","isArray","_eachCallback","target","_emitter","SILENT","WARNING","NOTICE","DEBUG","LOG","plainLogs","report","color","console","log","letters","5","4","3","2","letter","prefix","_getCurrentTime","documentMode","_plainReport","logMethod","debug","d","hh","getDate","mm","getMinutes","ss","getSeconds","mmm","getMilliseconds","m","loadLevelFromUrl","location","search","m2","protoProps","staticProps","parent","NewClass","enumerable","writable","configurable","Options","setOptions","base","RequestBuilder","Plugin","isInitiated","isPreloading","preloadChrono","initChrono","_ping","_sendPing","viewTransform","resourceTransform","setAdapter","_reset","_stopPings","removeAdapter","_startListener","_joinListener","_pauseListener","_resumeListener","_seekBeginListener","_seekEndListener","_bufferBeginListener","_bufferEndListener","_errorListener","_stopListener","getAdapter","setAdsAdapter","adsAdapter","removeAdsAdapter","_adsAdapter","_adStartListener","_adJoinListener","_adPauseListener","_adResumeListener","_adBufferBeginListener","_adBufferEndListener","_adStopListener","getAdsAdapter","disable","enabled","enable","_send","willSendEvent","_initComm","_comm","firePreloadBegin","firePreloadEnd","fireInit","_startPings","WILL_SEND_INIT","Service","INIT","title","WILL_SEND_START","WILL_SEND_JOIN","joinDuration","WILL_SEND_PAUSE","playhead","WILL_SEND_RESUME","pauseDuration","WILL_SEND_SEEK","seekDuration","WILL_SEND_BUFFER","bufferDuration","WILL_SEND_ERROR","WILL_SEND_STOP","adNumber","getAdNumber","WILL_SEND_AD_START","AD_START","WILL_SEND_AD_JOIN","AD_JOIN","adJoinDuration","WILL_SEND_AD_PAUSE","AD_PAUSE","adPlayhead","WILL_SEND_AD_RESUME","AD_RESUME","adPauseDuration","WILL_SEND_AD_BUFFER","AD_BUFFER","adBufferDuration","WILL_SEND_AD_STOP","AD_STOP","isRunning","diffTime","getChangedEntities","fetchParams","WILL_SEND_PING","PING","stripProtocol","parseNumber","getWebkitDroppedFrames","webkitDroppedFrameCount","round","getWebkitBitrate","webkitVideoDecodedByteCount","bitrate","_lastWebkitBitrate","delta","getOriginalResource","getTransactionCode","getMetadata","getCdn","getPluginVersion","getExtraparam1","getExtraparam2","getExtraparam3","getExtraparam4","getExtraparam5","getExtraparam6","getExtraparam7","getExtraparam8","getExtraparam9","getExtraparam10","getAdPosition","getAdPlayhead","getAdDuration","getAdBitrate","getWebkitAdBitrate","_lastWebkitAdBitrate","getAdTitle","getAdResource","getAdPlayerVersion","getAdMetadata","getPluginInfo","lib","adAdapter","getIp","getIsp","getConnectionType","getDeviceCode","getAccountCode","getUsername","getReferer","href","getPreloadDuration","getInitDuration","getJoinDuration","getBufferDuration","getSeekDuration","getPauseDuration","getAdJoinDuration","getAdBufferDuration","getAdPauseDuration","getTotalAdDuration","DATA","WILL_SEND_FATAL_ERROR","startParams","_adNumber","paramList","onlyDifferent","getterName","getters","differentParams","adPosition","/data","/init","/start","/joinTime","/pause","/resume","/seek","/bufferUnderrun","/error","concat","/stop","/adStart","/adJoin","/adPause","/adResume","/adBufferUnerrun","/adStop","/ping","/join","playrate","fps","droppedFrames","mediaDuration","throughput","rendition","title2","live","transactionCode","properties","playerVersion","pluginVersion","param1","param2","param3","param4","param5","param6","param7","param8","param9","param10","adDuration","adBitrate","adTitle","adResource","adPlayerVersion","adProperties","adnalyzerVersion","pluginInfo","isp","connectionType","ip","deviceCode","accountCode","username","totalAdDuration","preloadDuration","referer","applyPolyfills","Function","b","TypeError","C","undefined","output","source","nextKey","Temp","propertiesObject","result","defineProperties","thisArg","len","obj","toString","_setTick","clearTimeout","replace","httpSecure","protocol","def","isNaN","Infinity","listenAllEvents","extraEvents","playerEvents","buildRenditionString","width","height","previousYoubora","noConflict","VERSION","polyfills","Request","adapters","youboralib","fs","gulp-npawify","pkg","Html5","currentTime","duration","currentSrc","playListener","timeupdateListener","pauseListener","playingListener","errorListener","seekingListener","endedListener","onPlay","onTimeupdate","onPause","onPlaying","onError","onSeeking","onEnded"],"mappings":";;;;;;;CAAA,SAAAA,GAAA,SAAAC,WAAA,gBAAAC,UAAA,YAAA,CAAAA,OAAAD,QAAAD,QAAA,UAAAG,UAAA,YAAAA,OAAAC,IAAA,CAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAA,UAAAC,UAAA,YAAA,CAAAD,EAAAC,WAAA,UAAAC,UAAA,YAAA,CAAAF,EAAAE,WAAA,UAAAC,QAAA,YAAA,CAAAH,EAAAG,SAAA,CAAAH,EAAAI,KAAAJ,EAAAK,QAAAV,OAAA,WAAA,GAAAG,GAAAD,EAAAD,CAAA,OAAA,SAAAU,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAC,UAAA,YAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,GAAAmB,SAAAD,UAAA,YAAAA,OAAA,KAAA,GAAAH,GAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCAAC,EAAAD,SACA0B,SAGAC,IAAA,4DACAC,MAAA,KACAC,YAAA,aACAC,KAAA,aACAC,QAAA,iDACAC,KAAA,iDACAC,KAAA,SACAC,QACAD,KAAA,SACAE,IAAA,yCACAC,OAAA,mDACAC,SAAA,iDACAC,OAAA,2CACAC,SAAA,6BACAC,UAAA,8EAGA,wDAGAC,MAAA,iDACAC,IAAA,sBACAC,SAAA,KACAC,UAAA,cACAC,oBACAC,YACAnB,IAAA,4DACAC,MAAA,KACAC,YAAA,aACAC,KAAA,aACAC,QAAA,iDACAC,KAAA,iDACAC,KAAA,SACAC,QACAD,KAAA,SACAE,IAAA,yCACAC,OAAA,mDACAC,SAAA,iDACAC,OAAA,2CACAC,SAAA,6BACAC,UAAA,8EAGAO,aACA,QACA,KAEAC,UAAA,0FACAC,QAAA,2CACAC,YAAA,KACAC,MAAA,4DACAC,OAAA,sDACAC,QACAvB,KAAA,iBAEAwB,MACAC,MAAA,wBAEAC,gBACAC,YAAA,6aACAC,iBACAC,WAAA,UACAC,QAAA,SACAC,qBAAA,SACAC,IAAA,SACAC,OAAA,SACAC,yBAAA,SACAC,qBAAA,SACAC,wBAAA,SACAC,yBAAA,SACAC,KAAA,SACAC,oBAAA,SACAC,cAAA,SACAC,kBAAA,SACAC,iBAAA,SACAC,cAAA,SACAC,YAAA,SACAC,SAAA,SACAC,QAAA,SACAC,eAAA,WACAC,yBAAA,SACAC,SAAA,SACAC,eAAA,SACAC,sBAAA,SACAC,SAAA,UAEAC,QAAA,2CACAC,SAAA,mEACAC,QAAA,MACAC,KAAA,oBACAxD,KAAA,aACAyD,wBACAC,OAAA,quDACAC,eAAA,YACAC,YACAzD,KAAA,MACA0D,IAAA,qEAEAC,SACAC,MAAA,aACAC,YAAA,8BACAC,QAAA,gBACAC,WAAA,WACAC,KAAA,wFACAC,QAAA,+BAEAA,QAAA,oCC9GA,GAAAC,GAAAjF,EAAA,aACA,IAAAkF,GAAAlF,EAAA,SACA,IAAAgF,GAAAhF,EAAA,aACA,IAAAmF,GAAAnF,EAAA,oBACA,IAAAoF,GAAApF,EAAA,kBACA,IAAAqF,GAAArF,EAAA,oBAEA,IAAAsF,GAAAL,EAAAM,QAeAC,YAAA,SAAAC,GAEAnG,KAAAoG,MAAA,GAAAN,EAGA9F,MAAAqG,QAAA,GAAAR,EAGA7F,MAAAsG,QAAA,IAGAtG,MAAAmG,OAAA,IACA,UAAAA,KAAA,SAAA,CACAnG,KAAAmG,OAAAI,SAAAC,eAAAL,OACA,CACAnG,KAAAmG,OAAAA,EAIAnG,KAAAyG,IAAAzG,KAAAmG,MAEAnG,MAAA0G,mBAEAd,GAAAe,OAAA,WAAA3G,KAAA4G,aAAA,aAAAlB,EAAA,aAEA1F,MAAA6G,KAAAb,EAAAc,MAAAC,QAaAL,kBAAA,aASAM,oBAAA,aAKAC,QAAA,WACA,GAAAjH,KAAAsG,QAAAtG,KAAAsG,QAAAY,MACAlH,MAAAmH,UACAnH,MAAAgH,qBACAhH,MAAAmG,OAAA,IACAnG,MAAAyG,IAAA,MASAW,gBAAA,SAAAC,EAAAC,GACA,GAAA7F,GAAA,CACA,IAAA4F,EAAA5F,GAAAsE,EAAAwB,KAAAC,MACA,IAAAF,EAAA7F,GAAAsE,EAAAwB,KAAAE,IAEAzH,MAAAsG,QAAA,GAAAP,GAAA/F,KAAAyB,IAMAiG,YAAA,WACA,MAAA,OAIAC,YAAA,WACA,OAAA3H,KAAAoG,MAAAwB,SAAA,EAAA,GAIAC,mBAAA,WACA,MAAA,OAIAC,iBAAA,WACA,MAAA,OAIAC,YAAA,WACA,MAAA,OAIAC,WAAA,WACA,MAAA,OAIAC,cAAA,WACA,MAAA,OAIAC,aAAA,WACA,MAAA,OAIAC,SAAA,WACA,MAAA,OAIAC,UAAA,WACA,MAAA,OAIAC,UAAA,WACA,MAAA,OAIAC,YAAA,WACA,MAAA,OAIAC,iBAAA,WACA,MAAA,OAIAC,cAAA,WACA,MAAA,OAIA5B,WAAA,WACA,MAAAlB,GAAA,eAIA+C,YAAA,WACA,MAAA,OAWAC,UAAA,SAAAC,GACA,IAAA3I,KAAAoG,MAAAwC,UAAA,CACA5I,KAAAoG,MAAAwC,UAAA,IAEA5I,MAAAqG,QAAAwC,MAAAC,OACA9I,MAAAqG,QAAA0C,KAAAD,OAEA9I,MAAA6G,KAAAb,EAAAc,MAAAkC,OAAAL,OAAAA,MAUAM,SAAA,SAAAN,GACA,GAAA3I,KAAAoG,MAAAwC,YAAA5I,KAAAoG,MAAA8C,SAAA,CACA,GAAAlJ,KAAAsG,QAAAtG,KAAAsG,QAAAwC,OAEA9I,MAAAoG,MAAA8C,SAAA,IAEAlJ,MAAAqG,QAAA0C,KAAA7B,MAEAlH,MAAA6G,KAAAb,EAAAc,MAAAqC,MAAAR,OAAAA,MAUAS,UAAA,SAAAT,GACA,GAAA3I,KAAAoG,MAAA8C,WAAAlJ,KAAAoG,MAAAwB,SAAA,CACA5H,KAAAoG,MAAAwB,SAAA,IAEA5H,MAAAqG,QAAAgD,MAAAP,OAEA9I,MAAA6G,KAAAb,EAAAc,MAAAwC,OAAAX,OAAAA,MAUAY,WAAA,SAAAZ,GACA,GAAA3I,KAAAoG,MAAA8C,UAAAlJ,KAAAoG,MAAAwB,SAAA,CACA5H,KAAAoG,MAAAwB,SAAA,KAEA5H,MAAAqG,QAAAgD,MAAAnC,MAEA,IAAAlH,KAAAsG,QAAAtG,KAAAsG,QAAAkD,cAEAxJ,MAAA6G,KAAAb,EAAAc,MAAA2C,QAAAd,OAAAA,MAWAe,gBAAA,SAAAf,EAAAgB,GACA,GAAA3J,KAAAoG,MAAA8C,WAAAlJ,KAAAoG,MAAAwD,YAAA,CACA,GAAAD,GAAA3J,KAAAoG,MAAAyD,UAAA,CACAjE,EAAAe,OAAA,oCAEA3G,MAAAqG,QAAAyD,OAAA9J,KAAAqG,QAAA0D,KAAAC,OACAhK,MAAAqG,QAAA0D,KAAAE,OAEAjK,MAAAoG,MAAAyD,UAAA,UACA,CACA7J,KAAAqG,QAAAyD,OAAAhB,QAEA9I,KAAAoG,MAAAwD,YAAA,IAEA5J,MAAA6G,KAAAb,EAAAc,MAAAoD,cAAAvB,OAAAA,MAUAwB,cAAA,SAAAxB,GACA,GAAA3I,KAAAoG,MAAA8C,UAAAlJ,KAAAoG,MAAAwD,YAAA,CACA5J,KAAAoG,MAAAwD,YAAA,KAEA5J,MAAAqG,QAAAyD,OAAA5C,MAEA,IAAAlH,KAAAsG,QAAAtG,KAAAsG,QAAAkD,cAEAxJ,MAAA6G,KAAAb,EAAAc,MAAAsD,YAAAzB,OAAAA,MAWA0B,cAAA,SAAA1B,EAAA2B,GACA,GAAAtK,KAAAoG,MAAA8C,WAAAlJ,KAAAoG,MAAAyD,UAAA,CACA,GAAAS,IAAA,OAAAtK,KAAAoG,MAAAwD,YAAA,CACAhE,EAAAe,OAAA,oCAEA3G,MAAAqG,QAAA0D,KAAA/J,KAAAqG,QAAAyD,OAAAE,OACAhK,MAAAqG,QAAAyD,OAAAG,OAEAjK,MAAAoG,MAAAwD,YAAA,UACA,CACA5J,KAAAqG,QAAA0D,KAAAjB,QAGA9I,KAAAoG,MAAAyD,UAAA,IAEA7J,MAAA6G,KAAAb,EAAAc,MAAAyD,YAAA5B,OAAAA,MAUA6B,YAAA,SAAA7B,GACA,GAAA3I,KAAAoG,MAAA8C,UAAAlJ,KAAAoG,MAAAyD,UAAA,CACA7J,KAAAoG,MAAAyD,UAAA,KAEA7J,MAAAqG,QAAA0D,KAAA7C,MAEA,IAAAlH,KAAAsG,QAAAtG,KAAAsG,QAAAkD,cAEAxJ,MAAA6G,KAAAb,EAAAc,MAAA2D,UAAA9B,OAAAA,MAUAxB,SAAA,SAAAwB,GACA,GAAA3I,KAAAoG,MAAAwC,UAAA,CACA,GAAA5I,KAAAsG,QAAAtG,KAAAsG,QAAAY,MAEAlH,MAAAoG,MAAAwC,UAAA,KAEA5I,MAAAqG,QAAAwC,MAAA3B,MAEAlH,MAAA6G,KAAAb,EAAAc,MAAA4D,MAAA/B,OAAAA,MAaAgC,UAAA,SAAA9J,EAAA+J,EAAAC,EAAAC,GACA,GAAAnC,KACA,UAAA9H,KAAA,SAAA,CACA8H,EAAA9H,MACA,CACA8H,EAAAoC,UAAAlK,GAAA,cACA8H,GAAAqC,SAAAJ,GAAAjC,EAAAoC,SACApC,GAAAsC,cAAAJ,CACAlC,GAAAuC,WAAAJ,GAAA,QAGA9K,KAAA6G,KAAAb,EAAAc,MAAAqE,OAAAxC,OAAAA,KAWAyC,eAAA,SAAAvK,EAAA+J,EAAAC,GACA,GAAA7K,KAAAsG,QAAAtG,KAAAsG,QAAAY,MAEAlH,MAAA2K,UAAA9J,EAAA+J,EAAAC,EAAA,QACA7K,MAAAmH,cAYAL,OACAC,MAAA,QAEAiC,MAAA,QACAG,KAAA,OACAG,MAAA,QACAG,OAAA,SACAc,WAAA,aACAE,SAAA,WACAP,aAAA,eACAE,WAAA,aACAe,MAAA,QACAE,YAAA,cACAX,KAAA,SAKAjL,GAAAD,QAAAwG,qICnaA,GAAAsF,GAAA5K,EAAA,YACA,IAAA6K,GAAA7K,EAAA,YAEA,IAAAmF,GAAAyF,EAAArF,QAaAC,YAAA,WACAlG,KAAAiK,SAIAA,MAAA,WAEAjK,KAAA+I,KAAA,GAAAwC,EAGAvL,MAAA+J,KAAA,GAAAwB,EAGAvL,MAAAqJ,MAAA,GAAAkC,EAGAvL,MAAA8J,OAAA,GAAAyB,EAGAvL,MAAA6I,MAAA,GAAA0C,KAKA9L,GAAAD,QAAAqG,sDCxCA,GAAAyF,GAAA5K,EAAA,YAEA,IAAAoF,GAAAwF,EAAArF,QAWAC,YAAA,WACAlG,KAAAiK,SAIAA,MAAA,WAEAjK,KAAA4I,UAAA,KAGA5I,MAAAkJ,SAAA,KAGAlJ,MAAA4H,SAAA,KAGA5H,MAAA6J,UAAA,KAGA7J,MAAA4J,YAAA,QAKAnK,GAAAD,QAAAsG,wCCrCA,GAAAwF,GAAA5K,EAAA,YACA,IAAA8K,GAAA9K,EAAA,WACA,IAAA6K,GAAA7K,EAAA,YACA,IAAAkF,GAAAlF,EAAA,SAEA,IAAAqF,GAAAuF,EAAArF,QAgBAC,YAAA,SAAAuF,EAAAhK,EAAAiK,GACA1L,KAAA2L,SAAAF,CACAzL,MAAA4L,aAAAnK,EAAAsE,EAAAwB,KAAAE,IACAzH,MAAA6L,eAAApK,EAAAsE,EAAAwB,KAAAC,MACAxH,MAAA8L,UAAAJ,GAAA,GAEA1L,MAAA+L,QAAA,GAAAR,EACAvL,MAAAgM,cAAA,CAEA,IAAAhM,KAAA8L,UAAA,EAAA,CACA9L,KAAAiM,OAAA,GAAAT,GAAAxL,KAAAkM,SAAAC,KAAAnM,MAAAA,KAAA8L,aAOAhD,MAAA,WACA9I,KAAAiM,OAAAnD,SAMA5B,KAAA,WACA,GAAAlH,KAAAiM,OAAAjM,KAAAiM,OAAA/E,QAGAsC,aAAA,WACAxJ,KAAAgM,cAAA,GAOAE,SAAA,WAEA,GAAAE,GAAApM,KAAA+L,QAAA7E,MACAlH,MAAA+L,QAAAjD,OAGA,IAAAuD,GAAAD,EAAArG,EAAAuG,uBACA,IAAAC,GAAAH,EAAArG,EAAAyG,qBAGA,IAAAC,GAAAzM,KAAA0M,cACA,IAAAC,GAAAC,KAAAC,IAAA7M,KAAAgM,cAAAS,GAAA,GAMA,IAAAE,EAAAN,EAAA,CAEA,GAAArM,KAAA6L,gBACA7L,KAAAgM,cAAA,IACAhM,KAAA2L,SAAAvF,MAAAwB,WACA5H,KAAA2L,SAAAvF,MAAAyD,UACA,CACA7J,KAAA2L,SAAAjC,gBAAA,KAAA,YAEA,IAAAiD,EAAAJ,EAAA,CAEA,GAAAvM,KAAA4L,cAAA5L,KAAAgM,cAAA,EAAA,CACAhM,KAAA2L,SAAAtB,cAAA,KAAA,YAEA,CAEA,GAAArK,KAAA4L,aAAA,CACA5L,KAAA2L,SAAAnB,kBACA,IACAxK,KAAA6L,eAAA,CACA7L,KAAA2L,SAAAxB,iBAKAnK,KAAAgM,cAAAS,GAOAC,aAAA,WACA,MAAA1M,MAAA2L,SAAAjE,iBASAH,MAEAuF,KAAA,EAEAtF,OAAA,EAEAC,KAAA,GAIA6E,wBAAA,GAGAE,sBAAA,GAGA/M,GAAAD,QAAAuG,gFCpIA,GAAAuF,GAAA5K,EAAA,WAEA,IAAA6K,GAAAD,EAAArF,QAUAC,YAAA,WACAlG,KAAAiK,SAIAA,MAAA,WAEAjK,KAAA+M,UAAA,CAGA/M,MAAAgN,SAAA,CAGAhN,MAAAiN,OAAA,GASAC,aAAA,SAAAhG,GACA,GAAAiG,IAAA,GAAAC,OAAAC,SACA,IAAArN,KAAA+M,UAAA,CACA,GAAA7F,IAAAlH,KAAAgN,SAAA,CAAAhN,KAAAgN,SAAAG,EACA,MAAAnN,MAAAiN,QAAAE,EAAAnN,KAAA+M,eACA,CACA,OAAA,IAOAjE,MAAA,WACA9I,KAAA+M,WAAA,GAAAK,OAAAC,SACArN,MAAAgN,SAAA,GAOA9F,KAAA,WACAlH,KAAAgN,UAAA,GAAAI,OAAAC,SACA,OAAArN,MAAA+M,UAAA/M,KAAAiN,QAAAjN,KAAAgN,SAAAhN,KAAA+M,YAAA,GAMA/C,MAAA,WACA,GAAAsD,GAAA,GAAA/B,EACA+B,GAAAP,UAAA/M,KAAA+M,SACAO,GAAAN,SAAAhN,KAAAgN,QACAM,GAAAL,OAAAjN,KAAAiN,MACA,OAAAK,KAKA7N,GAAAD,QAAA+L,uCC1EA,GAAAD,GAAA5K,EAAA,YACA,IAAAkF,GAAAlF,EAAA,SACA,IAAA6M,GAAA7M,EAAA,YACA,IAAA8M,GAAA9M,EAAA,wBAEA,IAAA+M,GAAAnC,EAAArF,QAeAC,YAAA,WAEAlG,KAAA0N,aAMA1N,MAAA2N,cASAC,YAAA,SAAAC,EAAAC,GACA,GAAAD,EAAA,CACA,SAAAC,KAAA,WAAAD,EAAAE,GAAAR,EAAAzG,MAAAkH,QAAAF,EACA9N,MAAAiO,iBAAAJ,KAYAK,aAAA,SAAAC,EAAAC,EAAAzF,EAAAmF,GACAnF,EAAAA,KACA,IAAAkF,GAAA,GAAAN,GAAAY,EAAAC,EAAAzF,EACA,UAAAmF,KAAA,WAAAD,EAAAE,GAAAR,EAAAzG,MAAAkH,QAAAF,EACA9N,MAAAiO,iBAAAJ,IAQAQ,aAAA,SAAAC,GACA,GAAAA,EAAAC,OAAAD,EAAAE,WAAA,CACAxO,KAAA0N,WAAAe,KAAAH,EACAA,GAAAP,GAAAP,EAAA1G,MAAA4H,KAAA1O,KAAA2O,iBAAAxC,KAAAnM,WACA,CACA4F,EAAAgJ,KAAAN,EAAA,uCASAO,gBAAA,SAAAP,GACA,GAAAQ,GAAA9O,KAAA0N,WAAAqB,QAAAT,EACA,IAAAQ,KAAA,EAAA,CACA9O,KAAA0N,WAAAsB,OAAAF,EAAA,OACA,CACAlJ,EAAAgJ,KAAA,0CAAAN,EAAA,QAUAL,iBAAA,SAAAJ,GACA7N,KAAA2N,UAAAc,KAAAZ,EACA7N,MAAA2O,oBAOAA,iBAAA,WACA,GAAAM,GAAAjP,KAAA2N,SACA3N,MAAA2N,YAEA,IAAAuB,KACA,OAAAD,EAAAjO,OAAA,CACA,GAAA6M,GAAAoB,EAAAE,OACA,IAAAnP,KAAAoP,WAAAvB,GAAA,CACAA,EAAAwB,WACA,CACAH,EAAAT,KAAAZ,IAIA,MAAAqB,EAAAlO,OAAA,CACAhB,KAAA2N,UAAAc,KAAAS,EAAAC,WASAC,WAAA,SAAAvB,GACA,GAAAyB,GAAA,IACAtP,MAAA0N,WAAA6B,QAAA,SAAAjB,GACA,GAAAA,EAAAE,WAAAX,GAAA,CACAyB,EAAA,KACA,YACA,CACAhB,EAAAC,MAAAV,KAGA,OAAAyB,KAIA7P,GAAAD,QAAAiO,6FC5IA,GAAAnC,GAAA5K,EAAA,YACA,IAAAkF,GAAAlF,EAAA,SAEA,IAAA6M,GAAAjC,EAAArF,QAwBAC,YAAA,SAAAiI,EAAAC,EAAAzF,EAAA6G,GAEAxP,KAAAyP,IAAAzP,KAAA0P,WAGA1P,MAAAmO,KAAAA,GAAA,EAGAnO,MAAAoO,QAAAA,GAAA,EAGApO,MAAA2I,OAAAA,KAGA3I,MAAAwP,QAAAG,OAAAC,QACAC,OAAA,MACAC,kBACAC,WAAA,EACAC,WAAA,IACAC,MAAA,OACAT,EAGAxP,MAAAkQ,QAAA,CAGA,KAAAlQ,KAAAwP,QAAAS,MAAA,CACAjQ,KAAAmQ,SAAA,YAAA,GAAA/C,OAAAC,aAWAqC,UAAA,WACA,IACA,GAAAU,eAAA,CACA,MAAA,IAAAA,oBACA,CACA,MAAA,IAAAC,eAAA,sBAEA,MAAAC,GACA1K,EAAA2K,MAAAD,EACA,YASAE,OAAA,WACA,MAAAxQ,MAAAyP,KAIAgB,OAAA,WACA,MAAAzQ,MAAAmO,KAAAnO,KAAAoO,QAAApO,KAAA0Q,kBAOA3C,GAAA,SAAA4C,EAAA7C,GACA9N,KAAAyP,IAAAmB,iBAAAD,EAAA7C,EAAA3B,KAAAnM,KAAAA,MACA,OAAAA,OAIA6Q,IAAA,SAAAF,EAAA7C,GACA9N,KAAAyP,IAAAqB,oBAAAH,EAAA7C,EACA,OAAA9N,OAQA0Q,eAAA,WACA,IACA,GAAA/H,GAAA,GACA,KAAA,GAAAoI,KAAA/Q,MAAA2I,OAAA,CACA,GAAAqI,GAAAhR,KAAA2I,OAAAoI,EACA,IAAAC,IAAA,YAAAA,KAAA,SAAA,CACArI,GAAAsI,mBAAAF,GAAA,IAAAE,mBAAAC,KAAAC,UAAAH,IAAA,QACA,IAAAA,IAAA,YAAAA,KAAA,aAAAA,IAAA,GAAA,CACArI,GAAAsI,mBAAAF,GAAA,IAAAE,mBAAAD,GAAA,KAGA,MAAArI,GAAAyI,MAAA,GAAA,GACA,MAAAd,GACA1K,EAAA2K,MAAAD,EACA,OAAA,KASAe,SAAA,SAAAN,GACA,MAAA/Q,MAAA2I,OAAAoI,IAUAZ,SAAA,SAAAY,EAAAO,GACAtR,KAAA2I,OAAAoI,GAAAO,CACA,OAAAtR,OAQAqP,KAAA,WACA,IACArP,KAAAyP,IAAA8B,KAAAvR,KAAAwP,QAAAK,OAAA7P,KAAAyQ,SAAA,KAGA,IAAAzQ,KAAAwP,QAAAM,eAAA,CACA,IAAA,GAAAiB,KAAA/Q,MAAAwP,QAAAM,eAAA,CACA,GAAA9P,KAAAwP,QAAAM,eAAA0B,eAAAT,GAAA,CACA/Q,KAAAyP,IAAAgC,iBAAAV,EAAA/Q,KAAAwP,QAAAM,eAAAiB,MAMA,GAAA/Q,KAAAwP,QAAAQ,WAAA,GAAAhQ,KAAAwP,QAAAO,WAAA,EAAA,CACA,GAAA2B,GAAA,WACA,GAAA1R,KAAAkQ,SAAAlQ,KAAAwP,QAAAO,WAAA,CACAnK,EAAA2K,MAAA,4BAAAvQ,KAAAoO,QAAA,+BACA,CACAxI,EAAAgJ,KAAA,cAAA5O,KAAAoO,QAAA,oBAAApO,KAAAkQ,QAAA,GAAA,OACAlQ,KAAAwP,QAAAO,WAAA,OAAA/P,KAAAwP,QAAAQ,WAAA,MAEA2B,YAAA,WACA3R,KAAAkQ,SAAA,CACAlQ,MAAAqP,QACAlD,KAAAnM,MAAAA,KAAAwP,QAAAQ,aAGA,IAAAhQ,KAAAkQ,UAAA,EAAA,CACAlQ,KAAA+N,GAAAR,EAAAzG,MAAAqE,MAAAuG,EAAAvF,KAAAnM,QAKA,GAAA4F,EAAAgM,UAAAhM,EAAAiM,MAAAC,QAAA,CACAlM,EAAAmM,QAAA,YAAA/R,KAAAyQ,UAIA,IAAA,GAAAE,KAAApD,GAAAyE,iBAAA,CACAzE,EAAAyE,iBAAArB,GAAApB,QAAA,SAAAzB,GACA9N,KAAA+N,GAAA4C,EAAA7C,IACA3B,KAAAnM,OAIA,MAAAA,MAAAyP,IAAAJ,OACA,MAAAiB,GACA1K,EAAA2K,MAAAD,OAWAxJ,OAEAkH,QAAA,OAEAiE,KAAA,OAEA9G,MAAA,QAEA+G,MAAA,SAIAF,oBAOAG,QAAA,SAAAxB,EAAA7C,GACAP,EAAAyE,iBAAArB,GAAApD,EAAAyE,iBAAArB,MACApD,GAAAyE,iBAAArB,GAAAlC,KAAAX,IAQAsE,SAAA,SAAAzB,EAAA7C,GACA,GAAAP,EAAAyE,iBAAArB,GAAA,CACA,GAAA0B,GAAA9E,EAAAyE,iBAAArB,GAAA5B,QAAAjB,EACA,IAAAuE,KAAA,EAAA,CACA9E,EAAAyE,iBAAArB,GAAA3B,OAAAqD,EAAA,OAMA5S,GAAAD,QAAA+N,oDC9PA,GAAA5H,GAAAjF,EAAA,gBACA,IAAAkF,GAAAlF,EAAA,YACA,IAAA6M,GAAA7M,EAAA,aAEA,IAAA4R,GAAA3M,EAAAM,QAUAC,YAAA,SAAAsJ,GACAxP,KAAAuS,SAAA5C,OAAAC,QACA4C,QAAA,KACAC,WACA3C,kBACA4C,UAAA,WAAA,MAAA,KACAlD,IAMAmD,KAAA,WACA3S,KAAA6G,KAAAyL,EAAAxL,MAAA4H,OAGAkE,UAAA,SAAAC,GACA7S,KAAAuS,SAAAE,QAAAhE,KAAAoE,EACA,OAAA7S,OAGA8S,WAAA,SAAAxR,GACAtB,KAAAuS,SAAAC,QAAAlR,CACA,OAAAtB,OAGAyR,iBAAA,SAAAV,EAAAO,GACAtR,KAAAuS,SAAAzC,eAAAiB,GAAAO,CACA,OAAAtR,OAGA+S,aAAA,SAAAF,GACA7S,KAAAuS,SAAAG,UAAAG,CACA,OAAA7S,OAGAgT,WAAA,WACA,MAAAhT,MAAAiT,UAGAC,YAAA,WACA,MAAAlT,MAAAmT,cAGAC,kBAAA,WACA,MAAApT,MAAAqT,oBAGAC,YAAA,WACA,MAAAtT,MAAAuT,cAMAhF,MAAA,SAAApJ,EAAAqO,GACAA,EAAAA,KACA,IAAAC,GAAAvC,KAAAC,UAAAnR,KAAAuS,SAAAzC,eACA,IAAA0D,EAAAC,GAAA,CACAzT,KAAA0T,eAAAF,EAAAC,QACA,CACAzT,KAAA2T,iBAAAxO,EAAAqO,KAIAG,iBAAA,SAAAxO,EAAAqO,GACA,GAAAC,GAAAvC,KAAAC,UAAAnR,KAAAuS,SAAAzC,eAEA,IAAAjC,GAAA,GAAAN,GAAApI,EAAA,KAAA,MACA0K,OAAA,OACAE,WAAA,EACAD,eAAA9P,KAAAuS,SAAAzC,gBAGAjC,GAAAE,GAAAR,EAAAzG,MAAAkH,QAAA,SAAA4F,GACAJ,EAAAC,GAAAG,EAAApD,SAAAqD,uBACA7T,MAAA0T,eAAAF,EAAAC,KACAtH,KAAAnM,MAEA6N,GAAAE,GAAAR,EAAAzG,MAAAqE,MAAA,SAAAyI,GACA5T,KAAA2S,QACAxG,KAAAnM,MAEA6N,GAAAwB,QAGAqE,eAAA,SAAAI,GACA9T,KAAAuS,SAAAE,QAAAlD,QAAA,SAAAsD,GACAiB,EAAAC,MAAA,MAAAxE,QAAA,SAAAyE,GACA,GAAA3B,GAAA2B,EAAAjF,QAAA,IACA,IAAAsD,KAAA,EAAA,CACA,GAAAtB,GAAAiD,EAAA5C,MAAA,EAAAiB,EACA,IAAAtB,IAAA8B,EAAAoB,WAAA,CACAjU,KAAAkU,eAAArB,EAAAmB,EAAA5C,MAAAiB,EAAA,OAGAlG,KAAAnM,QACAmM,KAAAnM,MACAA,MAAA2S,QAGAuB,eAAA,SAAArB,EAAAvB,GACA,IACA,GAAA6C,GAAAtB,EAAAuB,MAAAC,KAAA/C,EAAAgD,OACA,IAAAH,IAAA,KAAA,CACA,GAAAnU,KAAAuS,SAAAC,QAAAxS,KAAAiT,SAAAjT,KAAAuS,SAAAC,OACA,QAAAK,EAAA0B,SACA,IAAA,OACAvU,KAAAmT,aAAAgB,EAAA,EACA,MACA,KAAA,OACAnU,KAAAqT,mBAAAc,EAAA,EACAnU,MAAAuT,aAAAvT,KAAAuS,SAAAG,UAAA1S,KAAAqT,mBACA,MACA,KAAA,YACArT,KAAAmT,aAAAgB,EAAA,EACAnU,MAAAqT,mBAAAc,EAAA,EACAnU,MAAAuT,aAAAvT,KAAAuS,SAAAG,UAAA1S,KAAAqT,mBACA,MACA,KAAA,YACArT,KAAAqT,mBAAAc,EAAA,EACAnU,MAAAuT,aAAAvT,KAAAuS,SAAAG,UAAA1S,KAAAqT,mBACArT,MAAAmT,aAAAgB,EAAA,EACA,MACA,KAAA,OACAnU,KAAAiT,SAAAkB,EAAA,GAAAK,aACA,SAGA,MAAAlE,GACA1K,EAAAgJ,KAAA,mBAAA5O,KAAAuS,SAAAC,QACA,iCAAAlB,OAcAxK,OAEA4H,KAAA,QAIA+F,OACAC,QACAlC,QAAA,SACAC,UACA8B,QAAA,YACAN,WAAA,YACAG,MAAA,yBAEAtE,gBACA6E,YAAA,QAEAjC,UAAA,SAAAjR,GACA,OAAAA,GACA,IAAA,UACA,IAAA,cACA,IAAA,cACA,MAAA,EACA,KAAA,WACA,MAAA,EACA,SACA,MAAA,MAIAmT,YACApC,QAAA,WACAC,UACA8B,QAAA,OACAN,WAAA,cACAG,MAAA,SAEAG,QAAA,OACAN,WAAA,UACAG,MAAA,cAEA1B,UAAA,SAAAjR,GACA,OAAAA,GACA,IAAA,MACA,MAAA,EACA,KAAA,OACA,MAAA,EACA,SACA,MAAA,MAIAoT,QACArC,QAAA,SACAC,UACA8B,QAAA,YACAN,WAAA,UACAG,MAAA,iCAEA1B,UAAA,SAAAjR,GACA,OAAAA,GACA,IAAA,UACA,MAAA,EACA,KAAA,WACA,MAAA,EACA,SACA,MAAA,MAIAqT,WACAtC,QAAA,WACAC,UACA8B,QAAA,YACAN,WAAA,OACAG,MAAA,0BAEA1B,UAAA,SAAAjR,GACA,OAAAA,GACA,IAAA,IACA,IAAA,IACA,MAAA,EACA,SACA,MAAA,MAIAsT,QACAvC,QAAA,SACAC,UACA8B,QAAA,OACAN,WAAA,cACAG,MAAA,eAEAG,QAAA,OACAN,WAAA,UACAG,MAAA,eAEA1B,UAAA,SAAAjR,GACA,OAAAA,GACA,IAAA,MACA,MAAA,EACA,KAAA,OACA,MAAA,EACA,SACA,MAAA,MAIAuT,UACAvC,UACA8B,QAAA,OACAN,WAAA,KACAG,MAAA,WAKAa,sBAAA,SAAA3T,GACAgR,EAAAmC,MAAAO,SAAAvC,QAAA,GAAAwB,WAAA3S,GAGA4T,OAAA,SAAAnE,GACA,GAAAuB,EAAAmC,MAAA1D,GAAA,CACA,MAAA,IAAAuB,GAAAA,EAAAmC,MAAA1D,QACA,CACAnL,EAAAgJ,KAAA,iDAAAmC,KAIAoE,IAAA,SAAApE,EAAA8B,GACAP,EAAAmC,MAAA1D,GAAA8B,IAKApT,GAAAD,QAAA8S,2ECvSA,GAAA9E,GAAA9M,EAAA,cAYA,IAAA0U,GAAA5H,EAAAvH,QAGAoP,WAAA,QAAA,UAQA7G,WAAA,SAAAX,GACA,GAAA7N,KAAAsV,SAAAzH,GAAA,MAAA7N,KAAAqV,UAAAtG,QAAAlB,EAAAO,YAAA,EAAA,CACApO,KAAA2S,OAGA,MAAAnF,GAAA+H,UAAA/G,WAAAgH,MAAAxV,KAAAyV,aAKAhW,GAAAD,QAAA4V,2CCjCA,GAAA7H,GAAA7M,EAAA,aACA,IAAAiF,GAAAjF,EAAA,gBACA,IAAAkF,GAAAlF,EAAA,YAEA,IAAAgV,GAAA/P,EAAAM,QAWAC,YAAA,WACAlG,KAAA2V,cAAA,MAMAhD,KAAA,WACA3S,KAAA6G,KAAA6O,EAAA5O,MAAA4H,OASAH,MAAA,SAAAqH,EAAAC,GACAA,EAAAA,GAAA,EAEA,KACA,GAAA1B,GAAA,oDAAAE,KAAAuB,GACA,MAAAtF,GACA1K,EAAAgJ,KAAA,yBAAA0B,EACAtQ,MAAA2S,OAGA,GAAAwB,IAAA,KAAA,CACA,GAAA2B,GAAA3B,EAAA,GAAAG,MAEA,IAAAjC,GAAAwD,EAAAE,YAAA,IACA,IAAAD,EAAA/G,QAAA,UAAA,GAAAsD,KAAA,EAAA,CAEAyD,EAAAD,EAAAzE,MAAA,EAAAiB,GAAA,IAAAyD,EAGA,GAAA3B,EAAA,KAAA,SAAAA,EAAA,KAAA,OAAA,CACA,GAAAtG,GAAA,GAAAN,GAAAuI,EAAA,KAAA,MAAA7F,MAAA,MAEApC,GAAAE,GAAAR,EAAAzG,MAAAkH,QAAA,SAAA4F,GACA5T,KAAAuO,MAAAqF,EAAApD,SAAAwF,aAAA7B,EAAA,KACAhI,KAAAnM,MAEA6N,GAAAE,GAAAR,EAAAzG,MAAAqE,MAAA,SAAAyI,GACA5T,KAAA2S,QACAxG,KAAAnM,MAEA6N,GAAAwB,WACA,CACArP,KAAA2V,cAAAG,CACA9V,MAAA2S,YAEA,CACA3S,KAAA2S,SAIArK,YAAA,WACA,MAAAtI,MAAA2V,iBAYA7O,OAEA4H,KAAA,SAKAjP,GAAAD,QAAAkW,2EC5FA,GAAAlI,GAAA9M,EAAA,cAEA,IAAAuV,GAAAzI,EAAAvH,QAWAC,YAAA,WACAlG,KAAA2S,QAOApE,MAAA,SAAAV,GACA7N,KAAAkW,YAAArI,EAAA,cAAA,SACA7N,MAAAkW,YAAArI,EAAA,kBAAA,YACA7N,MAAAkW,YAAArI,EAAA,WAAA,OACA7N,MAAAkW,YAAArI,EAAA,gBAAA,WACA7N,MAAAkW,YAAArI,EAAA,WAAA,MAEA,IAAAA,EAAAO,UAAA,YAAA,CACApO,KAAAkW,YAAArI,EAAA,WAAA,QAGA,OAAAA,EAAAO,SACA,IAAA,SACApO,KAAAkW,YAAArI,EAAA,gBAAA,WACA,MAEA,KAAA,YACA7N,KAAAkW,YAAArI,EAAA,eAAA,OACA7N,MAAAkW,YAAArI,EAAA,WAAA,YACA,MAEA,KAAA,QACA7N,KAAAkW,YAAArI,EAAA,eAAA,WACA,MAEA,KAAA,kBACA7N,KAAAkW,YAAArI,EAAA,iBAAA,WACA,MAEA,KAAA,QACA,IAAA,GAAAkD,KAAAlD,GAAAlF,OAAAwN,SAAA,CACAtI,EAAAlF,OAAAyN,WAAArF,CACAlD,GAAAlF,OAAA0N,YAAAxI,EAAAlF,OAAAwN,SAAApF,EACA,OAEA,QAIAmF,YAAA,SAAArI,EAAAyI,EAAAC,GACA1I,EAAAlF,OAAA4N,GAAA1I,EAAAlF,OAAA2N,KAIA7W,GAAAD,QAAAyW,2CCjEA,GAAAzI,GAAA9M,EAAA,cACA,IAAAgV,GAAAhV,EAAA,cACA,IAAA4R,GAAA5R,EAAA,cACA,IAAAkF,GAAAlF,EAAA,YAEA,IAAA8V,GAAAhJ,EAAAvH,QAYAC,YAAA,SAAAuQ,GACAD,EAAAE,UAAAxQ,YAAAsP,MAAAxV,KAAAyV,UAEAzV,MAAA2W,QAAAF,CAEAzW,MAAA2V,cAAA,IACA3V,MAAA4W,cAAA,IACA5W,MAAAiT,SAAA,IACAjT,MAAAmT,aAAA,IACAnT,MAAAqT,mBAAA,IACArT,MAAAuT,aAAA,IAEAvT,MAAAsV,QAAA,OAGAhN,YAAA,WACA,MAAAtI,MAAA2V,eAAA3V,KAAA4W,eAGA5D,WAAA,WACA,MAAAhT,MAAAiT,UAGAC,YAAA,WACA,MAAAlT,MAAAmT,cAGAC,kBAAA,WACA,MAAApT,MAAAqT,oBAGAC,YAAA,WACA,MAAAtT,MAAAuT,cAGAsD,KAAA,SAAAjB,GACA,IAAA5V,KAAAsV,QAAA,CACAtV,KAAAsV,QAAA,IAEAtV,MAAA4W,cAAAhB,CAEAtD,GAAA2C,sBAAAjV,KAAA8W,eACA9W,MAAA+W,YAAA/W,KAAA2W,QAAAK,YACAhX,MAAAiX,YAAAjX,KAAA2W,QAAAO,gBACAlX,MAAAmX,SAAAnX,KAAA2W,QAAAS,sBAAAhG,OACApR,MAAA8W,eAAA9W,KAAA2W,QAAAU,2BAEArX,MAAAsX,aAEA,IAAAtX,KAAA+W,YAAA,CACA/W,KAAAuX,gBACA,IAAAvX,KAAAiX,YAAA,CACAjX,KAAAwX,gBACA,CACAxX,KAAA2S,UAKA2E,YAAA,WAEAtX,KAAAyX,cAAA9F,WAAA,WACA,GAAA3R,KAAAsV,QAAA,CACAtV,KAAA2S,MACA/M,GAAAgJ,KACA,wFAGAzC,KAAAnM,MAAA,MAGAuX,UAAA,WACA,GAAAG,GAAA,GAAAhC,EACAgC,GAAA3J,GAAA2H,EAAA5O,MAAA4H,KAAA,WACA1O,KAAA2V,cAAA3V,KAAA2X,cAAArP,aACA,IAAAtI,KAAAiX,YAAA,CACAjX,KAAAwX,gBACA,CACAxX,KAAA2S,SAEAxG,KAAAnM,MACA0X,GAAAnJ,MAAAvO,KAAA4W,gBAGAY,UAAA,WACA,GAAAxX,KAAAmX,SAAAnW,OAAA,EAAA,CACA,GAAA4W,GAAA5X,KAAAmX,SAAAU,KAEA,IAAA7X,KAAAkT,cAAAlT,KAAA2S,MAEA,IAAAmF,GAAAxF,EAAA4C,OAAA0C,EAEA,IAAAE,EAAA,CACAA,EAAA/J,GAAAuE,EAAAxL,MAAA4H,KAAA,WACA1O,KAAAiT,SAAA6E,EAAA9E,YACAhT,MAAAmT,aAAA2E,EAAA5E,aACAlT,MAAAqT,mBAAAyE,EAAA1E,mBACApT,MAAAuT,aAAAuE,EAAAxE,aAEA,IAAAtT,KAAAkT,cAAAlT,KAAA2S,QACAxG,KAAAnM,MACA8X,GAAAvJ,MAAAvO,KAAAsI,mBACA,CACAtI,KAAAwX,eASAjJ,MAAA,SAAAV,GACA,GAAAA,EAAAO,UAAA,SAAA,CACA,GAAA2J,GAAA/X,KAAA2W,QAAAqB,eAAAD,QACAA,GAAAE,cAAApK,EAAAlF,OAAAsP,cAAAjY,KAAAsI,aAEA,IAAAtI,KAAAiX,YAAA,CACAc,EAAAH,IAAA/J,EAAAlF,OAAAiP,IAAA/J,EAAAlF,OAAAiP,KAAA5X,KAAAgT,YACA+E,GAAAG,SAAArK,EAAAlF,OAAAuP,SAAAlY,KAAAkT,aACA6E,GAAAI,SAAAtK,EAAAlF,OAAAwP,SAAAnY,KAAAsT,aACAyE,GAAAK,eAAAvK,EAAAlF,OAAAyP,eAAApY,KAAAoT,mBACA2E,GAAAK,eAAAvK,EAAAlF,OAAAyP,mBAMA3Y,GAAAD,QAAAgX,2FCjJA,GAAA7Q,GAAAjF,EAAA,gBAEA,IAAA8M,GAAA7H,EAAAM,QAaAC,YAAA,WACAlG,KAAAsV,QAAA,MAQA/G,MAAA,SAAAV,KAQAW,WAAA,SAAAX,GACA,MAAA7N,MAAAsV,SAMA3C,KAAA,WACA3S,KAAAsV,QAAA,KACAtV,MAAA6G,KAAA2G,EAAA1G,MAAA4H,SAYA5H,OAEA4H,KAAA,SAKAjP,GAAAD,QAAAgO,6CC5DA,GAAAD,GAAA7M,EAAA,aACA,IAAA8M,GAAA9M,EAAA,cACA,IAAAkF,GAAAlF,EAAA,YACA,IAAA2X,GAAA3X,EAAA,aAEA,IAAA4X,GAAA9K,EAAAvH,QAYAC,YAAA,SAAAuQ,GACAjJ,EAAA+H,UAAArP,YAAAsP,MAAAxV,KAAAyV,UAGAzV,MAAAuY,WAEAvY,MAAAwY,YAAA,CAEA,IAAApK,GAAA,OACA,IAAAzF,IACA8P,WAAA,QACAC,aAAA,QAGA/P,GAAA8N,EAAAuB,eAAAW,YAAAhQ,EAAAyF,EACA,IAAAzF,IAAA,KAAA,CACA/C,EAAAe,OAAAyH,EAAA,IAAAzF,EAAAiQ,OACA,IAAAjQ,EAAAiQ,SAAA,WAAA,CACAhT,EAAA2K,MACA,qFAIA,GAAA1C,GAAA,GAAAN,GAAAkJ,EAAAoC,UAAAzK,EAAAzF,EACAkF,GACAE,GAAAR,EAAAzG,MAAAkH,QAAAhO,KAAA8Y,aAAA3M,KAAAnM,OACA+N,GAAAR,EAAAzG,MAAAqE,MAAAnL,KAAA+Y,YAAA5M,KAAAnM,OACAqP,SAIAyJ,aAAA,SAAAE,EAAA9Y,GACA,IACA,GAAA0K,GAAAoO,EAAAxI,SAAA+H,QACA,IAAA3E,GAAA1C,KAAA3C,MAAA3D,EAAAwG,MAAAxG,EAAAmE,QAAA,KAAA,EAAAnE,EAAAmL,YAAA,MAEA/V,MAAAuY,SAAApK,KAAAkK,EAAAY,YAAArF,EAAAsF,EAAAC,EACAnZ,MAAAuY,SAAA1X,KAAA+S,EAAAsF,EAAAE,CACApZ,MAAAuY,SAAAc,SAAAzF,EAAAsF,EAAAI,EAEAtZ,MAAA2S,OACA,MAAArC,GACA1K,EAAA2K,MAAA,mCAIAwI,YAAA,SAAAC,EAAA9Y,GACA0F,EAAA2K,MAAA,6BAOAgJ,SAAA,WACAvZ,KAAAwY,YAAA,CACA,OAAAxY,MAAAwZ,eAOAA,YAAA,WACA,MAAAxZ,MAAAuY,SAAA1X,KAAA,IAAAb,KAAAwY,YAOAjK,MAAA,SAAAV,GACAA,EAAAM,KAAAN,EAAAM,MAAAnO,KAAAuY,SAAApK,IACAN,GAAAlF,OAAA9H,KAAAgN,EAAAlF,OAAA9H,MAAAb,KAAAwZ,aACA,IAAA3L,EAAAO,UAAA,SAAAP,EAAAO,UAAA,SAAA,CACAP,EAAAlF,OAAA0Q,SAAAxL,EAAAlF,OAAA0Q,UAAArZ,KAAAuY,SAAAc,YAKA5Z,GAAAD,QAAA8Y,yFCjGA,GAAAhN,GAAA5K,EAAA,WAQA,IAAAiF,GAAA2F,EAAArF,QAUA8H,GAAA,SAAA4C,EAAA7C,GACA9N,KAAAyZ,WAAAzZ,KAAAyZ,cACA,UAAA3L,KAAA,WAAA,CACA9N,KAAAyZ,WAAA9I,GAAA3Q,KAAAyZ,WAAA9I,MACA3Q,MAAAyZ,WAAA9I,GAAAlC,KAAAX,EACA,OAAA9N,QAUA6Q,IAAA,SAAAF,EAAA7C,GACA9N,KAAAyZ,WAAAzZ,KAAAyZ,cAEA,IAAAzZ,KAAAyZ,WAAA9I,GAAA,CACA,GAAA0B,GAAArS,KAAAyZ,WAAA9I,GAAA5B,QAAAjB,EACA,IAAAuE,KAAA,EAAA,CACArS,KAAAyZ,WAAA9I,GAAA3B,OAAAqD,EAAA,IAGA,MAAArS,OASA6G,KAAA,SAAA8J,EAAA+I,GACA1Z,KAAAyZ,WAAAzZ,KAAAyZ,cACAC,GAAAA,KAEA,IAAAC,MAAAC,QAAA5Z,KAAAyZ,WAAA9I,IAAA,CACA3Q,KAAAyZ,WAAA9I,GAAApB,QAAAvP,KAAA6Z,cAAA1N,KAAAnM,KAAA2Q,EAAA+I,IAEA,GAAAC,MAAAC,QAAA5Z,KAAAyZ,WAAA,MAAA,CACAzZ,KAAAyZ,WAAA,KAAAlK,QAAAvP,KAAA6Z,cAAA1N,KAAAnM,KAAA2Q,EAAA+I,IAGA,MAAA1Z,OAGA6Z,cAAA,SAAAlJ,EAAA+I,EAAA5L,GACA,SAAAA,KAAA,WAAA,CACAA,GAAArM,KAAAkP,EAAA+I,KAAAA,EAAAI,OAAA9Z,UAMAP,GAAAD,QAAAmG,wCCzEA,GAAAA,GAAAjF,EAAA,YASA,IAAAkF,IAEAmU,SAAA,GAAApU,GAGAoI,GAAA,WAAAnI,EAAAmU,SAAAhM,GAAAyH,MAAA5P,EAAAmU,SAAAtE,YAEA5E,IAAA,WAAAjL,EAAAmU,SAAAlJ,IAAA2E,MAAA5P,EAAAmU,SAAAtE,YAEA5O,KAAA,WAAAjB,EAAAmU,SAAAlT,KAAA2O,MAAA5P,EAAAmU,SAAAtE,YAMA5D,OAEAmI,OAAA,EAEA7O,MAAA,EAEA8O,QAAA,EAEAC,OAAA,EAEAC,MAAA,EAEArI,QAAA,GAOAhL,OAEAsT,IAAA,OAQAxI,SAAA,EAMAyI,UAAA,MAYAC,OAAA,SAAA1P,EAAAE,EAAAyP,GACA,GAAAC,SAAAA,QAAAC,IAAA,CACA3P,EAAAA,GAAAlF,EAAAiM,MAAAqI,MACAK,GAAAA,GAAA,UAEA,IAAAG,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACA7Z,EAAA,IAGA,IAAA8Z,GAAAL,EAAA5P,EACA,IAAAkQ,GAAA,YAAApV,EAAAqV,kBAAA,IAAAF,EAAA,GAEA/a,MAAA6G,KAAA,OAAAiE,MAAAA,EAAAF,IAAAA,EAAAoQ,OAAAA,GAGA,IAAApV,EAAAgM,UAAA9G,EAAA,CACA,GAAAlF,EAAAyU,WAAA9T,SAAA2U,aAAA,CAEAtV,EAAAuV,aAAAvQ,EAAAoQ,OACA,CAEA,GAAAI,EACA,IAAAtQ,IAAAlF,EAAAiM,MAAA1G,OAAAqP,QAAAjK,MAAA,CACA6K,EAAAZ,QAAAjK,UACA,IAAAzF,IAAAlF,EAAAiM,MAAAoI,SAAAO,QAAA5L,KAAA,CACAwM,EAAAZ,QAAA5L,SACA,IAAA9D,IAAAlF,EAAAiM,MAAAsI,OAAAK,QAAAa,MAAA,CACAD,EAAAZ,QAAAa,UACA,CACAD,EAAAZ,QAAAC,IAIAO,EAAA,KAAAA,CACA,IAAApQ,YAAA+O,OAAA,CACA/O,EAAAoE,OAAA,EAAA,EAAAgM,EAAA,UAAAT,EACAa,GAAA5F,MAAAgF,QAAA5P,OACA,CACAwQ,EAAAra,KAAAyZ,QAAAQ,EAAA,UAAAT,EAAA3P,QAYAqQ,gBAAA,WACA,GAAAK,GAAA,GAAAlO,KACA,IAAAmO,IAAA,IAAAD,EAAAE,WAAApK,OAAA,EACA,IAAAqK,IAAA,IAAAH,EAAAI,cAAAtK,OAAA,EACA,IAAAuK,IAAA,IAAAL,EAAAM,cAAAxK,OAAA,EACA,IAAAyK,IAAA,KAAAP,EAAAQ,mBAAA1K,OAAA,EACA,OAAA,IAAAmK,EAAA,IAAAE,EAAA,IAAAE,EAAA,IAAAE,EAAA,KAUAV,aAAA,SAAAvQ,EAAAoQ,GACA,GAAApQ,YAAA+O,OAAA,CACA,IAAA,GAAAoC,KAAAnR,GAAA,CACAhF,EAAAuV,aAAAvQ,EAAAmR,GAAAf,QAEA,CACA,SAAApQ,KAAA,SAAA,CACA4P,QAAAC,IAAAO,EAAA,IAAApQ,OACA,CACA4P,QAAAC,IAAAO,EAAA,eACAR,SAAAC,IAAA7P,MAWA2F,MAAA,WACA3K,EAAA0U,UAAAlJ,MAAArQ,KAAA0U,WAAA7P,EAAAiM,MAAA1G,MAAA,YASAyD,KAAA,WACAhJ,EAAA0U,UAAAlJ,MAAArQ,KAAA0U,WAAA7P,EAAAiM,MAAAoI,QAAA,eASAtT,OAAA,WACAf,EAAA0U,UAAAlJ,MAAArQ,KAAA0U,WAAA7P,EAAAiM,MAAAqI,OAAA,cASAmB,MAAA,WACAzV,EAAA0U,UAAAlJ,MAAArQ,KAAA0U,WAAA7P,EAAAiM,MAAAsI,MAAA,WASApI,QAAA,WACAnM,EAAA0U,UAAAlJ,MAAArQ,KAAA0U,WAAA7P,EAAAiM,MAAAC,QAAA,SAgBAkK,iBAAA,WACA,SAAAnc,UAAA,aAAAA,OAAAoc,UAAApc,OAAAoc,SAAAC,OAAA,CACA,GAAAH,GAAA,4BAAA1H,KAAAxU,OAAAoc,SAAAC,OACA,IAAAH,IAAA,KAAA,CACAnW,EAAAgM,SAAAmK,EAAA,GAGA,GAAAI,GAAA,6BAAA9H,KAAAxU,OAAAoc,SAAAC,OACA,IAAAC,IAAA,KAAA,CACAvW,EAAAyU,UAAA,QAMA5a,GAAAD,QAAAoG,yCC1OA,GAAA0F,GAAA,YAEAA,GAAAiK,WASArP,YAAA,aAkBAoF,GAAArF,OAAA,SAAAmW,EAAAC,GACA,GAAAC,GAAAtc,IACA,IAAAuc,EAKA,IAAAH,GAAAzM,OAAA4F,UAAA/D,eAAAzQ,KAAAqb,EAAA,eAAA,CACAG,EAAAH,EAAAlW,gBACA,CACAqW,EAAA,WAAA,MAAAD,GAAA9G,MAAAxV,KAAAyV,YAIA9F,OAAAC,OAAA2M,EAAAD,EAAAD,EAGAE,GAAAhH,UAAA5F,OAAAuF,OAAAoH,EAAA/G,WACArP,aACAoL,MAAAiL,EACAC,WAAA,MACAC,SAAA,KACAC,aAAA,OAMA,IAAAN,EAAAzM,OAAAC,OAAA2M,EAAAhH,UAAA6G,EAIAG,GAAA7F,UAAA4F,EAAA/G,SAEA,OAAAgH,GAGA9c,GAAAD,QAAA8L,2BClEA,GAAAA,GAAA5K,EAAA,YACA,IAAAkF,GAAAlF,EAAA,SAEA,IAAAic,GAAArR,EAAArF,QAUAC,YAAA,SAAAsJ,GAEAxP,KAAA,WAAA,IASAA,MAAA,cAAA,IAGAA,MAAA,QAAA,iBAMAA,MAAA,eAAA,UAGAA,MAAA,YAAA,IASAA,MAAA,aAAA,KAOAA,MAAA,uBAAA,eAOAA,MAAA,iBAAA,KAOAA,MAAA,uBAAA,SAAA,aAAA,SAAA,SAAA,YAKAA,MAAA,cAAA,IAGAA,MAAA,eAAA,IAMAA,MAAA,0BAAA,IASAA,MAAA,eAAA,IAKAA,MAAA,2BAAA,IAGAA,MAAA,oBAAA,IAGAA,MAAA,kBAAA,IAGAA,MAAA,iBAAA,IAGAA,MAAA,kBAAA,IAGAA,MAAA,oBAAA,IAGAA,MAAA,eAAA,IAGAA,MAAA,mBAAA,IAGAA,MAAA,sBAAA,IAGAA,MAAA,qBAAA,IAOAA,MAAA,eAAA,IAOAA,MAAA,sBASAA,MAAA,iBAKAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,gBAAA,IAGAA,MAAA,iBAAA,IAEAA,MAAA4c,WAAApN,IAUAoN,WAAA,SAAApN,EAAAqN,GACA,IACAA,EAAAA,GAAA7c,IACA,UAAAwP,KAAA,YAAA,CACA,IAAA,GAAAuB,KAAAvB,GAAA,CACA,SAAAqN,GAAA9L,KAAA,UAAA8L,EAAA9L,KAAA,KAAA,CACA/Q,KAAA4c,WAAApN,EAAAuB,GAAA8L,EAAA9L,QACA,CACA8L,EAAA9L,GAAAvB,EAAAuB,MAIA,MAAAT,GACA1K,EAAA2K,MAAAD,MAMA7Q,GAAAD,QAAAmd,qDC/MA,GAAAhX,GAAAjF,EAAA,aACA,IAAA8K,GAAA9K,EAAA,WACA,IAAAkF,GAAAlF,EAAA,SACA,IAAA2X,GAAA3X,EAAA,UACA,IAAA6K,GAAA7K,EAAA,YACA,IAAAgF,GAAAhF,EAAA,aAEA,IAAA+M,GAAA/M,EAAA,wBACA,IAAA0U,GAAA1U,EAAA,yBACA,IAAA4X,GAAA5X,EAAA,yBACA,IAAAuV,GAAAvV,EAAA,yBACA,IAAA8V,GAAA9V,EAAA,6BAEA,IAAAic,GAAAjc,EAAA,YACA,IAAAoc,GAAApc,EAAA,mBAEA,IAAAsF,GAAAtF,EAAA,qBAEA,IAAAqc,GAAApX,EAAAM,QAcAC,YAAA,SAAAsJ,EAAA/D,GAEAzL,KAAAgd,YAAA,KAGAhd,MAAAid,aAAA,KAGAjd,MAAAkd,cAAA,GAAA3R,EAGAvL,MAAAmd,WAAA,GAAA5R,EAEAvL,MAAAwP,QAAA,GAAAmN,GAAAnN,EACAxP,MAAA2L,SAAA,IACA3L,MAAAod,MAAApd,KAAAod,MAAA,GAAA5R,GAAAxL,KAAAqd,UAAAlR,KAAAnM,MAAA,IAEAA,MAAAgY,eAAA,GAAA8E,GAAA9c,KAEAA,MAAAsd,cAAA,GAAAhF,GAAAtY,KACAA,MAAAsd,cAAAvP,GAAAuK,EAAAxR,MAAA4H,KAAA,SAAAxO,GACAF,KAAAod,MAAA1R,SAAAxL,EAAA4Z,OAAAvB,SAAAc,SAAA;EACAlN,KAAAnM,MAEAA,MAAAud,kBAAA,GAAA/G,GAAAxW,KAEA,IAAAyL,EAAAzL,KAAAwd,WAAA/R,IAMAgS,OAAA,WACAzd,KAAA0d,YACA1d,MAAAud,kBAAA,GAAA/G,GAAAxW,KAEAA,MAAAgd,YAAA,KACAhd,MAAAid,aAAA,KACAjd,MAAAmd,WAAAlT,OACAjK,MAAAkd,cAAAjT,SAUA2S,WAAA,SAAApN,GACAxP,KAAAwP,QAAAoN,WAAApN,IAUAgO,WAAA,SAAA/R,GACAzL,KAAA2d,eAEA3d,MAAA2L,SAAAF,CAGAA,GAAAsC,GAAA/H,EAAAc,MAAAkC,MAAAhJ,KAAA4d,eAAAzR,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAAqC,KAAAnJ,KAAA6d,cAAA1R,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAAwC,MAAAtJ,KAAA8d,eAAA3R,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAA2C,OAAAzJ,KAAA+d,gBAAA5R,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAAyD,WAAAvK,KAAAge,mBAAA7R,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAA2D,SAAAzK,KAAAie,iBAAA9R,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAAoD,aAAAlK,KAAAke,qBAAA/R,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAAsD,WAAApK,KAAAme,mBAAAhS,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAAqE,MAAAnL,KAAAoe,eAAAjS,KAAAnM,MACAyL,GAAAsC,GAAA/H,EAAAc,MAAA4D,KAAA1K,KAAAqe,cAAAlS,KAAAnM,QAQAse,WAAA,WACA,MAAAte,MAAA2L,UAIAgS,cAAA,WACA,GAAA3d,KAAA2L,SAAA,CACA3L,KAAA2L,SAAA1E,SAEAjH,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAkC,MAAAhJ,KAAA4d,eACA5d,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAqC,KAAAnJ,KAAA6d,cACA7d,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAwC,MAAAtJ,KAAA8d,eACA9d,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAA2C,OAAAzJ,KAAA+d,gBACA/d,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAyD,WAAAvK,KAAAge,mBACAhe,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAA2D,SAAAzK,KAAAie,iBACAje,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAoD,aAAAlK,KAAAke,qBACAle,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAsD,WAAApK,KAAAme,mBACAne,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAAqE,MAAAnL,KAAAoe,eACApe,MAAA2L,SAAAkF,IAAA7K,EAAAc,MAAA4D,KAAA1K,KAAAqe,cAEAre,MAAA2L,SAAA,OASA4S,cAAA,SAAAC,GACAxe,KAAAye,kBAEAze,MAAA0e,YAAAF,CAEAA,GAAAzQ,GAAA/H,EAAAc,MAAAkC,MAAAhJ,KAAA2e,iBAAAxS,KAAAnM,MACAwe,GAAAzQ,GAAA/H,EAAAc,MAAAqC,KAAAnJ,KAAA4e,gBAAAzS,KAAAnM,MACAwe,GAAAzQ,GAAA/H,EAAAc,MAAAwC,MAAAtJ,KAAA6e,iBAAA1S,KAAAnM,MACAwe,GAAAzQ,GAAA/H,EAAAc,MAAA2C,OAAAzJ,KAAA8e,kBAAA3S,KAAAnM,MACAwe,GAAAzQ,GAAA/H,EAAAc,MAAAoD,aAAAlK,KAAA+e,uBAAA5S,KAAAnM,MACAwe,GAAAzQ,GAAA/H,EAAAc,MAAAsD,WAAApK,KAAAgf,qBAAA7S,KAAAnM,MACAwe,GAAAzQ,GAAA/H,EAAAc,MAAA4D,KAAA1K,KAAAif,gBAAA9S,KAAAnM,QAQAkf,cAAA,WACA,MAAAlf,MAAA0e,aAIAD,iBAAA,WACA,GAAAze,KAAA0e,YAAA,CACA1e,KAAA0e,YAAAzX,SAEAjH,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAAkC,MAAAhJ,KAAA2e,iBACA3e,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAAqC,KAAAnJ,KAAA4e,gBACA5e,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAAwC,MAAAtJ,KAAA6e,iBACA7e,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAA2C,OAAAzJ,KAAA8e,kBACA9e,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAAoD,aAAAlK,KAAA+e,uBACA/e,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAAsD,WAAApK,KAAAgf,qBACAhf,MAAA0e,YAAA7N,IAAA7K,EAAAc,MAAA4D,KAAA1K,KAAAif,gBAEAjf,MAAA0e,YAAA,OASAS,QAAA,WACAnf,KAAA4c,YAAAwC,QAAA,SAMAC,OAAA,WACArf,KAAA4c,YAAAwC,QAAA,QAYAE,MAAA,SAAAC,EAAAnR,EAAAzF,GACAA,EAAA3I,KAAAgY,eAAAW,YAAAhQ,EAAAyF,EACApO,MAAAgY,eAAA9J,aAAAqR,EAAAnR,EAAAzF,IAMA6W,UAAA,WACAxf,KAAAud,kBAAA1G,KAAA7W,KAAAsI,cAEAtI,MAAAyf,MAAA,GAAAhS,EACAzN,MAAAyf,MAAApR,aAAA,GAAA+G,GACApV,MAAAyf,MAAApR,aAAArO,KAAAsd,cACAtd,MAAAyf,MAAApR,aAAArO,KAAAud,kBACAvd,MAAAyf,MAAApR,aAAA,GAAA4H,KAMAyJ,iBAAA,WACA,IAAA1f,KAAAid,aAAA,CACAjd,KAAAid,aAAA,IACAjd,MAAAkd,cAAApU,UAOA6W,eAAA,WACA,GAAA3f,KAAAid,aAAA,CACAjd,KAAAid,aAAA,KACAjd,MAAAkd,cAAAhW,SAUA0Y,SAAA,SAAAjX,GACA,IAAA3I,KAAAgd,YAAA,CACAhd,KAAAsd,cAAA/D,UACAvZ,MAAAwf,WACAxf,MAAA6f,aAEA7f,MAAAgd,YAAA,IACAhd,MAAAmd,WAAArU,OAEAH,GAAAA,KACA3I,MAAAsf,MAAAvC,EAAAjW,MAAAgZ,eAAA/C,EAAAgD,QAAAC,KAAArX,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAC,KAAA,KAAArX,EAAAsX,OAAAtX,EAAAsP,kBAIA2F,eAAA,SAAA1d,GACA,IAAAF,KAAAgd,YAAA,CACAhd,KAAAsd,cAAA/D,UACAvZ,MAAAwf,WACAxf,MAAA6f,cAGA,GAAAlX,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAAoZ,gBAAAnD,EAAAgD,QAAA/W,MAAAL,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAA/W,MAAA,KAAAL,EAAAsX,OAAAtX,EAAAsP,iBAGA4F,cAAA,SAAA3d,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAAqZ,eAAApD,EAAAgD,QAAA5W,KAAAR,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAA5W,KAAA,IAAAR,EAAAyX,aAAA,OAGAtC,eAAA,SAAA5d,GACA,GAAAF,KAAA2L,SAAA,CACA,GAAA3L,KAAA2L,SAAAvF,MAAAwD,aACA5J,KAAA2L,SAAAvF,MAAAyD,WACA7J,KAAA0e,aAAA1e,KAAA0e,YAAAtY,MAAAwC,UAAA,CACA5I,KAAA2L,SAAAtF,QAAAgD,MAAAY,SAIA,GAAAtB,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAAuZ,gBAAAtD,EAAAgD,QAAAzW,MAAAX,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAzW,MAAA,OAAAX,EAAA2X,SAAA,MAGAvC,gBAAA,SAAA7d,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAAyZ,iBAAAxD,EAAAgD,QAAAtW,OAAAd,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAtW,OAAA,IAAAd,EAAA6X,cAAA,OAGAxC,mBAAA,SAAA9d,GACA,GAAAF,KAAA2L,UAAA3L,KAAA2L,SAAAvF,MAAAwB,SAAA5H,KAAA2L,SAAAtF,QAAAgD,MAAAY,OACArE,GAAAe,OAAA,eAGAsX,iBAAA,SAAA/d,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAA2Z,eAAA1D,EAAAgD,QAAAtY,KAAAkB,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAtY,KACA,OAAAkB,EAAA2X,SACA,OAAA3X,EAAA+X,aAAA,OAIAxC,qBAAA,SAAAhe,GACA,GAAAF,KAAA2L,UAAA3L,KAAA2L,SAAAvF,MAAAwB,SAAA5H,KAAA2L,SAAAtF,QAAAgD,MAAAY,OACArE,GAAAe,OAAA,iBAGAwX,mBAAA,SAAAje,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAA6Z,iBAAA5D,EAAAgD,QAAAvY,OAAAmB,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAvY,OACA,OAAAmB,EAAA2X,SACA,OAAA3X,EAAAiY,eAAA,OAIAxC,eAAA,SAAAle,GACA,IAAAF,KAAAyf,MAAAzf,KAAAwf,WACA,IAAA7W,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAA+Z,gBAAA9D,EAAAgD,QAAA5U,MAAAxC,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAA5U,MACA,IAAAxC,EAAAuC,WACA,IAAAvC,EAAAoC,UAGA,IAAApC,EAAAuC,aAAA,QAAAlL,KAAAyd,UAGAY,cAAA,SAAAne,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACA3I,MAAAsf,MAAAvC,EAAAjW,MAAAga,eAAA/D,EAAAgD,QAAArV,KAAA/B,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAArV,KAAA,OAAA/B,EAAA2X,SAAA,IACAtgB,MAAAyd,UAIAkB,iBAAA,SAAAze,GACA,GAAAF,KAAA2L,SAAA,CACA3L,KAAA2L,SAAAxB,eACAnK,MAAA2L,SAAAnB,aACA,IAAAxK,KAAA2L,SAAAvF,MAAAwB,SAAA5H,KAAA2L,SAAAtF,QAAAgD,MAAAY,QAGA,GAAAtB,GAAAzI,EAAAwZ,KAAA/Q,UACAA,GAAAoY,SAAA/gB,KAAAgY,eAAAgJ,aACAhhB,MAAAsf,MAAAvC,EAAAjW,MAAAma,mBAAAlE,EAAAgD,QAAAmB,SAAAvY,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAmB,SAAA,OAAAvY,EAAA2X,SAAA,MAGA1B,gBAAA,SAAA1e,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACAA,GAAAoY,SAAA/gB,KAAAgY,eAAAgJ,aACAhhB,MAAAsf,MAAAvC,EAAAjW,MAAAqa,kBAAApE,EAAAgD,QAAAqB,QAAAzY,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAqB,QAAA,IAAAzY,EAAA0Y,eAAA,OAGAxC,iBAAA,SAAA3e,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACAA,GAAAoY,SAAA/gB,KAAAgY,eAAAgJ,aACAhhB,MAAAsf,MAAAvC,EAAAjW,MAAAwa,mBAAAvE,EAAAgD,QAAAwB,SAAA5Y,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAwB,SAAA,OAAA5Y,EAAA6Y,WAAA,MAGA1C,kBAAA,SAAA5e,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACAA,GAAAoY,SAAA/gB,KAAAgY,eAAAgJ,aACAhhB,MAAAsf,MAAAvC,EAAAjW,MAAA2a,oBAAA1E,EAAAgD,QAAA2B,UAAA/Y,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAA2B,UAAA,IAAA/Y,EAAAgZ,gBAAA,OAGA5C,uBAAA,SAAA7e,GACA0F,EAAAe,OAAA,kBACA,IAAA3G,KAAA0e,aAAA1e,KAAA0e,YAAAtY,MAAAwB,SAAA,CACA5H,KAAA0e,YAAArY,QAAAgD,MAAAY,UAIA+U,qBAAA,SAAA9e,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACAA,GAAAoY,SAAA/gB,KAAAgY,eAAAgJ,aACAhhB,MAAAsf,MAAAvC,EAAAjW,MAAA8a,oBAAA7E,EAAAgD,QAAA8B,UAAAlZ,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAA8B,UAAA,IAAAlZ,EAAAmZ,iBAAA,OAGA7C,gBAAA,SAAA/e,GACA,GAAAyI,GAAAzI,EAAAwZ,KAAA/Q,UACAA,GAAAoY,SAAA/gB,KAAAgY,eAAAgJ,aACAhhB,MAAAsf,MAAAvC,EAAAjW,MAAAib,kBAAAhF,EAAAgD,QAAAiC,QAAArZ,EACA/C,GAAAe,OAAAoW,EAAAgD,QAAAiC,QAAA,OAAArZ,EAAA2X,SAAA,MASAT,YAAA,WACA,IAAA7f,KAAAod,MAAA6E,UAAAjiB,KAAAod,MAAAtU,SAOA4U,WAAA,WACA1d,KAAAod,MAAAlW,QAGAmW,UAAA,SAAA6E,GACA,GAAAvZ,IACAuZ,SAAAA,EACA/L,SAAAnW,KAAAgY,eAAAmK,qBAEA,IAAAniB,KAAA2L,SAAA,CACA,GAAA3L,KAAA2L,SAAAvF,MAAAwB,SAAA,CACAe,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GAAA,sBACA,CACAA,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GACA,UACA,aACA,OAGA,IAAA3I,KAAA0e,aAAA1e,KAAA0e,YAAAtY,MAAAwC,UAAA,CACAD,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GAAA,eAGA,GAAA3I,KAAA2L,SAAAvF,MAAAwD,YAAA,CACAjB,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GAAA,mBAEA,GAAA3I,KAAA2L,SAAAvF,MAAAyD,UAAA,CACAlB,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GAAA,iBAGA,GAAA3I,KAAA0e,YAAA,CACA,GAAA1e,KAAA0e,YAAAtY,MAAAwC,UAAA,CACAD,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GAAA,eAEA,GAAA3I,KAAA0e,YAAAtY,MAAAwD,YAAA,CACAjB,EAAA3I,KAAAgY,eAAAoK,YAAAzZ,GAAA,uBAKA3I,KAAAsf,MAAAvC,EAAAjW,MAAAub,eAAAtF,EAAAgD,QAAAuC,KAAA3Z,EACA/C,GAAAmM,QAAAgL,EAAAgD,QAAAuC,OAMAzJ,QAAA,WACA,MAAAR,GAAAY,YACAZ,EAAAkK,cAAAviB,KAAAwP,QAAA,SACAxP,KAAAwP,QAAA,gBAIAwH,WAAA,WACA,MAAAhX,MAAAwP,QAAA,cAIA0H,eAAA,WACA,MAAAlX,MAAAwP,QAAA,kBAIA4H,oBAAA,WACA,MAAApX,MAAAwP,QAAA,uBAIA6H,0BAAA,WACA,MAAArX,MAAAwP,QAAA,wBAIA9H,YAAA,WACA,GAAA4H,GAAA,CACA,IAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAjE,cACA,MAAA4I,GACA1K,EAAAgJ,KAAA,8CAAA0B,IAGA,MAAA+H,GAAAmK,YAAAlT,EAAA,IAIA3H,YAAA,WACA,GAAA2H,GAAA,CACA,IAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAhE,cACA,MAAA2I,GACA1K,EAAAgJ,KAAA,6CAAA0B,IAGA,MAAAhB,IAIAzH,mBAAA,WACA,GAAAyH,GAAA,IACA,IAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAA9D,qBACA,MAAAyI,GACA1K,EAAAgJ,KAAA,oDAAA0B,IAGA,MAAAhB,IAIAxH,iBAAA,WACA,GAAAwH,GAAA,IACA,IAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAA7D,mBACA,MAAAwI,GACA1K,EAAAgJ,KAAA,kDAAA0B,IAGA,IAAAhB,EAAA,CACAA,EAAAtP,KAAAyiB,yBAEA,MAAApK,GAAAmK,YAAAlT,EAAA,IAQAmT,uBAAA,WACA,GAAAziB,KAAA2L,UAAA3L,KAAA2L,SAAAlF,KAAAzG,KAAA2L,SAAAlF,IAAAic,wBAAA,CACA,MAAA1iB,MAAA2L,SAAAlF,IAAAic,wBAEA,MAAA,OAIA3a,YAAA,WACA,GAAAuH,GAAAtP,KAAAwP,QAAA,mBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAA5D,cACA,MAAAuI,GACA1K,EAAAgJ,KAAA,6CAAA0B,IAGA,MAAA+H,GAAAmK,YAAA5V,KAAA+V,MAAArT,GAAA,IAIAtH,WAAA,WACA,GAAAsH,GAAAtP,KAAAwP,QAAA,kBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAA3D,aACA,MAAAsI,GACA1K,EAAAgJ,KAAA,4CAAA0B,GAGA,IAAAhB,GAAAA,KAAA,EAAA,CACAA,EAAAtP,KAAA4iB,oBAGA,MAAAvK,GAAAmK,YAAAlT,GAAA,IASAsT,iBAAA,WACA,GAAA5iB,KAAA2L,UAAA3L,KAAA2L,SAAAlF,KAAAzG,KAAA2L,SAAAlF,IAAAoc,4BAAA,CACA,GAAAC,GAAA9iB,KAAA2L,SAAAlF,IAAAoc,2BACA,IAAA7iB,KAAA+iB,mBAAA,CACA,GAAAC,GAAAhjB,KAAA2L,SAAAlF,IAAAoc,4BAAA7iB,KAAA+iB,kBACAD,GAAAlW,KAAA+V,MAAA,EAAA3iB,KAAAsd,cAAA/E,SAAAc,SAAA,GAEArZ,KAAA+iB,mBAAA/iB,KAAA2L,SAAAlF,IAAAoc,2BACA,OAAAC,KAAA,EAAAA,GAAA,IAKA7a,cAAA,WACA,GAAAqH,GAAAtP,KAAAwP,QAAA,qBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAA1D,gBACA,MAAAqI,GACA1K,EAAAgJ,KAAA,+CAAA0B,IAGA,MAAA+H,GAAAmK,YAAAlT,GAAA,IAIApH,aAAA,WACA,GAAAoH,GAAAtP,KAAAwP,QAAA,oBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAzD,eACA,MAAAoI,GACA1K,EAAAgJ,KAAA,8CAAA0B,IAGA,MAAAhB,IAIAnH,SAAA,WACA,GAAAmH,GAAAtP,KAAAwP,QAAA,gBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAxD,WACA,MAAAmI,GACA1K,EAAAgJ,KAAA,0CAAA0B,IAGA,MAAAhB,IAIAlH,UAAA,WACA,GAAAkH,GAAAtP,KAAAwP,QAAA,iBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAvD,YACA,MAAAkI,GACA1K,EAAAgJ,KAAA,2CAAA0B,IAGA,MAAAhB,IAIAjH,UAAA,WACA,GAAAiH,GAAAtP,KAAAwP,QAAA,iBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAtD,YACA,MAAAiI,GACA1K,EAAAgJ,KAAA,2CAAA0B,IAGA,MAAAhB,IAAA,OAIAhH,YAAA,WACA,GAAAgH,GAAA,IACA,KAAAtP,KAAAud,kBAAA/O,aAAA,CACAc,EAAAtP,KAAAud,kBAAAjV,cAGA,MAAAgH,IAAAtP,KAAAijB,uBAIAA,oBAAA,WACA,GAAA3T,GAAA,IACAA,GAAAtP,KAAAwP,QAAA,mBACA,IAAAF,IAAA,MAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAArD,cACA,MAAAgI,GACA1K,EAAAgJ,KAAA,6CAAA0B,EACAhB,GAAA,MAGA,MAAAA,IAAA,WAIA4T,mBAAA,WACA,MAAAljB,MAAAwP,QAAA,4BAIA2T,YAAA,WACA,MAAAnjB,MAAAwP,QAAA,qBAIAjH,iBAAA,WACA,GAAA+G,GAAA,EACA,IAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAApD,mBACA,MAAA+H,GACA1K,EAAAgJ,KAAA,kDAAA0B,IAGA,MAAAhB,IAIA9G,cAAA,WACA,GAAA8G,GAAA,EACA,IAAAtP,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAAnD,gBACA,MAAA8H,GACA1K,EAAAgJ,KAAA,+CAAA0B,IAGA,MAAAhB,IAIA8T,OAAA,WACA,GAAA9T,GAAA,IACA,KAAAtP,KAAAud,kBAAA/O,aAAA,CACAc,EAAAtP,KAAAud,kBAAAvK,aAEA,MAAA1D,IAAAtP,KAAAwP,QAAA,gBAIA6T,iBAAA,WACA,GAAA/T,GAAA5J,EAAA,cACA,IAAA1F,KAAA2L,SAAA,CACA,IACA2D,EAAAtP,KAAA2L,SAAA/E,aACA,MAAA0J,GACA1K,EAAAgJ,KAAA,kDAAA0B,IAGA,MAAAhB,IAIAgU,eAAA,WACA,MAAAtjB,MAAAwP,QAAA,iBAIA+T,eAAA,WACA,MAAAvjB,MAAAwP,QAAA,iBAIAgU,eAAA,WACA,MAAAxjB,MAAAwP,QAAA,iBAIAiU,eAAA,WACA,MAAAzjB,MAAAwP,QAAA,iBAGAkU,eAAA,WACA,MAAA1jB,MAAAwP,QAAA,iBAIAmU,eAAA,WACA,MAAA3jB,MAAAwP,QAAA,iBAIAoU,eAAA,WACA,MAAA5jB,MAAAwP,QAAA,iBAIAqU,eAAA,WACA,MAAA7jB,MAAAwP,QAAA,iBAIAsU,eAAA,WACA,MAAA9jB,MAAAwP,QAAA,iBAIAuU,gBAAA,WACA,MAAA/jB,MAAAwP,QAAA,kBAIAwU,cAAA,WACA,GAAA1U,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAAjW,cACA,MAAA6H,GACA1K,EAAAgJ,KAAA,+CAAA0B,IAGA,MAAAhB,IAIA2U,cAAA,WACA,GAAA3U,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAAhX,cACA,MAAA4I,GACA1K,EAAAgJ,KAAA,+CAAA0B,IAGA,MAAA+H,GAAAmK,YAAAlT,EAAA,IAIA4U,cAAA,WACA,GAAA5U,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAA3W,cACA,MAAAuI,GACA1K,EAAAgJ,KAAA,+CAAA0B,IAGA,MAAA+H,GAAAmK,YAAAlT,EAAA,IAIA6U,aAAA,WACA,GAAA7U,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAA1W,aACA,MAAAsI,GACA1K,EAAAgJ,KAAA,8CAAA0B,GAGA,IAAAhB,GAAAA,KAAA,EAAA,CACAA,EAAAtP,KAAAokB,sBAGA,MAAA/L,GAAAmK,YAAAlT,GAAA,IASA8U,mBAAA,WACA,GAAApkB,KAAA2L,UAAA3L,KAAA2L,SAAAlF,KAAAzG,KAAA2L,SAAAlF,IAAAoc,4BAAA,CACA,GAAAC,GAAA9iB,KAAA2L,SAAAlF,IAAAoc,2BACA,IAAA7iB,KAAAqkB,qBAAA,CACA,GAAArB,GAAAhjB,KAAA2L,SAAAlF,IAAAoc,4BAAA7iB,KAAAqkB,oBACAvB,GAAAlW,KAAA+V,MAAA,EAAA3iB,KAAAsd,cAAA/E,SAAAc,SAAA,GAEArZ,KAAAqkB,qBAAArkB,KAAA2L,SAAAlF,IAAAoc,2BACA,OAAAC,KAAA,EAAAA,GAAA,IAKAwB,WAAA,WACA,GAAAhV,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAAvW,WACA,MAAAmI,GACA1K,EAAAgJ,KAAA,4CAAA0B,IAGA,MAAAhB,IAIAiV,cAAA,WACA,GAAAjV,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAApW,cACA,MAAAgI,GACA1K,EAAAgJ,KAAA,+CAAA0B,IAGA,MAAAhB,IAIAkV,mBAAA,WACA,GAAAlV,GAAA,IACA,IAAAtP,KAAA0e,YAAA,CACA,IACApP,EAAAtP,KAAA0e,YAAAnW,mBACA,MAAA+H,GACA1K,EAAAgJ,KAAA,oDAAA0B,IAGA,MAAAhB,IAIAmV,cAAA,WACA,MAAAzkB,MAAAwP,QAAA,gBAIAkV,cAAA,WACA,GAAApV,IACAqV,IAAAjf,EACA+F,QAAAzL,KAAAqjB,mBACAuB,UAAA5kB,KAAA,YAAAA,KAAA0e,YAAA9X,aAAA,KAEA,OAAA0I,IAIAuV,MAAA,WACA,MAAA7kB,MAAAwP,QAAA,eAIAsV,OAAA,WACA,MAAA9kB,MAAAwP,QAAA,gBAIAuV,kBAAA,WACA,MAAA/kB,MAAAwP,QAAA,2BAIAwV,cAAA,WACA,MAAAhlB,MAAAwP,QAAA,gBAIAyV,eAAA,WACA,MAAAjlB,MAAAwP,QAAA,gBAIA0V,YAAA,WACA,MAAAllB,MAAAwP,QAAA,aAIA2V,WAAA,WACA,GAAA7V,GAAA,EACA,UAAAzP,UAAA,aAAAA,OAAAoc,SAAA,CACA3M,EAAAzP,OAAAoc,SAAAmJ,KAEA,MAAA9V,IAMA4D,YAAA,WACA,MAAAlT,MAAAud,kBAAArK,eAMAI,YAAA,WACA,MAAAtT,MAAAud,kBAAAjK,eAMAF,kBAAA,WACA,MAAApT,MAAAud,kBAAAnK,qBAMAiS,mBAAA,WACA,MAAArlB,MAAAkd,cAAAhQ,aAAA,QAGAoY,gBAAA,WACA,MAAAtlB,MAAAmd,WAAAjQ,aAAA,QAIAqY,gBAAA,WACA,GAAAvlB,KAAAgd,YAAA,MAAAhd,MAAAslB,iBACA,OAAAtlB,MAAA2L,SAAA3L,KAAA2L,SAAAtF,QAAA0C,KAAAmE,aAAA,QAAA,GAIAsY,kBAAA,WACA,MAAAxlB,MAAA2L,SAAA3L,KAAA2L,SAAAtF,QAAAyD,OAAAoD,aAAA,QAAA,GAIAuY,gBAAA,WACA,MAAAzlB,MAAA2L,SAAA3L,KAAA2L,SAAAtF,QAAA0D,KAAAmD,aAAA,QAAA,GAIAwY,iBAAA,WACA,MAAA1lB,MAAA2L,SAAA3L,KAAA2L,SAAAtF,QAAAgD,MAAA6D,aAAA,QAAA,GAIAyY,kBAAA,WACA,MAAA3lB,MAAA0e,YAAA1e,KAAA0e,YAAArY,QAAA0C,KAAAmE,aAAA,QAAA,GAIA0Y,oBAAA,WACA,MAAA5lB,MAAA0e,YAAA1e,KAAA0e,YAAArY,QAAAyD,OAAAoD,aAAA,QAAA,GAIA2Y,mBAAA,WACA,MAAA7lB,MAAA0e,YAAA1e,KAAA0e,YAAArY,QAAAgD,MAAA6D,aAAA,QAAA,GAIA4Y,mBAAA,WACA,MAAA9lB,MAAA0e,YAAA1e,KAAA0e,YAAArY,QAAAwC,MAAAqE,aAAA,QAAA,KAWA6S,SACAgG,KAAA,QACA/F,KAAA,QACAhX,MAAA,SACAG,KAAA,YACAG,MAAA,SACAG,OAAA,UACAhC,KAAA,QACAD,OAAA,kBACA2D,MAAA,SACAT,KAAA,QACA4X,KAAA,QACApB,SAAA,WACAE,QAAA,UACAG,SAAA,WACAG,UAAA,YACAG,UAAA,mBACAG,QAAA,WAOAlb,OACAoZ,gBAAA,kBACAC,eAAA,iBACAE,gBAAA,kBACAE,iBAAA,mBACAE,eAAA,iBACAE,iBAAA,mBACAE,gBAAA,kBACAmF,sBAAA,wBACAlF,eAAA,iBACAuB,eAAA,iBACApB,mBAAA,qBACAE,kBAAA,oBACAG,mBAAA,qBACAG,oBAAA,sBACAG,oBAAA,sBACAG,kBAAA,sBAKAtiB,GAAAD,QAAAud,yTC7kCA,GAAAzR,GAAA5K,EAAA,YACA,IAAAkF,GAAAlF,EAAA,SAEA,IAAA6M,GAAA7M,EAAA,kBAEA,IAAAulB,IACA,cACA,WACA,YACA,QACA,SACA,OACA,gBACA,gBACA,kBACA,aACA,MACA,gBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,gBACA,aACA,MACA,iBACA,KACA,aACA,kBAGA,IAAAnJ,GAAAxR,EAAArF,QAYAC,YAAA,SAAAuQ,GACAzW,KAAA2W,QAAAF,CACAzW,MAAAkmB,UAAA,CAGAlmB,MAAA+X,aAUAqK,YAAA,SAAAzZ,EAAAwd,EAAAC,GACAzd,EAAAA,KACAwd,GAAAA,KACA,KAAA,GAAAxlB,GAAA,EAAAA,EAAAwlB,EAAAnlB,OAAAL,IAAA,CACA,GAAAqQ,GAAAmV,EAAAxlB,EAEA,IAAAgI,EAAAqI,GAAA,CAAA,OACA,GAAAqV,GAAAvJ,EAAAwJ,QAAAtV,EAEA,IAAAhR,KAAA2W,QAAA0P,GAAA,CACA,GAAA/U,GAAAtR,KAAA2W,QAAA0P,IACA,IAAA/U,IAAA,QAAA8U,GAAApmB,KAAA+X,SAAA/G,KAAAM,GAAA,CACA3I,EAAAqI,GAAAM,CACAtR,MAAA+X,SAAA/G,GAAAM,OAEA,CACA1L,EAAAgJ,KAAA,mCAAAoC,EAAA,IAAAqV,IAIA,MAAA1d,IASAgQ,YAAA,SAAAhQ,EAAAyF,GACAzF,EAAAA,KACA3I,MAAAoiB,YAAAzZ,EAAAmU,EAAAnU,OAAAyF,GAAA,MACApO,MAAAoiB,YAAAzZ,EAAAmU,EAAAyJ,gBAAAnY,GAAA,KACA,OAAAzF,IAWAuF,aAAA,SAAAyC,EAAAvC,EAAAzF,GACA,GAAA+Q,IACA/Q,OAAAA,EACA8N,OAAAzW,KAAA2W,QACAlL,QAAAzL,KAAA2W,QAAA2H,aACAE,WAAAxe,KAAA2W,QAAAuI,gBAGAlf,MAAA2W,QAAA9P,KAAA8J,EAAA+I,EAEA,IAAA1Z,KAAA2W,QAAA8I,OAAA9W,IAAA,MAAA3I,KAAA2W,QAAAnH,QAAA4P,QAAA,CACApf,KAAA2W,QAAA8I,MAAA7R,YAAA,GAAAL,GAAA,KAAAa,EAAAzF,MAUAqY,YAAA,WACA,GAAAD,GAAA/gB,KAAA+X,SAAAgJ,QACA,IAAAA,GAAA/gB,KAAA+X,SAAAyO,aAAAxmB,KAAA2W,QAAAqN,gBAAA,CACAjD,GAAA,MACA,CACAA,EAAA,EAEA/gB,KAAA+X,SAAAgJ,SAAAA,CACA,OAAAA,IAQAoB,mBAAA,WACA,MAAAniB,MAAAoiB,eAAAtF,EAAAyJ,gBAAA,YAAA,SAQA5d,QACA8d,SAAA,SAAA,iBACAC,QAAAT,EACAU,SAAAV,EACAW,aAAA,eAAA,YACAC,UAAA,YACAC,WAAA,gBAAA,YACAC,SAAA,eAAA,YACAC,mBAAA,iBAAA,YACAC,UAAA,UAAAC,OAAAjB,GACAkB,SAAA,UAAA,YACAC,YACA,WACA,UACA,aACA,aACA,aACA,kBACA,eACA,oBAEAC,WAAA,aAAA,iBAAA,cACAC,YAAA,aAAA,cACAC,aAAA,aAAA,aAAA,mBACAC,oBAAA,aAAA,aAAA,oBACAC,WAAA,aAAA,aAAA,YAAA,mBACAC,SAAA,WAAA,gBAAA,aAIAnB,iBACAoB,SAAA,QAAA,SAAA,OAAA,gBAAA,iBACAN,WAAA,UAAA,aAAA,cACAlR,UACA,YACA,QACA,SACA,OACA,gBACA,gBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,iBACA,aACA,KACA,WACA,MACA,WACA,WACA,mBAKAmQ,SACAhG,SAAA,cACAsH,SAAA,cACAC,IAAA,qBACAC,cAAA,mBACAC,cAAA,cACAjF,QAAA,aACAkF,WAAA,gBACAC,UAAA,eACAhI,MAAA,WACAiI,OAAA,YACAC,KAAA,YACAlQ,cAAA,cACAmQ,gBAAA,qBACAC,WAAA,cACAC,cAAA,mBACAniB,OAAA,gBACAyR,IAAA,SACA2Q,cAAA,mBAEAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,OAAA,iBACAC,QAAA,kBAEAzC,WAAA,gBACAhF,WAAA,gBACA0H,WAAA,gBACAC,UAAA,eACAC,QAAA,aACAC,WAAA,gBACAC,gBAAA,qBACAC,aAAA,gBACAC,iBAAA,sBAEAC,WAAA,gBAEAC,IAAA,SACAC,eAAA,oBACAC,GAAA,QAEAC,WAAA,gBAEAjR,OAAA,iBACAkR,YAAA,iBACAC,SAAA,cAEA3J,aAAA,kBACAQ,eAAA,oBACAF,aAAA,kBACAF,cAAA,mBAEAa,eAAA,oBACAS,iBAAA,sBACAkI,gBAAA,qBACAC,gBAAA,qBACAtI,gBAAA,qBAEAuI,QAAA,aAEAhS,SAAA,cACAC,SAAA,cACAC,eAAA,sBAMA3Y,GAAAD,QAAAsd,yECvRA,GAAAqN,GAAA,WAEAC,SAAA7U,UAAApJ,KAAAie,SAAA7U,UAAApJ,MAAA,SAAAke,GACA,SAAArqB,QAAA,WAAA,CACA,KAAA,IAAAsqB,WAAA,wEAEA,GAAA7pB,GAAAkZ,MAAApE,UAAAnE,KACA,IAAA7R,GAAAkB,EAAAM,KAAA0U,UAAA,EACA,IAAAvV,GAAAF,IACA,IAAAuqB,GAAA,YACA,IAAAjP,GAAA,WACA,MAAApb,GAAAsV,MAAAxV,eAAAuqB,GAAAvqB,KAAAqqB,GAAAxqB,OAAAN,EAAA2nB,OAAAzmB,EAAAM,KAAA0U,aAEA8U,GAAAhV,UAAAvV,KAAAuV,SACA+F,GAAA/F,UAAA,GAAAgV,EACA,OAAAjP,GAIA3L,QAAAC,OAAAD,OAAAC,QAAA,SAAAkK,GACA,GAAAA,IAAA0Q,WAAA1Q,IAAA,KAAA,CACA,KAAA,IAAAwQ,WAAA,8CAGA,GAAAG,GAAA9a,OAAAmK,EACA,KAAA,GAAAzH,GAAA,EAAAA,EAAAoD,UAAAzU,OAAAqR,IAAA,CACA,GAAAqY,GAAAjV,UAAApD,EACA,IAAAqY,IAAAF,WAAAE,IAAA,KAAA,CACA,IAAA,GAAAC,KAAAD,GAAA,CACA,GAAAA,EAAAlZ,eAAAmZ,GAAA,CACAF,EAAAE,GAAAD,EAAAC,MAKA,MAAAF,GAIA9a,QAAAuF,OAAAvF,OAAAuF,QAAA,WACA,GAAA0V,GAAA,YACA,OAAA,UAAArV,EAAAsV,GACA,GAAAtV,IAAA5F,OAAA4F,IAAAA,IAAA,KAAA,CACA,KAAA+U,WAAA,uCAEAM,EAAArV,UAAAA,KACA,IAAAuV,GAAA,GAAAF,EACAA,GAAArV,UAAA,IACA,IAAAsV,IAAAL,UAAA,CACA7a,OAAAob,iBAAAD,EAAAD,GAIA,GAAAtV,IAAA,KAAA,CACAuV,EAAAvV,UAAA,KAEA,MAAAuV,MAKAnR,OAAApE,UAAAhG,QAAAoK,MAAApE,UAAAhG,SAAA,SAAAzB,EAAAkd,GACA,SAAA,KAAA,WAAA,CACA,KAAA,IAAAV,WAAAxc,EAAA,uBAEA,GAAAmd,GAAAjrB,KAAAgB,MACA,KAAA,GAAAL,GAAA,EAAAA,EAAAsqB,EAAAtqB,IAAA,CACAmN,EAAA/M,KAAAiqB,EAAAhrB,KAAAW,GAAAA,EAAAX,OAKA2Z,OAAAC,QAAAD,MAAAC,SAAA,SAAAsR,GACA,MAAAvb,QAAA4F,UAAA4V,SAAApqB,KAAAmqB,KAAA,kBAIAzrB,GAAAD,QAAA2qB,2BCzFA,GAAA7e,GAAA5K,EAAA,WACA,IAAA6K,GAAA7K,EAAA,WAEA,IAAA8K,GAAAF,EAAArF,QAcAC,YAAA,SAAA4H,EAAApC,GACA1L,KAAA8N,SAAAA,CACA9N,MAAA0L,SAAAA,GAAA,GACA1L,MAAAiiB,UAAA,KACAjiB,MAAAiM,OAAA,IAEAjM,MAAAsN,OAAA,GAAA/B,IAMAzC,MAAA,WACA9I,KAAAiiB,UAAA,IACAjiB,MAAAorB,YAMAlkB,KAAA,WACAlH,KAAAiiB,UAAA,KACA,IAAAjiB,KAAAiM,OAAAof,aAAArrB,KAAAiM,SAGAmf,SAAA,WACAprB,KAAAsN,OAAAxE,OACA9I,MAAAiM,OAAA0F,WAAA,WACA3R,KAAA8N,SAAA9N,KAAAsN,OAAApG,OACAlH,MAAAorB,YACAjf,KAAAnM,MAAAA,KAAA0L,YAKAjM,GAAAD,QAAAgM,qDCpDA,GAAA5F,GAAAlF,EAAA,QAQA,IAAA2X,IAOAkK,cAAA,SAAApd,GACA,IACA,MAAAA,GAAAmmB,QAAA,oBAAA,IACA,MAAAhb,GACA1K,EAAAgJ,KAAA0B,EACA,OAAAnL,KAaA8T,YAAA,SAAA9T,EAAAomB,GACA,IACA,GAAAA,IAAA,KAAA,CACA,MAAA,WAAApmB,MACA,IAAAtF,OAAAoc,SAAAuP,SAAAzc,QAAA,UAAA,EAAA,CACA,MAAA,KAAA5J,MACA,CACA,MAAA,UAAAA,GAEA,MAAAmL,GACA1K,EAAAgJ,KAAA0B,EACA,OAAA,sBAWAkS,YAAA,SAAApiB,EAAAqrB,GACA,IACAC,MAAAtrB,IACAA,GAAA,GACAA,IAAAurB,UACAvrB,KAAAurB,UACAvrB,IAAA,YACAA,KAAA,YACA,CACA,MAAAA,OACA,CACA,MAAAqrB,KAmBAG,gBAAA,SAAArrB,EAAAsrB,EAAAvR,GACA,IACA,GAAA1U,EAAAgM,UAAAhM,EAAAiM,MAAAsI,MAAA,CACAG,EAAAA,GAAA,SAAApa,GACA0F,EAAAyV,MAAA,UAAAnb,EAAAuB,MAGA,IAAAqqB,IACA,UAAA,YAAA,UAAA,QAAA,OAAA,UACA,QAAA,SAAA,QAAA,QAAA,OAAA,UAAA,SACA,UAAA,UAAA,aAAA,YAEA,IAAAD,EAAA,CACA,GAAAA,EAAA,KAAA,KAAA,CACAA,EAAA1c,OACA2c,GAAAD,MACA,CACAC,EAAAA,EAAA5E,OAAA2E,IAIA,IAAA,GAAAlrB,GAAA,EAAAA,EAAAmrB,EAAA9qB,OAAAL,IAAA,CACA,SAAAJ,KAAA,WAAA,CACAA,EAAAQ,KAAAlB,OAAAisB,EAAAnrB,GAAA2Z,OACA,IAAA/Z,EAAAwN,GAAA,CACAxN,EAAAwN,GAAA+d,EAAAnrB,GAAA2Z,OACA,IAAA/Z,EAAAqQ,iBAAA,CACArQ,EAAAqQ,iBAAAkb,EAAAnrB,GAAA2Z,MAIA,MAAAhK,GACA1K,EAAA2K,MAAAD,KAoBAyb,qBAAA,SAAAC,EAAAC,EAAAnJ,GACA,GAAArN,UAAAzU,SAAA,EAAA,CACA8hB,EAAAkJ,CACAA,GAAA,IACAC,GAAA,KAGA,GAAA3c,GAAA,EACA,IAAA0c,GAAAC,EAAA,CACA3c,EAAA0c,EAAA,IAAAC,CACA,IAAAnJ,EAAA,EAAA,CACAxT,GAAA,KAIA,GAAAwT,EAAA,EAAA,CACA,MAAAxT,OACA,IAAAwT,EAAA,IAAA,CACAxT,GAAA1C,KAAA+V,MAAAG,GAAA,UACA,IAAAA,EAAA,IAAA,CACAA,EAAAlW,KAAA+V,MAAAG,EAAA,IACAxT,IAAAwT,EAAA,WACA,CACAA,EAAAlW,KAAA+V,MAAAG,EAAA,KAAA,GACAxT,IAAAwT,EAAA,OAGA,MAAAxT,IAAA,MAKA7P,GAAAD,QAAA6Y,qCCzKA5Y,EAAAD,QAAAkB,EAAA,mBAAAgF,oDCCA,GAAAwmB,GAAAjsB,CACA,IAAAA,KAOAA,GAAAksB,WAAA,WACAlsB,EAAAisB,CACA,OAAAlsB,MAIAC,GAAAmsB,QAAA1rB,EAAA,YAGAT,GAAAosB,UAAA3rB,EAAA,cAGAT,GAAA0P,OAAAjP,EAAA,WACAT,GAAA0F,QAAAjF,EAAA,YACAT,GAAAoY,KAAA3X,EAAA,SACAT,GAAAsL,OAAA7K,EAAA,WACAT,GAAAuL,MAAA9K,EAAA,UAGAT,GAAA2F,IAAAlF,EAAA,QACAT,GAAA2F,IAAAoW,kBAGA/b,GAAAqsB,QAAA5rB,EAAA,iBACAT,GAAAwN,cAAA/M,EAAA,uBAGAT,GAAAuN,UAAA9M,EAAA,6BACAT,GAAAqY,cAAA5X,EAAA,wBACAT,GAAAgW,cAAAvV,EAAA,wBACAT,GAAAuW,kBAAA9V,EAAA,4BACAT,GAAAqS,UAAA5R,EAAA,6BACAT,GAAAyV,UAAAhV,EAAA,6BAGAT,GAAA0c,QAAAjc,EAAA,mBACAT,GAAA8c,OAAArc,EAAA,kBACAT,GAAA6c,eAAApc,EAAA,0BAGAT,GAAA8F,gBAAArF,EAAA,4BACAT,GAAA+F,QAAAtF,EAAA,oBACAT,GAAAssB,WAEA9sB,GAAAD,QAAAS,oeCrDAR,EAAAD,SACA8B,KAAA,wBACAoE,QAAA,WACAZ,KAAA,iBACAM,SACAC,MAAA,aACAK,QAAA,8BACAJ,YAAA,+BAEAtC,cACAwpB,WAAA,kDAEAtpB,iBACAupB,GAAA,iBACAC,eAAA,UAEAxnB,YACAzD,KAAA,MACA0D,IAAA,oDAEAtC,OAAA,gBACAgC,QAAA,MACA/B,MACAC,MAAA,0DCvBA,GAAA9C,GAAAS,EAAA,aACA,IAAAisB,GAAAjsB,EAAA,kBAEAT,GAAAssB,SAAAK,MAAA3sB,EAAA+F,QAAAC,QACAW,WAAA,WACA,MAAA+lB,GAAAjnB,QAAA,UAGAgC,YAAA,WACA,MAAA1H,MAAAmG,OAAA0mB,aAGA9kB,YAAA,WACA,MAAA/H,MAAAmG,OAAA2mB,UAGAxkB,YAAA,WACA,MAAAtI,MAAAmG,OAAA4mB,YAGAvkB,cAAA,WACA,MAAA,SAGAD,iBAAA,WACA,MAAAvI,MAAAwI,iBAGA9B,kBAAA,WACAzG,EAAAoY,KAAAuT,gBAAA5rB,KAAAmG,OAGAnG,MAAAoH,gBAAA,KAAA,MAGApH,MAAAmG,OAAAyK,iBAAA,OAAA5Q,KAAAgtB,aAAA7gB,KAAAnM,MACAA,MAAAmG,OAAAyK,iBAAA,aAAA5Q,KAAAitB,mBAAA9gB,KAAAnM,MACAA,MAAAmG,OAAAyK,iBAAA,QAAA5Q,KAAAktB,cAAA/gB,KAAAnM,MACAA,MAAAmG,OAAAyK,iBAAA,UAAA5Q,KAAAmtB,gBAAAhhB,KAAAnM,MACAA,MAAAmG,OAAAyK,iBAAA,QAAA5Q,KAAAotB,cAAAjhB,KAAAnM,MACAA,MAAAmG,OAAAyK,iBAAA,UAAA5Q,KAAAqtB,gBAAAlhB,KAAAnM,MACAA,MAAAmG,OAAAyK,iBAAA,QAAA5Q,KAAAstB,cAAAnhB,KAAAnM,QAGAgtB,aAAA,SAAA9sB,GACAF,KAAA0I,aAGAukB,mBAAA,SAAA/sB,GACA,GAAAF,KAAA0H,cAAA,GAAA,CACA1H,KAAAiJ,aAIAikB,cAAA,SAAAhtB,GACAF,KAAAoJ,aAGA+jB,gBAAA,SAAAjtB,GACAF,KAAAuJ,YACAvJ,MAAAwK,eAGA4iB,cAAA,SAAAltB,GACAF,KAAA2K,aAGA0iB,gBAAA,SAAAntB,GACAF,KAAAqK,iBAGAijB,cAAA,SAAAptB,GACAF,KAAAmH,YAGAH,oBAAA,WAEAhH,KAAAsG,QAAAY,MAGAlH,MAAAmG,OAAA2K,oBAAA,OAAA9Q,KAAAutB,OACAvtB,MAAAmG,OAAA2K,oBAAA,aAAA9Q,KAAAwtB,aACAxtB,MAAAmG,OAAA2K,oBAAA,QAAA9Q,KAAAytB,QACAztB,MAAAmG,OAAA2K,oBAAA,UAAA9Q,KAAA0tB,UACA1tB,MAAAmG,OAAA2K,oBAAA,QAAA9Q,KAAA2tB,QACA3tB,MAAAmG,OAAA2K,oBAAA,UAAA9Q,KAAA4tB,UACA5tB,MAAAmG,OAAA2K,oBAAA,QAAA9Q,KAAA6tB,WAKApuB,GAAAD,QAAAS,EAAAssB,SAAAK,iEC3FA,GAAA3sB,GAAAS,EAAA,aACAA,GAAA,YAEAjB,GAAAD,QAAAS","file":"sp.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\n  \"_args\": [\n    [\n      {\n        \"raw\": \"youboralib@git+https://github.com/NPAW/plugin-core-js.git\",\n        \"scope\": null,\n        \"escapedName\": \"youboralib\",\n        \"name\": \"youboralib\",\n        \"rawSpec\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n        \"spec\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n        \"type\": \"hosted\",\n        \"hosted\": {\n          \"type\": \"github\",\n          \"ssh\": \"git@github.com:NPAW/plugin-core-js.git\",\n          \"sshUrl\": \"git+ssh://git@github.com/NPAW/plugin-core-js.git\",\n          \"httpsUrl\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n          \"gitUrl\": \"git://github.com/NPAW/plugin-core-js.git\",\n          \"shortcut\": \"github:NPAW/plugin-core-js\",\n          \"directUrl\": \"https://raw.githubusercontent.com/NPAW/plugin-core-js/master/package.json\"\n        }\n      },\n      \"/home/jaguilar/workspace/youboralib6/adapters/html5\"\n    ]\n  ],\n  \"_from\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n  \"_id\": \"youboralib@6.0.0-rc\",\n  \"_inCache\": true,\n  \"_location\": \"/youboralib\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"raw\": \"youboralib@git+https://github.com/NPAW/plugin-core-js.git\",\n    \"scope\": null,\n    \"escapedName\": \"youboralib\",\n    \"name\": \"youboralib\",\n    \"rawSpec\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n    \"spec\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n    \"type\": \"hosted\",\n    \"hosted\": {\n      \"type\": \"github\",\n      \"ssh\": \"git@github.com:NPAW/plugin-core-js.git\",\n      \"sshUrl\": \"git+ssh://git@github.com/NPAW/plugin-core-js.git\",\n      \"httpsUrl\": \"git+https://github.com/NPAW/plugin-core-js.git\",\n      \"gitUrl\": \"git://github.com/NPAW/plugin-core-js.git\",\n      \"shortcut\": \"github:NPAW/plugin-core-js\",\n      \"directUrl\": \"https://raw.githubusercontent.com/NPAW/plugin-core-js/master/package.json\"\n    }\n  },\n  \"_requiredBy\": [\n    \"#USER\",\n    \"/\"\n  ],\n  \"_resolved\": \"git+https://github.com/NPAW/plugin-core-js.git#bb476e17e278ab49e1c96e4113c82fc05db228bc\",\n  \"_shasum\": \"e4cd89c45223e26b14b9c7995cb01fce27bedb17\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"youboralib@git+https://github.com/NPAW/plugin-core-js.git\",\n  \"_where\": \"/home/jaguilar/workspace/youboralib6/adapters/html5\",\n  \"author\": {\n    \"name\": \"Jordi Aguilar\"\n  },\n  \"bugs\": {\n    \"email\": \"project@hostname.com\"\n  },\n  \"dependencies\": {},\n  \"description\": \"[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com) [![Build Status](https://travis-ci.org/NicePeopleAtWork/Youbora-YouboraLib-JS.svg)](https://travis-ci.org/NicePeopleAtWork/Youbora-YouboraLib-JS) [![codecov](https://codecov.io/gh/NicePeopleAtWork/Youbora-YouboraLib-JS/branch/master/graph/badge.svg)](https://codecov.io/gh/NicePeopleAtWork/Youbora-YouboraLib-JS)\",\n  \"devDependencies\": {\n    \"browserify\": \"^13.1.0\",\n    \"codecov\": \"^1.0.1\",\n    \"convert-source-map\": \"^1.3.0\",\n    \"del\": \"^2.2.2\",\n    \"eslint\": \"^3.7.1\",\n    \"eslint-config-standard\": \"^6.2.0\",\n    \"eslint-plugin-node\": \"^2.1.2\",\n    \"eslint-plugin-promise\": \"^3.4.0\",\n    \"eslint-plugin-standard\": \"^2.0.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-load-plugins\": \"^1.3.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sourcemaps\": \"^1.6.0\",\n    \"gulp-streamify\": \"^1.0.2\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"istanbul\": \"^0.4.5\",\n    \"jasmine\": \"^2.5.2\",\n    \"mock-browser\": \"^0.92.12\",\n    \"offset-sourcemap-lines\": \"^1.0.0\",\n    \"through2\": \"^2.0.1\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.7.0\"\n  },\n  \"gitHead\": \"bb476e17e278ab49e1c96e4113c82fc05db228bc\",\n  \"homepage\": \"https://github.com/NicePeopleAtWork/Youbora-YouboraLib-JS#readme\",\n  \"license\": \"MIT\",\n  \"main\": \"src/youboralib.js\",\n  \"name\": \"youboralib\",\n  \"optionalDependencies\": {},\n  \"readme\": \"# Youbora-YouboraLib-JS\\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\\n[![Build Status](https://travis-ci.org/NicePeopleAtWork/Youbora-YouboraLib-JS.svg)](https://travis-ci.org/NicePeopleAtWork/Youbora-YouboraLib-JS)\\n[![codecov](https://codecov.io/gh/NicePeopleAtWork/Youbora-YouboraLib-JS/branch/master/graph/badge.svg)](https://codecov.io/gh/NicePeopleAtWork/Youbora-YouboraLib-JS)\\n\\n\\n## Folder Structure\\n\\n```\\n/\\n├── dist/  Built & Minified files ready to include and run\\n├── gulp/  Build scripts\\n├── spec/  Jasmine tests\\n└── src/   Sourcecode of the project\\n```\\n\\n## Documentation\\nPlease refer to [Developer Portal](http://developer.nicepeopleatwork.com).\\n\\n## Installation\\n\\n\\n### Using NPM\\n\\nIf you want to use NPM to wrap youbora inside your project, use this command:\\n\\n```\\nnpm install --save Youboralib\\n```\\n\\nAnd then, inside your code:\\n\\n```js\\nvar youbora = require('youboralib')\\n```\\n\\n\\n### Using CDN\\n\\nIf you want to include our hosted file, please refer [here](http://developer.nicepeopleatwork.com/plugins/integration/release/javascript-lib-releases/).\\n\\n\\n## I need help!\\nIf you find a bug, have a suggestion or need assistance send an E-mail to <support@nicepeopleatwork.com>\\n\\n\\n## Contribute\\nFork the repo and run the following command:\\n\\n```\\nnpm install\\nnpm run build\\n```\\n\\nThis will install and execute gulp build. Develop your changes and open a pull-request.\\n\\n### Publishing changes\\nOnce a change is done (or a pull request merged) NPAW will run this scripts:\\n\\nRun the following script to update the version & tag this repo.\\n\\n`npm version NEW_VERSION`\\n\\nThen run this to publish it to npm (version must be unique).\\n\\n`npm publish`\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/NicePeopleAtWork/Youbora-YouboraLib-JS.git\"\n  },\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"postversion\": \"git push && git push --tags\",\n    \"pretest\": \"npm run build\",\n    \"preversion\": \"npm test\",\n    \"test\": \"istanbul cover --include-all-sources --root src ./node_modules/jasmine/bin/jasmine.js\",\n    \"version\": \"npm run build && git add -A\"\n  },\n  \"version\": \"6.0.0-rc\"\n}\n","var Emitter = require('../emitter')\nvar Log = require('../log')\nvar version = require('../version')\nvar PlaybackChronos = require('./playbackchronos')\nvar PlaybackFlags = require('./playbackflags')\nvar PlayheadMonitor = require('./playheadmonitor')\n\nvar Adapter = Emitter.extend(\n  /** @lends Adapter.prototype */\n  {\n    /**\n     * This class is the basic adapter from which specific adapters will extend.\n     * It receives a player: If it is an object, it will be saved as this.player.\n     * It it is a string, it will be saved as this.player = document.getElementById(...)\n     * Will call registerListeners()\n     *\n     * @constructs Adapter\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {object|string} player Either an instance of the player or a string containing an ID.\n     */\n    constructor: function (player) {\n      /** An instance of {@link FlagStatus} */\n      this.flags = new PlaybackFlags()\n\n      /** An instance of {@link ChronoStatus} */\n      this.chronos = new PlaybackChronos()\n\n      /** Reference to {@link PlayheadMonitor}. Helps the plugin detect buffers/seeks. */\n      this.monitor = null\n\n      /** Reference to the player tag */\n      this.player = null\n      if (typeof player === 'string') {\n        this.player = document.getElementById(player)\n      } else {\n        this.player = player\n      }\n\n      /** Reference to the video/object tag, could be the same as the player. */\n      this.tag = this.player\n\n      this.registerListeners()\n\n      Log.notice('Adapter ' + this.getVersion() + ' with Lib ' + version + ' is ready.')\n\n      this.emit(Adapter.Event.READY)\n    },\n\n    /**\n     * Override to create event binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.addEventListener('start', this.onStart.bind(this))\n     * },\n     * onStart: function (e) {\n     *  this.emit('start')\n     * }\n     */\n    registerListeners: function () { },\n\n    /**\n     * Override to create event de-binders.\n     * @example\n     * registerListeners: function () {\n     *  this.player.removeEventListener('start', this.onStart)\n     * }\n     */\n    unregisterListeners: function () { },\n\n    /**\n     * This function disposes the currend adapter, removes player listeners and drops references.\n     */\n    dispose: function () {\n      if (this.monitor) this.monitor.stop()\n      this.fireStop()\n      this.unregisterListeners()\n      this.player = null\n      this.tag = null\n    },\n\n    /**\n     * Creates a {@link PlayheadMonitor} at this.monitor.\n     *\n     * @param {bool} monitorBuffers If true, it will monitor buffers.\n     * @param {bool} monitorSeeks If true, it will monitor seeks.\n     */\n    monitorPlayhead: function (monitorBuffers, monitorSeeks) {\n      var type = 0\n      if (monitorBuffers) type |= PlayheadMonitor.Type.BUFFER\n      if (monitorSeeks) type |= PlayheadMonitor.Type.SEEK\n\n      this.monitor = new PlayheadMonitor(this, type)\n    },\n\n    // GETTERS //\n\n    /** Override to return current playhead of the video */\n    getPlayhead: function () {\n      return null\n    },\n\n    /** Override to return current playrate */\n    getPlayrate: function () {\n      return !this.flags.isPaused ? 1 : 0\n    },\n\n    /** Override to return Frames Per Secon (FPS) */\n    getFramesPerSecond: function () {\n      return null\n    },\n\n    /** Override to return dropped frames since start */\n    getDroppedFrames: function () {\n      return null\n    },\n\n    /** Override to return video duration */\n    getDuration: function () {\n      return null\n    },\n\n    /** Override to return current bitrate */\n    getBitrate: function () {\n      return null\n    },\n\n    /** Override to return user bandwidth throughput */\n    getThroughput: function () {\n      return null\n    },\n\n    /** Override to return rendition */\n    getRendition: function () {\n      return null\n    },\n\n    /** Override to return title */\n    getTitle: function () {\n      return null\n    },\n\n    /** Override to return title2 */\n    getTitle2: function () {\n      return null\n    },\n\n    /** Override to recurn true if live and false if VOD */\n    getIsLive: function () {\n      return null\n    },\n\n    /** Override to return resource URL. */\n    getResource: function () {\n      return null\n    },\n\n    /** Override to return player version */\n    getPlayerVersion: function () {\n      return null\n    },\n\n    /** Override to return player's name */\n    getPlayerName: function () {\n      return null\n    },\n\n    /** Override to return adapter version. */\n    getVersion: function () {\n      return version + '-generic-js'\n    },\n\n    /** Override to return current ad position (only ads) */\n    getPosition: function () {\n      return null\n    },\n\n    // FLOW //\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireStart: function (params) {\n      if (!this.flags.isStarted) {\n        this.flags.isStarted = true\n\n        this.chronos.total.start()\n        this.chronos.join.start()\n\n        this.emit(Adapter.Event.START, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireJoin: function (params) {\n      if (this.flags.isStarted && !this.flags.isJoined) {\n        if (this.monitor) this.monitor.start()\n\n        this.flags.isJoined = true\n\n        this.chronos.join.stop()\n\n        this.emit(Adapter.Event.JOIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    firePause: function (params) {\n      if (this.flags.isJoined && !this.flags.isPaused) {\n        this.flags.isPaused = true\n\n        this.chronos.pause.start()\n\n        this.emit(Adapter.Event.PAUSE, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireResume: function (params) {\n      if (this.flags.isJoined && this.flags.isPaused) {\n        this.flags.isPaused = false\n\n        this.chronos.pause.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.RESUME, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     * @param {bool} [convertFromSeek=false] If true, will convert current seek to buffer.\n     */\n    fireBufferBegin: function (params, convertFromSeek) {\n      if (this.flags.isJoined && !this.flags.isBuffering) {\n        if (convertFromSeek && this.flags.isSeeking) {\n          Log.notice('Converting current buffer to seek')\n\n          this.chronos.buffer = this.chronos.seek.clone()\n          this.chronos.seek.reset()\n\n          this.flags.isSeeking = false\n        } else {\n          this.chronos.buffer.start()\n        }\n        this.flags.isBuffering = true\n\n        this.emit(Adapter.Event.BUFFER_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireBufferEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isBuffering) {\n        this.flags.isBuffering = false\n\n        this.chronos.buffer.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.BUFFER_END, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     * @param {bool} [convertFromBuffer=true] If false, will convert current buffer to seek.\n     */\n    fireSeekBegin: function (params, convertFromBuffer) {\n      if (this.flags.isJoined && !this.flags.isSeeking) {\n        if (convertFromBuffer !== false && this.flags.isBuffering) {\n          Log.notice('Converting current buffer to seek')\n\n          this.chronos.seek = this.chronos.buffer.clone()\n          this.chronos.buffer.reset()\n\n          this.flags.isBuffering = false\n        } else {\n          this.chronos.seek.start()\n        }\n\n        this.flags.isSeeking = true\n\n        this.emit(Adapter.Event.SEEK_BEGIN, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireSeekEnd: function (params) {\n      if (this.flags.isJoined && this.flags.isSeeking) {\n        this.flags.isSeeking = false\n\n        this.chronos.seek.stop()\n\n        if (this.monitor) this.monitor.skipNextTick()\n\n        this.emit(Adapter.Event.SEEK_END, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireStop: function (params) {\n      if (this.flags.isStarted) {\n        if (this.monitor) this.monitor.stop()\n\n        this.flags.isStarted = false\n\n        this.chronos.total.stop()\n\n        this.emit(Adapter.Event.STOP, { params: params })\n      }\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     * @param {String} [level] Level of the error. Currently supports 'error' and 'fatal'\n     */\n    fireError: function (code, msg, metadata, level) {\n      var params = {}\n      if (typeof code === 'object') {\n        params = code\n      } else {\n        params.errorCode = code || 'PLAY_FAILURE'\n        params.errorMsg = msg || params.errorCode\n        params.errorMetadata = metadata\n        params.errorLevel = level || 'error'\n      }\n\n      this.emit(Adapter.Event.ERROR, { params: params })\n    },\n\n    /**\n     * Emits related event and set flags if current status is valid.\n     * ie: won't sent start if isStarted is already true.\n     *\n     * @param {String|Object} [code] Error Code, if an object is sent, it will be treated as params.\n     * @param {String} [msg] Error Message\n     * @param {Object} [metadata] Object defining error metadata\n     */\n    fireFatalError: function (code, msg, metadata) {\n      if (this.monitor) this.monitor.stop()\n\n      this.fireError(code, msg, metadata, 'fatal')\n      this.fireStop()\n    }\n  },\n\n  /** @lend Adapter */\n  {\n    // Static Memebers //\n\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      READY: 'ready',\n\n      START: 'start',\n      JOIN: 'join',\n      PAUSE: 'pause',\n      RESUME: 'resume',\n      SEEK_BEGIN: 'seek-begin',\n      SEEK_END: 'seek-end',\n      BUFFER_BEGIN: 'buffer-begin',\n      BUFFER_END: 'buffer-end',\n      ERROR: 'error',\n      FATAL_ERROR: 'fatal-error',\n      STOP: 'stop'\n    }\n  }\n)\n\nmodule.exports = Adapter\n","var YouboraObject = require('../object')\nvar Chrono = require('../chrono')\n\nvar PlaybackChronos = YouboraObject.extend(\n  /** @lends PlaybackChronos.prototype */\n  {\n    /**\n     * This class contains all the {@link Chrono}s related to view status.\n     * Chronos measure time lapses between events.\n     * ie: between start and join, between seek-begin and seek-end, etc.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackChronos\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Chrono between start and joinTime. */\n      this.join = new Chrono()\n\n      /** Chrono between seek-begin and seek-end. */\n      this.seek = new Chrono()\n\n      /** Chrono between pause and resume. */\n      this.pause = new Chrono()\n\n      /** Chrono between buffer-begin and buffer-end. */\n      this.buffer = new Chrono()\n\n      /** Chrono for the totality of the view. */\n      this.total = new Chrono()\n    }\n  }\n)\n\nmodule.exports = PlaybackChronos\n","var YouboraObject = require('../object')\n\nvar PlaybackFlags = YouboraObject.extend(\n  /** @lends PlaybackFlags.prototype */\n  {\n    /**\n     * This class contains all the flags related to view status.\n     * Each plugin will have an instance of this class.\n     *\n     * @constructs PlaybackFlags\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset flag values */\n    reset: function () {\n      /** Flag when Start has been sent. */\n      this.isStarted = false\n\n      /** Flag when Join has been sent. */\n      this.isJoined = false\n\n      /** Flag when Player is paused. */\n      this.isPaused = false\n\n      /** Flag when Player is seeking. */\n      this.isSeeking = false\n\n      /** Flag when Player is buffering. */\n      this.isBuffering = false\n    }\n  }\n)\n\nmodule.exports = PlaybackFlags\n","var YouboraObject = require('../object')\nvar Timer = require('../timer')\nvar Chrono = require('../chrono')\nvar Log = require('../log')\n\nvar PlayheadMonitor = YouboraObject.extend(\n  /** @lends PlayheadMonitor.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     *\n     * @constructs PlayheadMonitor\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {Adapter} adapter Adapter to monitor. Must have getPlayhead defined.\n     * @param {PlayheadMonitor.Type} [type=NONE]\n     * Which metric to monitor seek and/or buffer.\n     * Use bitwise operators to join both values (Type.BUFFER | Type.SEEK)\n     * @param {int} [interval=800] How many ms will wait between progress. -1 to disable.\n     */\n    constructor: function (adapter, type, interval) {\n      this._adapter = adapter\n      this._seekEnabled = type & PlayheadMonitor.Type.SEEK\n      this._bufferEnabled = type & PlayheadMonitor.Type.BUFFER\n      this._interval = interval || 800\n\n      this._chrono = new Chrono()\n      this._lastPlayhead = 0\n\n      if (this._interval > 0) {\n        this._timer = new Timer(this.progress.bind(this), this._interval)\n      }\n    },\n\n    /**\n     * Start interval checks.\n     */\n    start: function () {\n      this._timer.start()\n    },\n\n    /**\n     * Stop interval checks.\n     */\n    stop: function () {\n      if (this._timer) this._timer.stop()\n    },\n\n    skipNextTick: function () {\n      this._lastPlayhead = 0\n    },\n\n    /**\n     * Call this method at every tick of timeupdate/progress.\n     * If you defined an interval, do not fire this method manually.\n     */\n    progress: function () {\n      // Reset timer\n      var deltaTime = this._chrono.stop()\n      this._chrono.start()\n\n      // Define thresholds\n      var bufferThreshold = deltaTime * PlayheadMonitor.kBUFFER_THRESHOLD_RATIO\n      var seekThreshold = deltaTime * PlayheadMonitor.kSEEK_THRESHOLD_RATIO\n\n      // Calculate diff playhead\n      var currentPlayhead = this._getPlayhead()\n      var diffPlayhead = Math.abs(this._lastPlayhead - currentPlayhead) * 1000\n\n      // Log.debug('curr: ' + currentPlayhead +\n      //   ' last: ' + this._lastPlayhead +\n      //   ' diff: ' + diffPlayhead)\n\n      if (diffPlayhead < bufferThreshold) {\n        // Playhead is stalling > buffer\n        if (this._bufferEnabled &&\n          this._lastPlayhead > 0 &&\n          !this._adapter.flags.isPaused &&\n          !this._adapter.flags.isSeeking\n        ) {\n          this._adapter.fireBufferBegin(null, false)\n        }\n      } else if (diffPlayhead > seekThreshold) {\n        // Playhead has jumped > seek\n        if (this._seekEnabled && this._lastPlayhead > 0) {\n          this._adapter.fireSeekBegin(null, false)\n        }\n      } else {\n        // Healthy\n        if (this._seekEnabled) {\n          this._adapter.fireSeekEnd()\n        } else if (\n          this._bufferEnabled) {\n          this._adapter.fireBufferEnd()\n        }\n      }\n\n      // Update Playhead\n      this._lastPlayhead = currentPlayhead\n    },\n    /**\n     * Returns adapter's playhead. Override to add a custom playhead getter.\n     * @private\n     * @returns {double} Playhead in seconds\n     */\n    _getPlayhead: function () {\n      return this._adapter.getPlayhead()\n    }\n  }, {\n    // Static methods\n\n    /**\n     * Enum for monitoring type\n     * @enum\n     */\n    Type: {\n      /** Would not monitor */\n      NONE: 0,\n      /** Sends buffer-begin/end */\n      BUFFER: 1,\n      /** Sends seek-begin/end */\n      SEEK: 2\n    },\n\n    /** Buffer threshold */\n    kBUFFER_THRESHOLD_RATIO: 0.5,\n\n    /** Seek threshold */\n    kSEEK_THRESHOLD_RATIO: 2\n  })\n\nmodule.exports = PlayheadMonitor\n","var YouboraObject = require('./object')\n\nvar Chrono = YouboraObject.extend(\n  /** @lends Chrono.prototype */\n  {\n    /**\n     * This class calculates time lapses between two points.\n     *\n     * @constructs Chrono\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.reset()\n    },\n\n    /** Reset chrono values. */\n    reset: function () {\n      /** Start time */\n      this.startTime = 0\n\n      /** Stop time */\n      this.stopTime = 0\n\n      /** Offset to be added to deltaTime and stop. in ms. */\n      this.offset = 0\n    },\n\n    /**\n     * Returns the time between start() and the last stop() in ms. Returns -1 if start wasn't\n     * called.\n     * @param {boolean} [stop=true] If true, it will force a stop() if it wasn't called before.\n     * @return {number} Time lapse in ms.\n     */\n    getDeltaTime: function (stop) {\n      var now = new Date().getTime()\n      if (this.startTime) {\n        if (stop && !this.stopTime) { this.stopTime = now }\n        return this.offset + (now - this.startTime)\n      } else {\n        return -1\n      }\n    },\n\n    /**\n     * Starts the chrono.\n     */\n    start: function () {\n      this.startTime = new Date().getTime()\n      this.stopTime = 0\n    },\n\n    /**\n     * Stops the timer and returns current delta time.\n     * @return {number} Returns the delta time\n     */\n    stop: function () {\n      this.stopTime = new Date().getTime()\n      return this.startTime ? this.offset + (this.stopTime - this.startTime) : -1\n    },\n\n    /**\n     * Creates a copy of the chrono.\n     */\n    clone: function () {\n      var chrono = new Chrono()\n      chrono.startTime = this.startTime\n      chrono.stopTime = this.stopTime\n      chrono.offset = this.offset\n      return chrono\n    }\n  }\n)\n\nmodule.exports = Chrono\n","var YouboraObject = require('../object')\nvar Log = require('../log')\nvar YBRequest = require('./request')\nvar Transform = require('./transform/transform')\n\nvar Communication = YouboraObject.extend(\n  /** @lends Communication.prototype */\n  {\n    /**\n     * Youbora Communication implements an abstraction layer over API requests.\n     * Internally, Communication implements queues of {@link Request} objects.\n     * This queue can be blocked using {@link Transform}\n     *\n     * @constructs Communication\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {string} host The fastdata host address.\n     * @param {boolean} httpSecure True for https, false for http, undefined for //.\n     */\n    constructor: function () {\n      /** Array of {@link Transform}, only when the array is empty the request Queues will begin sending. */\n      this.transforms = []\n\n      /**\n       * Queue of {@link YBRequest}\n       * @private\n       */\n      this._requests = []\n    },\n\n    /**\n     * Enqueues the request provided.\n     *\n     * @param {YBRequest} request Request to be enqueued\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    sendRequest: function (request, callback) {\n      if (request) {\n        if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n        this._registerRequest(request)\n      }\n    },\n\n    /**\n     * Build a generic request to the given host.\n     *\n     * @param {string} host Host of the service called.\n     * @param {string} service A string with the service to be called. ie: '/data', '/joinTime'...\n     * @param {Object} [params] Object of key:value params.\n     * @param {function} [callback] The defined load callback to the Request\n     */\n    buildRequest: function (host, service, params, callback) {\n      params = params || {}\n      var request = new YBRequest(host, service, params)\n      if (typeof callback === 'function') request.on(YBRequest.Event.SUCCESS, callback)\n      this._registerRequest(request)\n    },\n\n    /**\n     * Adds a Transform to the queue. See {@link Transform}.\n     *\n     * @param {RequestTransform} transform\n     */\n    addTransform: function (transform) {\n      if (transform.parse && transform.isBlocking) {\n        this.transforms.push(transform)\n        transform.on(Transform.Event.DONE, this._processRequests.bind(this))\n      } else {\n        Log.warn(transform + ' is not a valid RequestTransform.')\n      }\n    },\n\n    /**\n     * Removes a {@link Transform}.\n     *\n     * @param {RequestTransform} transform Transform object to remove.\n     */\n    removeTransform: function (transform) {\n      var pos = this.transforms.indexOf(transform)\n      if (pos !== -1) {\n        this.transforms.splice(pos, 1)\n      } else {\n        Log.warn('Trying to remove unexisting Transform \\'' + transform + '\\'.')\n      }\n    },\n\n    /**\n     * Adds an {@link YBRequest} to the queue of requests.\n     *\n     * @private\n     * @param {YBRequest} request The Request to be queued.\n     */\n    _registerRequest: function (request) {\n      this._requests.push(request)\n      this._processRequests()\n    },\n\n    /**\n     * Execute pending requests in the queue. Returns rejected ones to the queue.\n     * @private\n     */\n    _processRequests: function () {\n      var workingQueue = this._requests\n      this._requests = []\n\n      var rejected = []\n      while (workingQueue.length) {\n        var request = workingQueue.shift()\n        if (this._transform(request)) {\n          request.send()\n        } else {\n          rejected.push(request)\n        }\n      }\n\n      while (rejected.length) {\n        this._requests.push(rejected.shift())\n      }\n    },\n\n    /**\n     * Pass the given request to each transform.\n     * @private\n     * @returns {bool} True if everything is right. False if some parser rejected it.\n     */\n    _transform: function (request) {\n      var ret = true\n      this.transforms.forEach(function (transform) {\n        if (transform.isBlocking(request)) {\n          ret = false\n          return // break foreach loop\n        } else {\n          transform.parse(request)\n        }\n      })\n      return ret\n    }\n  })\n\nmodule.exports = Communication\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = YouboraObject.extend(\n  /** @lends YBRequest.prototype */\n  {\n    /**\n     * YBYBRequest class will wrap XmlHttpRequest and extend its functionality, allowing youbora\n     * to manage queues, blockers and retries.\n     *\n     * @constructs YBRequest\n     * @extends Object\n     * @memberof youbora\n     *\n     * @param {string} host URL of the request. ie: nqs.nice264.com\n     * @param {string} [service] Name of the service. ie '/start'\n     * @param {Object} [params] Object of key:value params.\n     * @param {Object} [options] Object with custom options.\n     * @param {string} [options.method=\"GET\"] Specifies the method of the request. ie: \"GET\", \"HEAD\".\n     * @param {string} [options.requestHeaders] Object with options of requestHeaders.\n     * ie: { header: value }.\n     * @param {number} [options.retryAfter=5000] Time in ms before sending a failed request again.\n     * 0 to disable.\n     * @param {number} [options.maxRetries=3] Max number of retries. 0 to disable.\n     * @param {bool} [options.cache=false] If false, timestamp will be added to each request to\n     * prevent caching.\n     */\n    constructor: function (host, service, params, options) {\n      /** Instance of XmlHttpRequest (or the item returned by createXHR method). */\n      this.xhr = this.createXHR()\n\n      /** Host of the request */\n      this.host = host || ''\n\n      /** Service of the request */\n      this.service = service || ''\n\n      /** Object of params of the request */\n      this.params = params || {}\n\n      /** Options of the request */\n      this.options = Object.assign({\n        method: 'GET',\n        requestHeaders: {},\n        maxRetries: 3,\n        retryAfter: 5000,\n        cache: false\n      }, options)\n\n      /** Number of times this request has failed and retried. */\n      this.retries = 0\n\n      // Add timemark\n      if (!this.options.cache) {\n        this.setParam('timemark', new Date().getTime())\n      }\n    },\n\n    /**\n     * Creates XMLHttpRequest if it is available in the browser.\n     * If not, it tries to create an ActiveXObject XMLHTTP item.\n     * Override this function for custom environments.\n     *\n     * @return YBRequest handler.\n     */\n    createXHR: function () {\n      try {\n        if (XMLHttpRequest) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      } catch (err) {\n        Log.error(err)\n        return {}\n      }\n    },\n\n    /**\n     * Returns xhr object.\n     *\n     * @return {XmlHttpRequest} object.\n     */\n    getXHR: function () {\n      return this.xhr\n    },\n\n    /** Returns the complete formed url of the request url+service+params. */\n    getUrl: function () {\n      return this.host + this.service + this.getParamString()\n    },\n\n    /**\n     * Wraps this.getHXR.addEventListener.\n     * Accepts a callback that receives (this YBRequest, event)\n     */\n    on: function (event, callback) {\n      this.xhr.addEventListener(event, callback.bind(this, this))\n      return this\n    },\n\n    /** Wraps this.getHXR.removeEventListener */\n    off: function (event, callback) {\n      this.xhr.removeEventListener(event, callback)\n      return this\n    },\n\n    /**\n     * Returns the params of the request, stringified.\n     * ie: '?pluginVersion=5.1.0&systemCode=nicetv'.\n     * @return {string} Concatenated Params\n     */\n    getParamString: function () {\n      try {\n        var params = '?'\n        for (var key in this.params) {\n          var param = this.params[key]\n          if (param !== null && typeof param === 'object') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(JSON.stringify(param)) + '&'\n          } else if (param !== null && typeof param !== 'undefined' && param !== '') {\n            params += encodeURIComponent(key) + '=' + encodeURIComponent(param) + '&'\n          }\n        }\n        return params.slice(0, -1)\n      } catch (err) {\n        Log.error(err)\n        return ''\n      }\n    },\n\n    /**\n     * Returns the value of the given param, or undefined.\n     * @param {string} key Name of the param.\n     * @return {any}\n     */\n    getParam: function (key) {\n      return this.params[key]\n    },\n\n    /**\n     * Add or set a parameter for the request.\n     * ie: if you want to add 'username=user' use setParam('username', 'user').\n     * @param {string} key Name of the param.\n     * @param {string} value Name of the param.\n     * @return this\n     */\n    setParam: function (key, value) {\n      this.params[key] = value\n      return this\n    },\n\n    /**\n     * Sends the request.\n     *\n     * @return returns xhr.send()\n     */\n    send: function () {\n      try {\n        this.xhr.open(this.options.method, this.getUrl(), true)\n\n        // Add custom headers\n        if (this.options.requestHeaders) {\n          for (var key in this.options.requestHeaders) {\n            if (this.options.requestHeaders.hasOwnProperty(key)) {\n              this.xhr.setRequestHeader(key, this.options.requestHeaders[key])\n            }\n          }\n        }\n\n        // Add retries system\n        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {\n          var genericError = function () {\n            if (this.retries >= this.options.maxRetries) {\n              Log.error('Aborting failed request \"' + this.service + '\". Max retries reached.')\n            } else {\n              Log.warn('YBRequest \"' + this.service + '\" failed. Retry ' + (this.retries + 1) + ' of ' +\n                this.options.maxRetries + ' in ' + this.options.retryAfter + 'ms.')\n\n              setTimeout(function () {\n                this.retries += 1\n                this.send()\n              }.bind(this), this.options.retryAfter)\n            }\n          }\n          if (this.retries === 0) {\n            this.on(YBRequest.Event.ERROR, genericError.bind(this))\n          }\n        }\n\n        // Log XHR\n        if (Log.logLevel <= Log.Level.VERBOSE) {\n          Log.verbose('XHR Req: ' + this.getUrl())\n        }\n\n        // Register 'on every' listeners\n        for (var event in YBRequest._globalListeners) {\n          YBRequest._globalListeners[event].forEach(function (callback) {\n            this.on(event, callback)\n          }.bind(this))\n        }\n\n        // Send\n        return this.xhr.send()\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  },\n\n  /** @lends YBRequest */\n  {\n    /**\n     * List of events that could be fired from XHR\n     * @enum\n     */\n    Event: {\n      /** Request successful */\n      SUCCESS: 'load',\n      /** Request successful */\n      LOAD: 'load', // Native JS\n      /** Request returned error */\n      ERROR: 'error',\n      /** Request aborted */\n      ABORT: 'abort'\n    },\n\n    /** @private */\n    _globalListeners: {},\n\n    /**\n     * Adds a callback to every instance.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    onEvery: function (event, callback) {\n      YBRequest._globalListeners[event] = YBRequest._globalListeners[event] || []\n      YBRequest._globalListeners[event].push(callback)\n    },\n\n    /**\n     * Removes a global callback\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     */\n    offEvery: function (event, callback) {\n      if (YBRequest._globalListeners[event]) {\n        var index = YBRequest._globalListeners[event].indexOf(callback)\n        if (index !== -1) {\n          YBRequest._globalListeners[event].splice(index, 1)\n        }\n      }\n    }\n  })\n\nmodule.exports = YBRequest\n","var Emitter = require('../../emitter')\nvar Log = require('../../log')\nvar YBRequest = require('../request')\n\nvar CdnParser = Emitter.extend(\n  /** @lends CdnParser.prototype */\n  {\n    /**\n     * This class helps ResourceTransform parse CDN Nodes.\n     *\n     * @constructs CdnParser\n     * @extends Emitter\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      this._options = Object.assign({\n        cdnName: null,\n        parsers: [],\n        requestHeaders: {},\n        parseType: function () { return 0 }\n      }, options)\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(CdnParser.Event.DONE)\n    },\n\n    addParser: function (parser) {\n      this._options.parsers.push(parser)\n      return this\n    },\n\n    setCdnName: function (name) {\n      this._options.cdnName = name\n      return this\n    },\n\n    setRequestHeader: function (key, value) {\n      this._options.requestHeaders[key] = value\n      return this\n    },\n\n    setParseType: function (parser) {\n      this._options.parseType = parser\n      return this\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    /**\n     * Parses given headers to check for matches.\n     */\n    parse: function (url, responses) {\n      responses = responses || {}\n      var headerString = JSON.stringify(this._options.requestHeaders)\n      if (responses[headerString]) {\n        this._parseResponse(responses[headerString])\n      } else {\n        this._requestResponse(url, responses)\n      }\n    },\n\n    _requestResponse: function (url, responses) {\n      var headerString = JSON.stringify(this._options.requestHeaders)\n\n      var request = new YBRequest(url, null, null, {\n        method: 'HEAD',\n        maxRetries: 0,\n        requestHeaders: this._options.requestHeaders\n      })\n\n      request.on(YBRequest.Event.SUCCESS, function (resp) {\n        responses[headerString] = resp.getXHR().getAllResponseHeaders()\n        this._parseResponse(responses[headerString])\n      }.bind(this))\n\n      request.on(YBRequest.Event.ERROR, function (resp) {\n        this.done()\n      }.bind(this))\n\n      request.send()\n    },\n\n    _parseResponse: function (headers) {\n      this._options.parsers.forEach(function (parser) {\n        headers.split('\\n').forEach(function (line) {\n          var index = line.indexOf(':')\n          if (index !== -1) {\n            var key = line.slice(0, index)\n            if (key === parser.headerName) {\n              this._executeParser(parser, line.slice(index + 1))\n            }\n          }\n        }.bind(this))\n      }.bind(this))\n      this.done()\n    },\n\n    _executeParser: function (parser, value) {\n      try {\n        var matches = parser.regex.exec(value.trim())\n        if (matches !== null) {\n          if (this._options.cdnName) this._cdnName = this._options.cdnName\n          switch (parser.element) {\n            case 'host':\n              this._cdnNodeHost = matches[1]\n              break\n            case 'type':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'host+type':\n              this._cdnNodeHost = matches[1]\n              this._cdnNodeTypeString = matches[2]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              break\n            case 'type+host':\n              this._cdnNodeTypeString = matches[1]\n              this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString)\n              this._cdnNodeHost = matches[2]\n              break\n            case 'name':\n              this._cdnName = matches[1].toUpperCase()\n              break\n          }\n        }\n      } catch (err) {\n        Log.warn('CDN parsing for ' + this._options.cdnName +\n          ' could not parse header value ' + value)\n      }\n    }\n\n  },\n\n  /** @lends CdnParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this CdnParser is done processing. */\n      DONE: 'done'\n    },\n\n    // Static members\n    _cdns: {\n      Level3: {\n        cdnName: 'LEVEL3',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-WR-DIAG',\n          regex: /Host:(.+)\\sType:(.+)/\n        }],\n        requestHeaders: {\n          'X-WR-DIAG': 'host'\n        },\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n            case 'TCP_MEM_HIT':\n            case 'TCP_IMS_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Cloudfront: {\n        cdnName: 'CLOUDFRT',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Amz-Cf-Id',\n          regex: /(.+)/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /(\\S+)\\s.+/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'Hit':\n              return 1\n            case 'Miss':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Akamai: {\n        cdnName: 'AKAMAI',\n        parsers: [{\n          element: 'type+host',\n          headerName: 'X-Cache',\n          regex: /(.+)\\sfrom\\s.+\\(.+\\/(.+)\\).*/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'TCP_HIT':\n              return 1\n            case 'TCP_MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Highwinds: {\n        cdnName: 'HIGHNEGR',\n        parsers: [{\n          element: 'host+type',\n          headerName: 'X-HW',\n          regex: /.+,[0-9]+\\.(.+)\\.(.+)/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'c':\n            case 'x':\n              return 1\n            default:\n              return 2\n          }\n        }\n      },\n      Fastly: {\n        cdnName: 'FASTLY',\n        parsers: [{\n          element: 'host',\n          headerName: 'X-Served-By',\n          regex: /([^,\\s]+)$/\n        }, {\n          element: 'type',\n          headerName: 'X-Cache',\n          regex: /([^,\\s]+)$/\n        }],\n        parseType: function (type) {\n          switch (type) {\n            case 'HIT':\n              return 1\n            case 'MISS':\n              return 2\n            default:\n              return 0\n          }\n        }\n      },\n      Balancer: {\n        parsers: [{\n          element: 'name',\n          headerName: null,\n          regex: /(.+)/\n        }]\n      }\n    },\n\n    setBalancerHeaderName: function (name) {\n      CdnParser._cdns.Balancer.parsers[0].headerName = name\n    },\n\n    create: function (key) {\n      if (CdnParser._cdns[key]) {\n        return new CdnParser(CdnParser._cdns[key])\n      } else {\n        Log.warn('Tried to create an unexisting CdnParser named ' + key)\n      }\n    },\n\n    add: function (key, parser) {\n      CdnParser._cdns[key] = parser\n    }\n  }\n)\n\nmodule.exports = CdnParser\n","var Transform = require('./transform')\n\n/**\n * This class manages Flow restrictions. All requests shall be blocked until /init or /start are\n * received.\n *\n * @constructs\n * @extends Transform\n * @memberof youbora\n *\n * @param {Plugin} plugin Instance of {@link Plugin}\n */\nvar FlowTransform = Transform.extend(\n  /** @lends FlowTransform.prototype */\n  {\n    _services: ['/init', '/start'],\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      if (this._isBusy && request != null && this._services.indexOf(request.service) !== -1) {\n        this.done()\n      }\n\n      return Transform.prototype.isBlocking.apply(this, arguments)\n    }\n  }\n)\n\nmodule.exports = FlowTransform\n","var YBRequest = require('../request')\nvar Emitter = require('../../emitter')\nvar Log = require('../../log')\n\nvar HlsParser = Emitter.extend(\n  /** @lends HlsParser.prototype */\n  {\n    /**\n     * Extend this class to implement your own ResourceEmitter parser task.\n     *\n     * @constructs HlsParser\n     * @extends Emitter\n     * @memberof youbora\n     * @abstract\n     */\n    constructor: function () {\n      this._realResource = null\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this.emit(HlsParser.Event.DONE)\n    },\n\n    /**\n     *\n     *\n     * @param {string} resource Either the resource url or the manifest body.\n     * @param {string} parentResource Parent resource in case relative paths are sent.\n     */\n    parse: function (resource, parentResource) {\n      parentResource = parentResource || ''\n\n      try {\n        var matches = /((\\S*?)(\\.m3u8|\\.m3u|\\.ts|\\.mp4)(\\?\\S*|\\n|\\r|$))/i.exec(resource)\n      } catch (err) {\n        Log.warn('Parse HLS Regex failed', err)\n        this.done()\n      }\n\n      if (matches !== null) { // get first line ending in .m3u8, .m3u, .mp4 or .ts\n        var res = matches[1].trim()\n\n        var index = parentResource.lastIndexOf('/')\n        if (res.indexOf('http') !== 0 && index !== -1) {\n          // If does not start with http, add parentResource relative route.\n          res = parentResource.slice(0, index) + '/' + res\n        }\n\n        if (matches[3] === '.m3u8' || matches[3] === '.m3u') { // It is m3u8 or m3u...\n          var request = new YBRequest(res, null, null, { cache: true })\n\n          request.on(YBRequest.Event.SUCCESS, function (resp) {\n            this.parse(resp.getXHR().responseText, matches[2])\n          }.bind(this))\n\n          request.on(YBRequest.Event.ERROR, function (resp) {\n            this.done()\n          }.bind(this))\n\n          request.send()\n        } else { // It is mp4 or ts...\n          this._realResource = res\n          this.done()\n        }\n      } else {\n        this.done()\n      }\n    },\n\n    getResource: function () {\n      return this._realResource\n    }\n  },\n\n  /** @lends HlsParser */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this HlsParser is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = HlsParser\n","var Transform = require('./transform')\n\nvar Nqs6Transform = Transform.extend(\n  /** @lends Nqs6Transform.prototype */\n  {\n\n    /**\n     * This class ensures NQS6 retrocompatibility\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     */\n    constructor: function () {\n      this.done()\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      this._cloneParam(request, 'accountCode', 'system')\n      this._cloneParam(request, 'transactionCode', 'transcode')\n      this._cloneParam(request, 'username', 'user')\n      this._cloneParam(request, 'mediaResource', 'resource')\n      this._cloneParam(request, 'errorMsg', 'msg')\n\n      if (request.service !== '/joinTime') {\n        this._cloneParam(request, 'playhead', 'time')\n      }\n\n      switch (request.service) {\n        case '/start':\n          this._cloneParam(request, 'mediaDuration', 'duration')\n          break\n\n        case '/joinTime':\n          this._cloneParam(request, 'joinDuration', 'time')\n          this._cloneParam(request, 'playhead', 'eventTime')\n          break\n\n        case '/seek':\n          this._cloneParam(request, 'seekDuration', 'duration')\n          break\n\n        case '/bufferUnderrun':\n          this._cloneParam(request, 'bufferDuration', 'duration')\n          break\n\n        case '/ping':\n          for (var key in request.params.entities) {\n            request.params.entityType = key\n            request.params.entityValue = request.params.entities[key]\n            break\n          }\n          break\n      }\n    },\n\n    _cloneParam: function (request, from, to) {\n      request.params[to] = request.params[from]\n    }\n  })\n\nmodule.exports = Nqs6Transform\n","var Transform = require('./transform')\nvar HlsParser = require('./hlsparser')\nvar CdnParser = require('./cdnparser')\nvar Log = require('../../log')\n\nvar ResourceTransform = Transform.extend(\n  /** @lends ResourceTransform.prototype */\n  {\n    /**\n     * This class parses resource to fetch transportstreams, CDNs and Node plugin.\n     *\n     * @constructs ResourceTransform\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      ResourceTransform.__super__.constructor.apply(this, arguments)\n\n      this._plugin = plugin\n\n      this._realResource = null\n      this._initResource = null\n      this._cdnName = null\n      this._cdnNodeHost = null\n      this._cdnNodeTypeString = null\n      this._cdnNodeType = null\n\n      this._isBusy = false\n    },\n\n    getResource: function () {\n      return this._realResource || this._initResource\n    },\n\n    getCdnName: function () {\n      return this._cdnName\n    },\n\n    getNodeHost: function () {\n      return this._cdnNodeHost\n    },\n\n    getNodeTypeString: function () {\n      return this._cdnNodeTypeString\n    },\n\n    getNodeType: function () {\n      return this._cdnNodeType\n    },\n\n    init: function (resource) {\n      if (!this._isBusy) {\n        this._isBusy = true\n\n        this._initResource = resource\n\n        CdnParser.setBalancerHeaderName(this._cdnNameHeader)\n        this._hlsEnabled = this._plugin.isParseHls()\n        this._cdnEnabled = this._plugin.isParseCdnNode()\n        this._cdnList = this._plugin.getParseCdnNodeList().slice() // clone\n        this._cdnNameHeader = this._plugin.getParseCdnNodeNameHeader()\n\n        this._setTimeout()\n\n        if (this._hlsEnabled) {\n          this._parseHLS()\n        } else if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }\n    },\n\n    _setTimeout: function () {\n      // Abort operation after 3s\n      this._parseTimeout = setTimeout(function () {\n        if (this._isBusy) {\n          this.done()\n          Log.warn(\n            'ResourceTransform has exceded the maximum execution time (3s) and will be aborted.'\n          )\n        }\n      }.bind(this), 3000)\n    },\n\n    _parseHLS: function () {\n      var hlsTransform = new HlsParser()\n      hlsTransform.on(HlsParser.Event.DONE, function () {\n        this._realResource = this._hlsTransform.getResource()\n        if (this._cdnEnabled) {\n          this._parseCDN()\n        } else {\n          this.done()\n        }\n      }.bind(this))\n      hlsTransform.parse(this._initResource)\n    },\n\n    _parseCDN: function () {\n      if (this._cdnList.length > 0) {\n        var cdn = this._cdnList.pop()\n\n        if (this.getNodeHost()) this.done()\n\n        var cdnParser = CdnParser.create(cdn)\n\n        if (cdnParser) {\n          cdnParser.on(CdnParser.Event.DONE, function () {\n            this._cdnName = cdnParser.getCdnName()\n            this._cdnNodeHost = cdnParser.getNodeHost()\n            this._cdnNodeTypeString = cdnParser.getNodeTypeString()\n            this._cdnNodeType = cdnParser.getNodeType()\n\n            if (this.getNodeHost()) this.done()\n          }.bind(this))\n          cdnParser.parse(this.getResource())\n        } else {\n          this._parseCDN()\n        }\n      }\n    },\n\n    /**\n     * Transform requests\n     * @param {YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      if (request.service === '/start') {\n        var lastSent = this._plugin.requestBuilder.lastSent\n        lastSent.mediaResource = request.params.mediaResource = this.getResource()\n\n        if (this._cdnEnabled) {\n          lastSent.cdn = request.params.cdn = request.params.cdn || this.getCdnName()\n          lastSent.nodeHost = request.params.nodeHost = this.getNodeHost()\n          lastSent.nodeType = request.params.nodeType = this.getNodeType()\n          lastSent.nodeTypeString = request.params.nodeTypeString = this.getNodeTypeString()\n          lastSent.nodeTypeString = request.params.nodeTypeString\n        }\n      }\n    }\n  })\n\nmodule.exports = ResourceTransform\n","var Emitter = require('../../emitter')\n\nvar Transform = Emitter.extend(\n  /** @lends Transform.prototype */\n\n  /**\n   * Transform classes among youbora helps the library parse and work with data.\n   * ResourceTransform, ViewTransform... all extend from this class.\n   *\n   * @constructs Transform\n   * @extends Emitter\n   * @memberof youbora\n   * @abstract\n   */\n  {\n    constructor: function () {\n      this._isBusy = true\n    },\n\n    /**\n     * Override this method to transform info.\n     *\n     * @param {YBRequest} request Request to transform.\n     */\n    parse: function (request) { },\n\n    /**\n     * Returns if transform is blocking.\n     *\n     * @param {YBRequest} request Request to transform.\n     * @return {bool} True if queue shall be blocked.\n     */\n    isBlocking: function (request) {\n      return this._isBusy\n    },\n\n    /**\n     * Emits DONE event\n     */\n    done: function () {\n      this._isBusy = false\n      this.emit(Transform.Event.DONE)\n    }\n  },\n\n  /** @lends Transform */\n  {\n    // Static members\n\n    /**\n     * List of events that could be fired from this class.\n     * @enum\n     */\n    Event: {\n      /** Notifies that this Transform is done processing. */\n      DONE: 'done'\n    }\n  }\n)\n\nmodule.exports = Transform\n","var YBRequest = require('../request')\nvar Transform = require('./transform')\nvar Log = require('../../log')\nvar Util = require('../../util')\n\nvar ViewTransform = Transform.extend(\n  /** @lends ViewTransform.prototype */\n  {\n    /**\n     * This class manages Fastdata service and view index.\n     *\n     * @constructs\n     * @extends Transform\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin Instance of {@link Plugin}\n     */\n    constructor: function (plugin) {\n      Transform.prototype.constructor.apply(this, arguments)\n\n      /** /data response */\n      this.response = {}\n\n      this._viewIndex = -1\n\n      var service = '/data'\n      var params = {\n        apiVersion: 'v6,v7',\n        outputformat: 'jsonp'\n      }\n\n      params = plugin.requestBuilder.buildParams(params, service)\n      if (params !== null) {\n        Log.notice(service + ' ' + params.system)\n        if (params.system === 'nicetest') {\n          Log.error(\n            'No accountCode has been set. Please set your accountCode inside plugin\\'s options.'\n          )\n        }\n\n        var request = new YBRequest(plugin.getHost(), service, params)\n        request\n          .on(YBRequest.Event.SUCCESS, this._receiveData.bind(this))\n          .on(YBRequest.Event.ERROR, this._failedData.bind(this))\n          .send()\n      }\n    },\n\n    _receiveData: function (req, e) {\n      try {\n        var msg = req.getXHR().response\n        var resp = JSON.parse(msg.slice(msg.indexOf('(') + 1, msg.lastIndexOf(')')))\n\n        this.response.host = Util.addProtocol(resp.q.h)\n        this.response.code = resp.q.c\n        this.response.pingTime = resp.q.pt\n\n        this.done()\n      } catch (err) {\n        Log.error('Fastdata response is invalid.')\n      }\n    },\n\n    _failedData: function (req, e) {\n      Log.error('Fastdata request failed.')\n    },\n\n    /**\n     * Call this method when a new content begins, it will increment the view index (_0, _1, _2...)\n     * @return {string} new viewcode\n     */\n    nextView: function () {\n      this._viewIndex += 1\n      return this.getViewCode()\n    },\n\n    /**\n     * Returns current viewcode\n     * @return {string} viewcode\n     */\n    getViewCode: function () {\n      return this.response.code + '_' + this._viewIndex\n    },\n\n    /**\n     * Transform requests\n     * @param {youbora.comm.YBRequest} request YBRequest to transform.\n     */\n    parse: function (request) {\n      request.host = request.host || this.response.host\n      request.params.code = request.params.code || this.getViewCode()\n      if (request.service === '/ping' || request.service === '/start') {\n        request.params.pingTime = request.params.pingTime || this.response.pingTime\n      }\n    }\n  })\n\nmodule.exports = ViewTransform\n","var YouboraObject = require('./object')\n\n/**\n * This class extends YouboraObject, adding event emitting/listening functionalities.\n * @constructs Emitter\n * @extends YouboraObject\n * @memberof youbora\n */\nvar Emitter = YouboraObject.extend(\n  /** @lends Emitter.prototype */\n  {\n    /**\n     * Sets a listener to a given event. Use {@link emit} to trigger those events.\n     * Pass '*' to listen ALL events.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event. Receives event and data.\n     * @return this\n     */\n    on: function (event, callback) {\n      this._listeners = this._listeners || {}\n      if (typeof callback === 'function') {\n        this._listeners[event] = this._listeners[event] || []\n        this._listeners[event].push(callback)\n        return this\n      }\n    },\n\n    /**\n     * Removes given callback from the listeners of this object.\n     * @param {string} event Name of the event.\n     * @param {function} callback Callback of the event.\n     * @return this\n     */\n    off: function (event, callback) {\n      this._listeners = this._listeners || {}\n\n      if (this._listeners[event]) {\n        var index = this._listeners[event].indexOf(callback)\n        if (index !== -1) {\n          this._listeners[event].splice(index, 1)\n        }\n      }\n      return this\n    },\n\n    /**\n     * Emits given event, triggering all the associated callbacks.\n     * @param {string} event Name of the event.\n     * @param {object} [data] Custom data to be sent to the callbacks.\n     * @return this\n     */\n    emit: function (event, data) {\n      this._listeners = this._listeners || {}\n      data = data || {}\n\n      if (Array.isArray(this._listeners[event])) {\n        this._listeners[event].forEach(this._eachCallback.bind(this, event, data))\n      }\n      if (Array.isArray(this._listeners['*'])) {\n        this._listeners['*'].forEach(this._eachCallback.bind(this, event, data))\n      }\n\n      return this\n    },\n\n    _eachCallback: function (event, data, callback) {\n      if (typeof callback === 'function') {\n        callback({ type: event, data: data, target: this })\n      }\n    }\n  }\n)\n\nmodule.exports = Emitter\n","var Emitter = require('./emitter')\n\n/**\n * Static Log class for YouboraLib\n *\n * @class\n * @static\n * @memberof youbora\n */\nvar Log = {\n\n  _emitter: new Emitter(),\n\n  /** Exposes {@link youbora.EvenfulObject.on} */\n  on: function () { Log._emitter.on.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.off} */\n  off: function () { Log._emitter.off.apply(Log._emitter, arguments) },\n  /** Exposes {@link youbora.EvenfulObject.emit} */\n  emit: function () { Log._emitter.emit.apply(Log._emitter, arguments) },\n\n  /**\n   * Enum for log levels\n   * @enum\n   */\n  Level: {\n    /** No console outputs */\n    SILENT: 6,\n    /** Console will show errors */\n    ERROR: 5,\n    /** Console will show warnings */\n    WARNING: 4,\n    /** Console will show notices (ie: life-cyrcle logs) */\n    NOTICE: 3,\n    /** Console will show debug messages (ie: player events) */\n    DEBUG: 2,\n    /** Console will show verbose messages (ie: Http Requests) */\n    VERBOSE: 1\n  },\n\n  /**\n   * Enum for events\n   * @enum\n   */\n  Event: {\n    /** Sent each time a messaged is issued, even if log level does not handle it. */\n    LOG: 'log'\n  },\n\n  /**\n   * Only logs of this imporance or higher will be shown.\n   * @default youbora.Log.Levels.ERROR\n   * @see {@link youbora.Log.Levels}\n   */\n  logLevel: 5,\n\n  /**\n   * If true, console logs will always be outputed without colors (for debbugin in devices).\n   * @default false\n   */\n  plainLogs: false,\n\n  /**\n   * Returns a console message\n   *\n   * @private\n   * @param {(string|error|array)} msg Message string, error object or array of messages.\n   * @param {Log.Levels} [level=Log.Levels.NOTICE] Defines the level of the error sent.\n   * Only errors with higher or equal level than Log.logLevel will be displayed.\n   * @param {string} [color=darkcyan] Color of the header\n   * @see {@link Youbora.Log.debugLevel}\n   */\n  report: function (msg, level, color) {\n    if (console && console.log) {\n      level = level || Log.Level.NOTICE\n      color = color || 'darkcyan'\n\n      var letters = {\n        5: 'e', // Error\n        4: 'w', // Warning\n        3: 'n', // Notice\n        2: 'd', // Debug\n        1: 'v' // Verbose\n      }\n\n      var letter = letters[level]\n      var prefix = '[Youbora]' + Log._getCurrentTime() + ' ' + letter + ':'\n\n      this.emit('log', { level: level, msg: msg, prefix: prefix })\n\n      // Show messages in actual console if level is enought\n      if (Log.logLevel <= level) {\n        if (Log.plainLogs || document.documentMode) { // document.documentMode exits only in IE\n          // Plain log for IE and devices\n          Log._plainReport(msg, prefix)\n        } else {\n          // choose log method\n          var logMethod\n          if (level === Log.Level.ERROR && console.error) {\n            logMethod = console.error\n          } else if (level === Log.Level.WARNING && console.warn) {\n            logMethod = console.warn\n          } else if (level === Log.Level.DEBUG && console.debug) {\n            logMethod = console.debug\n          } else {\n            logMethod = console.log\n          }\n\n          // print message\n          prefix = '%c' + prefix\n          if (msg instanceof Array) {\n            msg.splice(0, 0, prefix, 'color: ' + color)\n            logMethod.apply(console, msg)\n          } else {\n            logMethod.call(console, prefix, 'color: ' + color, msg)\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the current time in format hh:mm:ss.mmm (with trailing 0s)\n   * @private\n   * @return {string} Current time.\n   */\n  _getCurrentTime: function () {\n    var d = new Date()\n    var hh = ('0' + d.getDate()).slice(-2)\n    var mm = ('0' + d.getMinutes()).slice(-2)\n    var ss = ('0' + d.getSeconds()).slice(-2)\n    var mmm = ('00' + d.getMilliseconds()).slice(-3)\n    return '[' + hh + ':' + mm + ':' + ss + '.' + mmm + ']'\n  },\n\n  /**\n   * Returns a console message without style\n   *\n   * @private\n   * @param {(string|object|array)} msg Message string, object or array of messages.\n   * @param {string} prefix Prefix of the message.\n   */\n  _plainReport: function (msg, prefix) {\n    if (msg instanceof Array) {\n      for (var m in msg) {\n        Log._plainReport(msg[m], prefix)\n      }\n    } else {\n      if (typeof msg === 'string') {\n        console.log(prefix + ' ' + msg)\n      } else {\n        console.log(prefix + ' <next line>')\n        console.log(msg)\n      }\n    }\n  },\n\n  /**\n   * Sends an error (level 1) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  error: function () {\n    Log.report([].slice.call(arguments), Log.Level.ERROR, 'darkred')\n  },\n\n  /**\n   * Sends a warning (level 2) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  warn: function () {\n    Log.report([].slice.call(arguments), Log.Level.WARNING, 'darkorange')\n  },\n\n  /**\n   * Sends a notice (level 3) console log.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  notice: function () {\n    Log.report([].slice.call(arguments), Log.Level.NOTICE, 'darkgreen')\n  },\n\n  /**\n   * Sends a debug message (level 4) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  debug: function () {\n    Log.report([].slice.call(arguments), Log.Level.DEBUG, 'indigo')\n  },\n\n  /**\n   * Sends a verbose message (level 5) to console.\n   * Supports unlimited arguments: (\"this\", \"is\", \"a\", \"message\")\n   * @memberof $YB\n   * @see {@link $YB.report}\n   */\n  verbose: function () {\n    Log.report([].slice.call(arguments), Log.Level.VERBOSE, 'navy')\n  },\n\n  /**\n   * This function is automatically executed at youboralib's init.\n   * Will search inside window.location.search for attribute 'youbora-debug=X'.\n   * X can have one of these values, that will modify LogLevel.\n   * 6: SILENT,\n   * 5: ERROR,\n   * 4: WARNING,\n   * 3: NOTICE,\n   * 2: DEBUG,\n   * 1: VERBOSE\n   *\n   * If youbora-console=plain is present, plainLogs will be set to true.\n   */\n  loadLevelFromUrl: function () {\n    if (typeof window !== 'undefined' && window.location && window.location.search) {\n      var m = /\\?.*&*youbora-debug=(.+)/i.exec(window.location.search)\n      if (m !== null) {\n        Log.logLevel = m[1]\n      }\n\n      var m2 = /\\?.*&*youbora-debug=plain/i.exec(window.location.search)\n      if (m2 !== null) {\n        Log.plainLogs = true\n      }\n    }\n  }\n}\n\nmodule.exports = Log\n","var YouboraObject = function () {}\n\nYouboraObject.prototype = {\n  /**\n   * A base class that other Classes should inherit from.\n   * It has a no-op constructor intended to be overridden by classes that extend from this.\n   *\n   * @constructs YouboraObject\n   * @abstract\n   * @memberof youbora\n   */\n  constructor: function () {}\n}\n\n/**\n * This static method allows the extension of the current class, emulating 1-level inheritance.\n * Also add a helper __super__ object poiting to the parent prototypes methods\n * @see https://github.com/SBoudrias/class-extend\n * @example\n * var A = YouboraObject.extend({ a: 1, b: 1, c: { d: 0 } });\n * var a = new A(); // { a: 1, b: 1, c: { d: 0 } }\n *\n * var B = A.extend({ b: 2, c: { e: 3 } });\n * var b = new B(); // { a: 1, b: 2, c: { e: 3 } }\n *\n * @param  {Object} protoProps  Prototype properties (available on the instances)\n * @param  {Object} staticProps Static properties (available on the contructor)\n * @return {Object}             New sub class\n */\nYouboraObject.extend = function (protoProps, staticProps) {\n  var parent = this\n  var NewClass\n\n  // The constructor function for the new subclass is either defined by you\n  // (the \"constructor\" property in your `extend` definition), or defaulted\n  // by us to simply call the parent's constructor.\n  if (protoProps && Object.prototype.hasOwnProperty.call(protoProps, 'constructor')) {\n    NewClass = protoProps.constructor\n  } else {\n    NewClass = function () { return parent.apply(this, arguments) }\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  Object.assign(NewClass, parent, staticProps)\n\n  // Set the prototype chain to inherit from `parent`\n  NewClass.prototype = Object.create(parent.prototype, {\n    constructor: {\n      value: NewClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  // Add prototype properties (instance properties) to the subclass,\n  // if supplied.\n  if (protoProps) Object.assign(NewClass.prototype, protoProps)\n\n  // Set a convenience property in case the parent's prototype is needed\n  // later.\n  NewClass.__super__ = parent.prototype\n\n  return NewClass\n}\n\nmodule.exports = YouboraObject\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar Options = YouboraObject.extend(\n  /** @lends Options.prototype */\n  {\n    /**\n     * This Class store youbora configuration settings.\n     * @constructs Options\n     * @param {Object|Options} [options] A literal containing values.\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (options) {\n      /** @prop {boolean} [enabled=true] If false, the plugin won't send NQS requests. */\n      this['enabled'] = true\n\n      /**\n       * @prop {boolean} [httpSecure=null]\n       * Define the security of NQS calls.\n       * If true it will use 'https://',\n       * if false it will use 'http://',\n       * if null it will use '//'.\n       */\n      this['httpSecure'] = null\n\n      /** @prop {string} [host='nqs.nice264.com'] Host of the Fastdata service. */\n      this['host'] = 'nqs.nice264.com'\n\n      /**\n       * @prop {string} [accountCode='nicetest']\n       * NicePeopleAtWork account code that indicates the customer account.\n       */\n      this['accountCode'] = 'nicetest'\n\n      /** @prop {string} [username] User ID value inside your system. */\n      this['username'] = null\n\n      // PARSERS\n\n      /**\n       * @prop {boolean} [parse.Hls=false]\n       * If true the plugin will parse HLS files to use the first .ts file found as resource.\n       * It might slow performance down.\n       */\n      this['parse.Hls'] = false\n\n      /**\n       * @prop {string} [parse.CdnNameHeader]\n       * If defined, resource parse will try to fetch the CDN code from the custom header defined\n       * by this property. ie: 'x-cdn-forward'\n       */\n      this['parse.CdnNameHeader'] = 'x-cdn-forward'\n\n      /**\n       * @prop {boolean} [parse.CdnNode.enabled=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CdnNode'] = false\n\n      /**\n       * @prop {array<string>} [parse.CdnNode.list=false]\n       * If true the plugin will query the CDN to retrieve the node name.\n       * It might slow performance down.\n       */\n      this['parse.CdnNode.list'] = ['Akamai', 'Cloudfront', 'Level3', 'Fastly', 'Highwinds']\n\n      // NETWORK\n\n      /** @prop {string} [network.ip] IP of the viewer/user. ie= '100.100.100.100'. */\n      this['network.ip'] = null\n\n      /** @prop {string} [network.isp] Name of the internet service provider of the viewer/user. */\n      this['network.isp'] = null\n\n      /**\n       * @prop {string} [network.connectionType]\n       * See a list of codes in {@link http://mapi.youbora.com:8081/connectionTypes}\n       */\n      this['network.connectionType'] = null\n\n      // DEVICE\n\n      /**\n       * @prop {string} [device.code]\n       * Youbora's device code. If specified it will rewrite info gotten from user agent.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/devices}\n       */\n      this['device.code'] = null\n\n      // CONTENT\n\n      /** @prop {string} [content.transactionCode] Custom unique code to identify the view. */\n      this['content.transactionCode'] = null\n\n      /** @prop {string} [content.resource] URL/path of the current media resource. */\n      this['content.resource'] = null\n\n      /** @prop {boolean} [content.isLive] True if the content is live false if VOD. */\n      this['content.isLive'] = null\n\n      /** @prop {string} [content.title] Title of the media. */\n      this['content.title'] = null\n\n      /** @prop {string} [content.title2] Secondary title of the media. */\n      this['content.title2'] = null\n\n      /** @prop {number} [content.duration] Duration of the media. */\n      this['content.duration'] = null\n\n      /** @prop {int} {content.fps] Frames per second of the content in the current moment. */\n      this['content.fps'] = null\n\n      /** @prop {int} {content.bitrate] Bitrate of the content in bits per second. */\n      this['content.bitrate'] = null\n\n      /** @prop {int} {content.throughput] Throughput of the client bandwith in bits per second. */\n      this['content.throughput'] = null\n\n      /** @prop {string} {content.rendition] Name of the current rendition of the content. */\n      this['content.rendition'] = null\n\n      /**\n       * @prop {string} [content.cdn]\n       * Codename of the CDN where the content is streaming from.\n       * See a list of codes in {@link http://mapi.youbora.com:8081/cdns}\n       * */\n      this['content.cdn'] = null\n\n      /**\n       * @prop {object} [content.metadata={}]\n       * Item containing mixed extra information about the content like: director, parental rating,\n       * device info or the audio channels.This object may store any serializable key:value info.\n       */\n      this['content.metadata'] = {}\n\n      // ADS\n\n      /**\n       * @prop {object} [ad.metadata={}]\n       * Item containing mixed extra information about ads like: campaign name or request url.\n       * This object may store any serializable key:value info.\n       */\n      this['ad.metadata'] = {}\n\n      // EXTRAPARAMS\n\n      /** @prop {string} [extraparam.1] Custom parameter 1. */\n      this['extraparam.1'] = null\n\n      /** @prop {string} [extraparam.2] Custom parameter 2. */\n      this['extraparam.2'] = null\n\n      /** @prop {string} [extraparam.3] Custom parameter 3. */\n      this['extraparam.3'] = null\n\n      /** @prop {string} [extraparam.4] Custom parameter 4. */\n      this['extraparam.4'] = null\n\n      /** @prop {string} [extraparam.5] Custom parameter 5. */\n      this['extraparam.5'] = null\n\n      /** @prop {string} [extraparam.6] Custom parameter 6. */\n      this['extraparam.6'] = null\n\n      /** @prop {string} [extraparam.7] Custom parameter 7. */\n      this['extraparam.7'] = null\n\n      /** @prop {string} [extraparam.8] Custom parameter 8. */\n      this['extraparam.8'] = null\n\n      /** @prop {string} [extraparam.9] Custom parameter 9. */\n      this['extraparam.9'] = null\n\n      /** @prop {string} [extraparam.10] Custom parameter 10. */\n      this['extraparam.10'] = null\n\n      this.setOptions(options)\n    },\n\n    /**\n     * Recursively sets the properties present in the params object.\n     * ie: this.username = params.username.\n     *\n     * @param {Object} options A literal or another Data containing values.\n     * @param {Object} [base=this] Start point for recursion.\n     */\n    setOptions: function (options, base) {\n      try {\n        base = base || this\n        if (typeof options !== 'undefined') {\n          for (var key in options) {\n            if (typeof base[key] === 'object' && base[key] !== null) {\n              this.setOptions(options[key], base[key])\n            } else {\n              base[key] = options[key]\n            }\n          }\n        }\n      } catch (err) {\n        Log.error(err)\n      }\n    }\n  }\n)\n\nmodule.exports = Options\n","var Emitter = require('../emitter')\nvar Timer = require('../timer')\nvar Log = require('../log')\nvar Util = require('../util')\nvar Chrono = require('../chrono')\nvar version = require('../version')\n\nvar Communication = require('../comm/communication')\nvar FlowTransform = require('../comm/transform/flow')\nvar ViewTransform = require('../comm/transform/view')\nvar Nqs6Transform = require('../comm/transform/nqs6')\nvar ResourceTransform = require('../comm/transform/resource')\n\nvar Options = require('./options')\nvar RequestBuilder = require('./requestbuilder')\n\nvar Adapter = require('../adapter/adapter')\n\nvar Plugin = Emitter.extend(\n  /** @lends Plugin.prototype */\n  {\n    /**\n     * This is the main class of video analytics. You may want one instance for each video you want\n     * to track. Will need adapters for both content and ads, manage options and general flow.\n     *\n     * @constructs Plugin\n     * @extends Emitter\n     * @memberof youbora\n     *\n     * @param {Options} [options] An object complying with {@link Options} constructor.\n     * @param {Adapter} [adapter] If an adapter is provided, setAdapter will be immediately called.\n     */\n    constructor: function (options, adapter) {\n      /** This flags indicates that /init has been called. */\n      this.isInitiated = false\n\n      /** This flags indicate that the content is preloading. */\n      this.isPreloading = false\n\n      /** Chrono for preload times. */\n      this.preloadChrono = new Chrono()\n\n      /** Chrono for init to join time. */\n      this.initChrono = new Chrono()\n\n      this.options = new Options(options)\n      this._adapter = null\n      this._ping = this._ping = new Timer(this._sendPing.bind(this), 5000)\n\n      this.requestBuilder = new RequestBuilder(this)\n\n      this.viewTransform = new ViewTransform(this)\n      this.viewTransform.on(ViewTransform.Event.DONE, function (e) { // Data response\n        this._ping.interval = e.target.response.pingTime * 1000\n      }.bind(this))\n\n      this.resourceTransform = new ResourceTransform(this)\n\n      if (adapter) this.setAdapter(adapter)\n    },\n\n    /**\n     * _reset all variables and stop all timers\n     */\n    _reset: function () {\n      this._stopPings()\n      this.resourceTransform = new ResourceTransform(this)\n\n      this.isInitiated = false\n      this.isPreloading = false\n      this.initChrono.reset()\n      this.preloadChrono.reset()\n    },\n\n    // ------------------------------------- Options ----------------------------------------------\n\n    /**\n     * Modifies current options. See {@link Options.setOptions}.\n     *\n     * @param {any} options\n     */\n    setOptions: function (options) {\n      this.options.setOptions(options)\n    },\n\n    // ------------------------------------- Adapters ----------------------------------------------\n\n    /**\n     * Sets an adapter for video content.\n     *\n     * @param {Adapter} adapter\n     */\n    setAdapter: function (adapter) {\n      this.removeAdapter()\n\n      this._adapter = adapter\n\n      // Register listeners\n      adapter.on(Adapter.Event.START, this._startListener.bind(this))\n      adapter.on(Adapter.Event.JOIN, this._joinListener.bind(this))\n      adapter.on(Adapter.Event.PAUSE, this._pauseListener.bind(this))\n      adapter.on(Adapter.Event.RESUME, this._resumeListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_BEGIN, this._seekBeginListener.bind(this))\n      adapter.on(Adapter.Event.SEEK_END, this._seekEndListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener.bind(this))\n      adapter.on(Adapter.Event.BUFFER_END, this._bufferEndListener.bind(this))\n      adapter.on(Adapter.Event.ERROR, this._errorListener.bind(this))\n      adapter.on(Adapter.Event.STOP, this._stopListener.bind(this))\n    },\n\n    /**\n     * Returns current adapter or null.\n     *\n     * @returns {Adapter}\n     */\n    getAdapter: function () {\n      return this._adapter\n    },\n\n    /** Removes the current adapter. Fires stop if needed. Calls adapter.dispose() */\n    removeAdapter: function () {\n      if (this._adapter) {\n        this._adapter.dispose()\n\n        this._adapter.off(Adapter.Event.START, this._startListener)\n        this._adapter.off(Adapter.Event.JOIN, this._joinListener)\n        this._adapter.off(Adapter.Event.PAUSE, this._pauseListener)\n        this._adapter.off(Adapter.Event.RESUME, this._resumeListener)\n        this._adapter.off(Adapter.Event.SEEK_BEGIN, this._seekBeginListener)\n        this._adapter.off(Adapter.Event.SEEK_END, this._seekEndListener)\n        this._adapter.off(Adapter.Event.BUFFER_BEGIN, this._bufferBeginListener)\n        this._adapter.off(Adapter.Event.BUFFER_END, this._bufferEndListener)\n        this._adapter.off(Adapter.Event.ERROR, this._errorListener)\n        this._adapter.off(Adapter.Event.STOP, this._stopListener)\n\n        this._adapter = null\n      }\n    },\n\n    /**\n     * Sets an adapter for ads.\n     *\n     * @param {Adapter} adsAdapter\n     */\n    setAdsAdapter: function (adsAdapter) {\n      this.removeAdsAdapter()\n\n      this._adsAdapter = adsAdapter\n\n      adsAdapter.on(Adapter.Event.START, this._adStartListener.bind(this))\n      adsAdapter.on(Adapter.Event.JOIN, this._adJoinListener.bind(this))\n      adsAdapter.on(Adapter.Event.PAUSE, this._adPauseListener.bind(this))\n      adsAdapter.on(Adapter.Event.RESUME, this._adResumeListener.bind(this))\n      adsAdapter.on(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener.bind(this))\n      adsAdapter.on(Adapter.Event.BUFFER_END, this._adBufferEndListener.bind(this))\n      adsAdapter.on(Adapter.Event.STOP, this._adStopListener.bind(this))\n    },\n\n    /**\n     * Returns current adapter or null.\n     *\n     * @returns {Adapter}\n     */\n    getAdsAdapter: function () {\n      return this._adsAdapter\n    },\n\n    /** Removes the current adapter. Fires stop if needed. Calls adapter.dispose() */\n    removeAdsAdapter: function () {\n      if (this._adsAdapter) {\n        this._adsAdapter.dispose()\n\n        this._adsAdapter.off(Adapter.Event.START, this._adStartListener)\n        this._adsAdapter.off(Adapter.Event.JOIN, this._adJoinListener)\n        this._adsAdapter.off(Adapter.Event.PAUSE, this._adPauseListener)\n        this._adsAdapter.off(Adapter.Event.RESUME, this._adResumeListener)\n        this._adsAdapter.off(Adapter.Event.BUFFER_BEGIN, this._adBufferBeginListener)\n        this._adsAdapter.off(Adapter.Event.BUFFER_END, this._adBufferEndListener)\n        this._adsAdapter.off(Adapter.Event.STOP, this._adStopListener)\n\n        this._adsAdapter = null\n      }\n    },\n\n    // -------------------------------------- DISABLE ----------------------------------------------\n\n    /**\n     * Disable request sending.\n     */\n    disable: function () {\n      this.setOptions({ 'enabled': false })\n    },\n\n    /**\n     * Re-enable request sending.\n     */\n    enable: function () {\n      this.setOptions({ 'enabled': true })\n    },\n\n    // ------------------------------------- LISTENERS -----------------------------------------\n\n    /**\n     * Automatically calls RequestBuilder.\n     *\n     * @param {string} willSendEvent Name of the will-send event. Use {@link Plugin.Event} enum.\n     * @param {string} service Name of the service. Use {@link Plugin.Service} enum.\n     * @param {Object} params Params of the request\n     */\n    _send: function (willSendEvent, service, params) {\n      params = this.requestBuilder.buildParams(params, service)\n      this.requestBuilder.buildRequest(willSendEvent, service, params)\n    },\n\n    /**\n     * Initializes comm and its transforms.\n     */\n    _initComm: function () {\n      this.resourceTransform.init(this.getResource())\n\n      this._comm = new Communication()\n      this._comm.addTransform(new FlowTransform())\n      this._comm.addTransform(this.viewTransform)\n      this._comm.addTransform(this.resourceTransform)\n      this._comm.addTransform(new Nqs6Transform())\n    },\n\n    /**\n     * Starts preloading state and chronos.\n     */\n    firePreloadBegin: function () {\n      if (!this.isPreloading) {\n        this.isPreloading = true\n        this.preloadChrono.start()\n      }\n    },\n\n    /**\n     * Ends preloading state and chronos.\n     */\n    firePreloadEnd: function () {\n      if (this.isPreloading) {\n        this.isPreloading = false\n        this.preloadChrono.stop()\n      }\n    },\n\n    /**\n     * Sends /init. Should be called once the user has requested the content. Does not need\n     * a working adapter or player to work. it won't sent start if isInitiated is true.\n     *\n     * @param {Object} [params] Object of key:value params.\n     */\n    fireInit: function (params) {\n      if (!this.isInitiated) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n\n        this.isInitiated = true\n        this.initChrono.start()\n\n        params = params || {}\n        this._send(Plugin.Event.WILL_SEND_INIT, Plugin.Service.INIT, params)\n        Log.notice(Plugin.Service.INIT + ' ' + (params.title || params.mediaResource))\n      }\n    },\n\n    _startListener: function (e) {\n      if (!this.isInitiated) {\n        this.viewTransform.nextView()\n        this._initComm()\n        this._startPings()\n      }\n\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_START, Plugin.Service.START, params)\n      Log.notice(Plugin.Service.START + ' ' + (params.title || params.mediaResource))\n    },\n\n    _joinListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_JOIN, Plugin.Service.JOIN, params)\n      Log.notice(Plugin.Service.JOIN + ' ' + params.joinDuration + 'ms')\n    },\n\n    _pauseListener: function (e) {\n      if (this._adapter) {\n        if (this._adapter.flags.isBuffering ||\n          this._adapter.flags.isSeeking ||\n          (this._adsAdapter && this._adsAdapter.flags.isStarted)) {\n          this._adapter.chronos.pause.reset()\n        }\n      }\n\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_PAUSE, Plugin.Service.PAUSE, params)\n      Log.notice(Plugin.Service.PAUSE + ' at ' + params.playhead + 's')\n    },\n\n    _resumeListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_RESUME, Plugin.Service.RESUME, params)\n      Log.notice(Plugin.Service.RESUME + ' ' + params.pauseDuration + 'ms')\n    },\n\n    _seekBeginListener: function (e) {\n      if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      Log.notice('Seek Begin')\n    },\n\n    _seekEndListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_SEEK, Plugin.Service.SEEK, params)\n      Log.notice(Plugin.Service.SEEK +\n        ' to ' + params.playhead +\n        ' in ' + params.seekDuration + 'ms'\n      )\n    },\n\n    _bufferBeginListener: function (e) {\n      if (this._adapter && this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      Log.notice('Buffer Begin')\n    },\n\n    _bufferEndListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_BUFFER, Plugin.Service.BUFFER, params)\n      Log.notice(Plugin.Service.BUFFER +\n        ' to ' + params.playhead +\n        ' in ' + params.bufferDuration + 'ms'\n      )\n    },\n\n    _errorListener: function (e) {\n      if (!this._comm) this._initComm()\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_ERROR, Plugin.Service.ERROR, params)\n      Log.notice(Plugin.Service.ERROR +\n        ' ' + params.errorLevel +\n        ' ' + params.errorCode\n      )\n\n      if (params.errorLevel === 'fatal') this._reset()\n    },\n\n    _stopListener: function (e) {\n      var params = e.data.params || {}\n      this._send(Plugin.Event.WILL_SEND_STOP, Plugin.Service.STOP, params)\n      Log.notice(Plugin.Service.STOP + ' at ' + params.playhead + 's')\n      this._reset()\n    },\n\n    // Ads\n    _adStartListener: function (e) {\n      if (this._adapter) {\n        this._adapter.fireBufferEnd()\n        this._adapter.fireSeekEnd()\n        if (this._adapter.flags.isPaused) this._adapter.chronos.pause.reset()\n      }\n\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_START, Plugin.Service.AD_START, params)\n      Log.notice(Plugin.Service.AD_START + ' at ' + params.playhead + 's')\n    },\n\n    _adJoinListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_JOIN, Plugin.Service.AD_JOIN, params)\n      Log.notice(Plugin.Service.AD_JOIN + ' ' + params.adJoinDuration + 'ms')\n    },\n\n    _adPauseListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_PAUSE, Plugin.Service.AD_PAUSE, params)\n      Log.notice(Plugin.Service.AD_PAUSE + ' at ' + params.adPlayhead + 's')\n    },\n\n    _adResumeListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_RESUME, Plugin.Service.AD_RESUME, params)\n      Log.notice(Plugin.Service.AD_RESUME + ' ' + params.adPauseDuration + 'ms')\n    },\n\n    _adBufferBeginListener: function (e) {\n      Log.notice('Ad Buffer Begin')\n      if (this._adsAdapter && this._adsAdapter.flags.isPaused) {\n        this._adsAdapter.chronos.pause.reset()\n      }\n    },\n\n    _adBufferEndListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_BUFFER, Plugin.Service.AD_BUFFER, params)\n      Log.notice(Plugin.Service.AD_BUFFER + ' ' + params.adBufferDuration + 'ms')\n    },\n\n    _adStopListener: function (e) {\n      var params = e.data.params || {}\n      params.adNumber = this.requestBuilder.getAdNumber()\n      this._send(Plugin.Event.WILL_SEND_AD_STOP, Plugin.Service.AD_STOP, params)\n      Log.notice(Plugin.Service.AD_STOP + ' at ' + params.playhead + 's')\n    },\n\n    // ----------------------------------------- PINGS ---------------------------------------------\n\n    /**\n     * Starts sending pings\n     * @private\n     */\n    _startPings: function () {\n      if (!this._ping.isRunning) this._ping.start()\n    },\n\n    /**\n     * Stops sending pings\n     * @private\n     */\n    _stopPings: function () {\n      this._ping.stop()\n    },\n\n    _sendPing: function (diffTime) {\n      var params = {\n        diffTime: diffTime,\n        entities: this.requestBuilder.getChangedEntities()\n      }\n      if (this._adapter) {\n        if (this._adapter.flags.isPaused) {\n          params = this.requestBuilder.fetchParams(params, ['pauseDuration'])\n        } else {\n          params = this.requestBuilder.fetchParams(params, [\n            'bitrate',\n            'throughput',\n            'fps'\n          ])\n\n          if (this._adsAdapter && this._adsAdapter.flags.isStarted) {\n            params = this.requestBuilder.fetchParams(params, ['adBitrate'])\n          }\n        }\n        if (this._adapter.flags.isBuffering) {\n          params = this.requestBuilder.fetchParams(params, ['bufferDuration'])\n        }\n        if (this._adapter.flags.isSeeking) {\n          params = this.requestBuilder.fetchParams(params, ['seekDuration'])\n        }\n\n        if (this._adsAdapter) {\n          if (this._adsAdapter.flags.isStarted) {\n            params = this.requestBuilder.fetchParams(params, ['adPlayhead'])\n          }\n          if (this._adsAdapter.flags.isBuffering) {\n            params = this.requestBuilder.fetchParams(params, ['adBufferDuration'])\n          }\n        }\n      }\n\n      this._send(Plugin.Event.WILL_SEND_PING, Plugin.Service.PING, params)\n      Log.verbose(Plugin.Service.PING)\n    },\n\n    // ------------------------------------- INFO GETTERS -----------------------------------------\n\n    /** Returns service host */\n    getHost: function () {\n      return Util.addProtocol(\n        Util.stripProtocol(this.options['host']),\n        this.options['httpSecure'])\n    },\n\n    /** Returns parse HLS Flag */\n    isParseHls: function () {\n      return this.options['parse.Hls']\n    },\n\n    /** Returns parse CdnNode Flag */\n    isParseCdnNode: function () {\n      return this.options['parse.CdnNode']\n    },\n\n    /** Returns Cdn list */\n    getParseCdnNodeList: function () {\n      return this.options['parse.CdnNode.list']\n    },\n\n    /** Returns Cdn header name */\n    getParseCdnNodeNameHeader: function () {\n      return this.options['parse.CdnNameHeader']\n    },\n\n    /** Returns content's playhead */\n    getPlayhead: function () {\n      var ret = 0\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occurred while calling getPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns content's PlayRate */\n    getPlayrate: function () {\n      var ret = 0\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayrate', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's FramesPerSecond */\n    getFramesPerSecond: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getFramesPerSecond()\n        } catch (err) {\n          Log.warn('An error occured while calling getFramesPerSecond', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's DroppedFrames */\n    getDroppedFrames: function () {\n      var ret = null\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getDroppedFrames()\n        } catch (err) {\n          Log.warn('An error occured while calling getDroppedFrames', err)\n        }\n      }\n      if (!ret) {\n        ret = this.getWebkitDroppedFrames()\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /**\n     * Returns dropped frames as per webkitDroppedFrameCount\n     *\n     * @returns {number}\n     */\n    getWebkitDroppedFrames: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitDroppedFrameCount) {\n        return this._adapter.tag.webkitDroppedFrameCount\n      }\n      return null\n    },\n\n    /** Returns content's Duration */\n    getDuration: function () {\n      var ret = this.options['content.duration']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getDuration', err)\n        }\n      }\n      return Util.parseNumber(Math.round(ret), 0)\n    },\n\n    /** Returns content's Bitrate */\n    getBitrate: function () {\n      var ret = this.options['content.bitrate']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitBitrate: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        if (this._lastWebkitBitrate) {\n          var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitBitrate\n          bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n        }\n        this._lastWebkitBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns content's Throughput */\n    getThroughput: function () {\n      var ret = this.options['content.throughput']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getThroughput()\n        } catch (err) {\n          Log.warn('An error occured while calling getThroughput', err)\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /** Returns content's Rendition */\n    getRendition: function () {\n      var ret = this.options['content.rendition']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getRendition()\n        } catch (err) {\n          Log.warn('An error occured while calling getRendition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title */\n    getTitle: function () {\n      var ret = this.options['content.title']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Title2 */\n    getTitle2: function () {\n      var ret = this.options['content.title2']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getTitle2()\n        } catch (err) {\n          Log.warn('An error occured while calling getTitle2', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's IsLive */\n    getIsLive: function () {\n      var ret = this.options['content.isLive']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getIsLive()\n        } catch (err) {\n          Log.warn('An error occured while calling getIsLive', err)\n        }\n      }\n      return ret || false\n    },\n\n    /** Returns content's Resource after being parsed by the resourceTransform */\n    getResource: function () {\n      var ret = null\n      if (!this.resourceTransform.isBlocking()) {\n        ret = this.resourceTransform.getResource()\n      }\n\n      return ret || this.getOriginalResource()\n    },\n\n    /** Returns content's original Resource */\n    getOriginalResource: function () {\n      var ret = null\n      ret = this.options['content.resource']\n      if (ret === null && this._adapter) {\n        try {\n          ret = this._adapter.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getResource', err)\n          ret = null\n        }\n      }\n      return ret || 'unknown'\n    },\n\n    /** Returns content's TransactionCode */\n    getTransactionCode: function () {\n      return this.options['content.transactionCode']\n    },\n\n    /** Returns content's Metadata */\n    getMetadata: function () {\n      return this.options['content.metadata']\n    },\n\n    /** Returns content's PlayerVersion */\n    getPlayerVersion: function () {\n      var ret = ''\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's PlayerName */\n    getPlayerName: function () {\n      var ret = ''\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getPlayerName()\n        } catch (err) {\n          Log.warn('An error occured while calling getPlayerName', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Cdn */\n    getCdn: function () {\n      var ret = null\n      if (!this.resourceTransform.isBlocking()) {\n        ret = this.resourceTransform.getCdnName()\n      }\n      return ret || this.options['content.cdn']\n    },\n\n    /** Returns content's PluginVersion */\n    getPluginVersion: function () {\n      var ret = version + '-adapterless'\n      if (this._adapter) {\n        try {\n          ret = this._adapter.getVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getPluginVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns content's Extraparam1 */\n    getExtraparam1: function () {\n      return this.options['extraparam.1']\n    },\n\n    /** Returns content's Extraparam2 */\n    getExtraparam2: function () {\n      return this.options['extraparam.2']\n    },\n\n    /** Returns content's Extraparam3 */\n    getExtraparam3: function () {\n      return this.options['extraparam.3']\n    },\n\n    /** Returns content's Extraparam4 */\n    getExtraparam4: function () {\n      return this.options['extraparam.4']\n    },\n    /** Returns content's Extraparam5 */\n    getExtraparam5: function () {\n      return this.options['extraparam.5']\n    },\n\n    /** Returns content's Extraparam6 */\n    getExtraparam6: function () {\n      return this.options['extraparam.6']\n    },\n\n    /** Returns content's Extraparam7 */\n    getExtraparam7: function () {\n      return this.options['extraparam.7']\n    },\n\n    /** Returns content's Extraparam8 */\n    getExtraparam8: function () {\n      return this.options['extraparam.8']\n    },\n\n    /** Returns content's Extraparam9 */\n    getExtraparam9: function () {\n      return this.options['extraparam.9']\n    },\n\n    /** Returns content's Extraparam10 */\n    getExtraparam10: function () {\n      return this.options['extraparam.10']\n    },\n\n    /** Returns ad's position */\n    getAdPosition: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPosition()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPosition', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayhead */\n    getAdPlayhead: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPlayhead()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayhead', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdDuration */\n    getAdDuration: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getDuration()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdDuration', err)\n        }\n      }\n      return Util.parseNumber(ret, 0)\n    },\n\n    /** Returns ad's AdBitrate */\n    getAdBitrate: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getBitrate()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdBitrate', err)\n        }\n\n        if (!ret || ret === -1) {\n          ret = this.getWebkitAdBitrate()\n        }\n      }\n      return Util.parseNumber(ret, -1)\n    },\n\n    /**\n     * Returns bitrate as per webkitVideoDecodedByteCount\n     *\n     * @param {Object} tag Video tag DOM reference.\n     * @returns {number}\n     */\n    getWebkitAdBitrate: function () {\n      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {\n        var bitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        if (this._lastWebkitAdBitrate) {\n          var delta = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitAdBitrate\n          bitrate = Math.round(((delta) / this.viewTransform.response.pingTime) * 8)\n        }\n        this._lastWebkitAdBitrate = this._adapter.tag.webkitVideoDecodedByteCount\n        return bitrate !== 0 ? bitrate : -1\n      }\n    },\n\n    /** Returns ad's AdTitle */\n    getAdTitle: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getTitle()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdTitle', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdResource */\n    getAdResource: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getResource()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdResource', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdPlayerVersion */\n    getAdPlayerVersion: function () {\n      var ret = null\n      if (this._adsAdapter) {\n        try {\n          ret = this._adsAdapter.getPlayerVersion()\n        } catch (err) {\n          Log.warn('An error occured while calling getAdPlayerVersion', err)\n        }\n      }\n      return ret\n    },\n\n    /** Returns ad's AdMetadata */\n    getAdMetadata: function () {\n      return this.options['ad.metadata']\n    },\n\n    /** Returns PluginInfo */\n    getPluginInfo: function () {\n      var ret = {\n        lib: version,\n        adapter: this.getPluginVersion(),\n        adAdapter: (this._adsAdapter) ? this._adsAdapter.getVersion() : null\n      }\n      return ret\n    },\n\n    /** Returns Ip */\n    getIp: function () {\n      return this.options['network.ip']\n    },\n\n    /** Returns Isp */\n    getIsp: function () {\n      return this.options['network.isp']\n    },\n\n    /** Returns ConnectionType */\n    getConnectionType: function () {\n      return this.options['network.connectionType']\n    },\n\n    /** Returns DeviceCode */\n    getDeviceCode: function () {\n      return this.options['device.code']\n    },\n\n    /** Returns AccountCode */\n    getAccountCode: function () {\n      return this.options['accountCode']\n    },\n\n    /** Returns Username */\n    getUsername: function () {\n      return this.options['username']\n    },\n\n    /** Get URL referer. */\n    getReferer: function () {\n      var ret = ''\n      if (typeof window !== 'undefined' && window.location) {\n        ret = window.location.href\n      }\n      return ret\n    },\n\n    /**\n     * Returns the nodehost\n     */\n    getNodeHost: function () {\n      return this.resourceTransform.getNodeHost()\n    },\n\n    /**\n     * Returns the node type id\n     */\n    getNodeType: function () {\n      return this.resourceTransform.getNodeType()\n    },\n\n    /**\n     * Returns the node type string\n     */\n    getNodeTypeString: function () {\n      return this.resourceTransform.getNodeTypeString()\n    },\n\n    // ---------------------------------------- CHRONOS -------------------------------------------\n\n    /** Returns preload chrono delta time */\n    getPreloadDuration: function () {\n      return this.preloadChrono.getDeltaTime(false)\n    },\n\n    getInitDuration: function () {\n      return this.initChrono.getDeltaTime(false)\n    },\n\n    /** Returns JoinDuration chrono delta time */\n    getJoinDuration: function () {\n      if (this.isInitiated) return this.getInitDuration()\n      return this._adapter ? this._adapter.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns BufferDuration chrono delta time */\n    getBufferDuration: function () {\n      return this._adapter ? this._adapter.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns SeekDuration chrono delta time */\n    getSeekDuration: function () {\n      return this._adapter ? this._adapter.chronos.seek.getDeltaTime(false) : -1\n    },\n\n    /** Returns pauseDuration chrono delta time */\n    getPauseDuration: function () {\n      return this._adapter ? this._adapter.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdJoinDuration chrono delta time */\n    getAdJoinDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.join.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdBufferDuration chrono delta time */\n    getAdBufferDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.buffer.getDeltaTime(false) : -1\n    },\n\n    /** Returns AdPauseDuration chrono delta time */\n    getAdPauseDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.pause.getDeltaTime(false) : -1\n    },\n\n    /** Returns total totalAdDuration chrono delta time */\n    getTotalAdDuration: function () {\n      return this._adsAdapter ? this._adsAdapter.chronos.total.getDeltaTime(false) : -1\n    }\n  },\n\n  /** @lend Plugin */\n  {\n    // Static Memebers //\n    /**\n     * List of youbora services.\n     * @enum\n     */\n    Service: {\n      DATA: '/data',\n      INIT: '/init',\n      START: '/start',\n      JOIN: '/joinTime',\n      PAUSE: '/pause',\n      RESUME: '/resume',\n      SEEK: '/seek',\n      BUFFER: '/bufferUnderrun',\n      ERROR: '/error',\n      STOP: '/stop',\n      PING: '/ping',\n      AD_START: '/adStart',\n      AD_JOIN: '/adJoin',\n      AD_PAUSE: '/adPause',\n      AD_RESUME: '/adResume',\n      AD_BUFFER: '/adBufferUnerrun',\n      AD_STOP: '/adStop'\n    },\n\n    /**\n     * List of events that could be fired\n     * @enum\n     */\n    Event: {\n      WILL_SEND_START: 'will-send-start',\n      WILL_SEND_JOIN: 'will-send-join',\n      WILL_SEND_PAUSE: 'will-send-pause',\n      WILL_SEND_RESUME: 'will-send-resume',\n      WILL_SEND_SEEK: 'will-send-seek',\n      WILL_SEND_BUFFER: 'will-send-buffer',\n      WILL_SEND_ERROR: 'will-send-error',\n      WILL_SEND_FATAL_ERROR: 'will-send-fatal-error',\n      WILL_SEND_STOP: 'will-send-stop',\n      WILL_SEND_PING: 'will-send-ping',\n      WILL_SEND_AD_START: 'will-send-ad-start',\n      WILL_SEND_AD_JOIN: 'will-send-ad-join',\n      WILL_SEND_AD_PAUSE: 'will-send-ad-pause',\n      WILL_SEND_AD_RESUME: 'will-send-ad-resume',\n      WILL_SEND_AD_BUFFER: 'will-send-ad-buffer',\n      WILL_SEND_AD_STOP: 'will-send-ad-stop'\n    }\n  }\n)\n\nmodule.exports = Plugin\n","var YouboraObject = require('../object')\nvar Log = require('../log')\n\nvar YBRequest = require('../comm/request')\n\nvar startParams = [\n  'accountCode',\n  'username',\n  'rendition',\n  'title',\n  'title2',\n  'live',\n  'mediaDuration',\n  'mediaResource',\n  'transactionCode',\n  'properties',\n  'cdn',\n  'playerVersion',\n  'param1',\n  'param2',\n  'param3',\n  'param4',\n  'param5',\n  'param6',\n  'param7',\n  'param8',\n  'param9',\n  'param10',\n  'pluginVersion',\n  'pluginInfo',\n  'isp',\n  'connectionType',\n  'ip',\n  'deviceCode',\n  'preloadDuration'\n]\n\nvar RequestBuilder = YouboraObject.extend(\n  /** @lends RequestBuilder.prototype */\n  {\n    /**\n     * This class helps building params associated with each event: /start, /joinTime...\n     *\n     * @constructs RequestBuilder\n     * @extends YouboraObject\n     * @memberof youbora\n     *\n     * @param {Plugin} plugin A Plugin instance\n     */\n    constructor: function (plugin) {\n      this._plugin = plugin\n      this._adNumber = 0\n\n      /** Stores a list of the last params fetched */\n      this.lastSent = {}\n    },\n\n    /**\n     * Adds to params all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {Array[string]} paramList A list of params to fetch.\n     * @param {bool} onlyDifferent If true, only fetches params that have changed\n     */\n    fetchParams: function (params, paramList, onlyDifferent) {\n      params = params || {}\n      paramList = paramList || []\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i]\n\n        if (params[param]) { return }\n        var getterName = RequestBuilder.getters[param]\n\n        if (this._plugin[getterName]) {\n          var value = this._plugin[getterName]()\n          if (value !== null && (!onlyDifferent || this.lastSent[param] !== value)) {\n            params[param] = value\n            this.lastSent[param] = value\n          }\n        } else {\n          Log.warn('Trying to call undefined getter ' + param + ':' + getterName)\n        }\n      }\n\n      return params\n    },\n\n    /**\n     * Adds to params object all the entities specified in paramList, unless they are already set.\n     *\n     * @param {Object} params Object of params key:value.\n     * @param {string} service The name of the service. Use {@link Plugin.Service} enum.\n     */\n    buildParams: function (params, service) {\n      params = params || {}\n      this.fetchParams(params, RequestBuilder.params[service], false)\n      this.fetchParams(params, RequestBuilder.differentParams[service], true)\n      return params\n    },\n\n    /**\n     * Creates and enqueues related request using {@link Communication#sendRequest}.\n     * It will fire will-send-events.\n     *\n     * @param {String} event Name of the will-send-event to be fired.\n     * @param {string} service Name of the service. Use {@link Plugin.Service} enum.\n     * @param {Object} params Params for the request.\n     */\n    buildRequest: function (event, service, params) {\n      var data = {\n        params: params,\n        plugin: this._plugin,\n        adapter: this._plugin.getAdapter(),\n        adsAdapter: this._plugin.getAdsAdapter()\n      }\n\n      this._plugin.emit(event, data)\n\n      if (this._plugin._comm && params !== null && this._plugin.options.enabled) {\n        this._plugin._comm.sendRequest(new YBRequest(null, service, params))\n      }\n    },\n\n    /**\n     * Creates an adnumber if it does not exist and stores it in lastSent. If it already exists,\n     * it is incremented by 1.\n     *\n     * @returns {number} adNumber\n     */\n    getAdNumber: function () {\n      var adNumber = this.lastSent.adNumber\n      if (adNumber && this.lastSent.adPosition === this._plugin.getAdPosition()) {\n        adNumber += 1\n      } else {\n        adNumber = 1\n      }\n      this.lastSent.adNumber = adNumber\n      return adNumber\n    },\n\n    /**\n     * Return changed entities since last check\n     *\n     * @returns {Object} params\n     */\n    getChangedEntities: function () {\n      return this.fetchParams({}, RequestBuilder.differentParams['entities'], true)\n    }\n  },\n  /* @lends RequestBuilder */\n  {\n    // Static Members\n\n    /** List of params used by each service */\n    params: {\n      '/data': ['system', 'pluginVersion'],\n      '/init': startParams,\n      '/start': startParams,\n      '/joinTime': ['joinDuration', 'playhead'],\n      '/pause': ['playhead'],\n      '/resume': ['pauseDuration', 'playhead'],\n      '/seek': ['seekDuration', 'playhead'],\n      '/bufferUnderrun': ['bufferDuration', 'playhead'],\n      '/error': ['player'].concat(startParams),\n      '/stop': ['bitrate', 'playhead'],\n      '/adStart': [\n        'playhead',\n        'adTitle',\n        'adPosition',\n        'adDuration',\n        'adResource',\n        'adPlayerVersion',\n        'adProperties',\n        'adnalyzerVersion'\n      ],\n      '/adJoin': ['adPosition', 'joinAdDuration', 'adPlayhead'],\n      '/adPause': ['adPosition', 'adPlayhead'],\n      '/adResume': ['adPosition', 'adPlayhead', 'adPauseDuration'],\n      '/adBufferUnerrun': ['adPosition', 'adPlayhead', 'adBufferDuration'],\n      '/adStop': ['adPosition', 'adPlayhead', 'adBitrate', 'totalAdDuration'],\n      '/ping': ['playhead', 'droppedFrames', 'playrate']\n    },\n\n    /** List of params used by each service (only if they are different) */\n    differentParams: {\n      '/join': ['title', 'title2', 'live', 'mediaDuration', 'mediaResource'],\n      '/adJoin': ['adTitle', 'adDuration', 'adResource'],\n      'entities': [\n        'rendition',\n        'title',\n        'title2',\n        'live',\n        'mediaDuration',\n        'mediaResource',\n        'param1',\n        'param2',\n        'param3',\n        'param4',\n        'param5',\n        'param6',\n        'param7',\n        'param8',\n        'param9',\n        'param10',\n        'adTitle',\n        'connectionType',\n        'deviceCode',\n        'ip',\n        'username',\n        'cdn',\n        'nodeHost',\n        'nodeType',\n        'nodeTypeString'\n      ]\n    },\n\n    /** List of params and its related getter */\n    getters: {\n      playhead: 'getPlayhead',\n      playrate: 'getPlayrate',\n      fps: 'getFramesPerSecond',\n      droppedFrames: 'getDroppedFrames',\n      mediaDuration: 'getDuration',\n      bitrate: 'getBitrate',\n      throughput: 'getThroughput',\n      rendition: 'getRendition',\n      title: 'getTitle',\n      title2: 'getTitle2',\n      live: 'getIsLive',\n      mediaResource: 'getResource',\n      transactionCode: 'getTransactionCode',\n      properties: 'getMetadata',\n      playerVersion: 'getPlayerVersion',\n      player: 'getPlayerName',\n      cdn: 'getCdn',\n      pluginVersion: 'getPluginVersion',\n\n      param1: 'getExtraparam1',\n      param2: 'getExtraparam2',\n      param3: 'getExtraparam3',\n      param4: 'getExtraparam4',\n      param5: 'getExtraparam5',\n      param6: 'getExtraparam6',\n      param7: 'getExtraparam7',\n      param8: 'getExtraparam8',\n      param9: 'getExtraparam9',\n      param10: 'getExtraparam10',\n\n      adPosition: 'getAdPosition',\n      adPlayhead: 'getAdPlayhead',\n      adDuration: 'getAdDuration',\n      adBitrate: 'getAdBitrate',\n      adTitle: 'getAdTitle',\n      adResource: 'getAdResource',\n      adPlayerVersion: 'getAdPlayerVersion',\n      adProperties: 'getAdMetadata',\n      adnalyzerVersion: 'getAdnalyzerVersion',\n\n      pluginInfo: 'getPluginInfo',\n\n      isp: 'getIsp',\n      connectionType: 'getConnectionType',\n      ip: 'getIp',\n\n      deviceCode: 'getDeviceCode',\n\n      system: 'getAccountCode',\n      accountCode: 'getAccountCode',\n      username: 'getUsername',\n\n      joinDuration: 'getJoinDuration',\n      bufferDuration: 'getBufferDuration',\n      seekDuration: 'getSeekDuration',\n      pauseDuration: 'getPauseDuration',\n\n      adJoinDuration: 'getAdJoinDuration',\n      adBufferDuration: 'getAdBufferDuration',\n      totalAdDuration: 'getTotalAdDuration',\n      preloadDuration: 'getPreloadDuration',\n      adPauseDuration: 'getAdPauseDuration',\n\n      referer: 'getReferer',\n\n      nodeHost: 'getNodeHost',\n      nodeType: 'getNodeType',\n      nodeTypeString: 'getNodeTypeString'\n    }\n\n  }\n)\n\nmodule.exports = RequestBuilder\n","/* eslint no-extend-native: \"off\" */\n\n/**\n * When executed, this function applies polyfills to the following functionalities:\n * Function.prototype.bind,\n * Object.assign,\n * Object.create,\n * Array.prototype.forEach,\n * Array.isArray\n *\n * @memberof youbora\n */\nvar applyPolyfills = function () {\n  // Bind\n  Function.prototype.bind = Function.prototype.bind || function (b) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n    }\n    var a = Array.prototype.slice\n    var f = a.call(arguments, 1)\n    var e = this\n    var C = function () {}\n    var d = function () {\n      return e.apply(this instanceof C ? this : b || window, f.concat(a.call(arguments)))\n    }\n    C.prototype = this.prototype\n    d.prototype = new C()\n    return d\n  }\n\n  // Assign\n  Object.assign = Object.assign || function (target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object')\n    }\n\n    var output = Object(target)\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index]\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey]\n          }\n        }\n      }\n    }\n    return output\n  }\n\n  // Create\n  Object.create = Object.create || (function () {\n    var Temp = function () {}\n    return function (prototype, propertiesObject) {\n      if (prototype !== Object(prototype) && prototype !== null) {\n        throw TypeError('Argument must be an object, or null')\n      }\n      Temp.prototype = prototype || {}\n      var result = new Temp()\n      Temp.prototype = null\n      if (propertiesObject !== undefined) {\n        Object.defineProperties(result, propertiesObject)\n      }\n\n      // to imitate the case of Object.create(null)\n      if (prototype === null) {\n        result.prototype = null\n      }\n      return result\n    }\n  })()\n\n  // Foreach\n  Array.prototype.forEach = Array.prototype.forEach || function (callback, thisArg) {\n    if (typeof (callback) !== 'function') {\n      throw new TypeError(callback + ' is not a function!')\n    }\n    var len = this.length\n    for (var i = 0; i < len; i++) {\n      callback.call(thisArg, this[i], i, this)\n    }\n  }\n\n  // isArray\n  Array.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]'\n  }\n}\n\nmodule.exports = applyPolyfills\n","var YouboraObject = require('./object')\nvar Chrono = require('./chrono')\n\nvar Timer = YouboraObject.extend(\n  /** @lends Timer.prototype */\n  {\n    /**\n     * Instances of this class will call a callback every setted interval.\n     *\n     * @param {function} callback The callback to call every due interval.\n     * Callback will receive lapsed ms between calls.\n     * @param {int} [interval=5000] Milliseconds between each call.\n     *\n     * @constructs Timer\n     * @extends YouboraObject\n     * @memberof youbora\n     */\n    constructor: function (callback, interval) {\n      this.callback = callback\n      this.interval = interval || 5000\n      this.isRunning = false\n      this._timer = null\n\n      this.chrono = new Chrono()\n    },\n\n    /**\n     * Starts the timer.\n     */\n    start: function () {\n      this.isRunning = true\n      this._setTick()\n    },\n\n    /**\n     * Stops the timer.\n     */\n    stop: function () {\n      this.isRunning = false\n      if (this._timer) clearTimeout(this._timer)\n    },\n\n    _setTick: function () {\n      this.chrono.start()\n      this._timer = setTimeout(function () {\n        this.callback(this.chrono.stop())\n        this._setTick()\n      }.bind(this), this.interval)\n    }\n  }\n)\n\nmodule.exports = Timer\n","var Log = require('./log')\n\n/**\n * This static class provides utilities\n * @class\n * @static\n * @memberof youbora\n */\nvar Util = {\n  /**\n   * Strip {protocol}:// and // from the begining of the string.\n   *\n   * @param {string} url\n   * @returns {string} stripped url\n   */\n  stripProtocol: function (url) {\n    try {\n      return url.replace(/^(.*?:\\/\\/|\\/\\/)/i, '')\n    } catch (err) {\n      Log.warn(err)\n      return url\n    }\n  },\n\n  /**\n   * Adds specific protocol. ie: [http[s]:]//nqs.nice264.com\n   *\n   * @param {string} url Domain of the service.\n   * @param {boolean|null} [httpSecure]\n   * If true will add https, if false http.\n   * Otherwise will add //\n   * @return Return the complete service URL.\n   */\n  addProtocol: function (url, httpSecure) {\n    try {\n      if (httpSecure === true) {\n        return 'https://' + url\n      } else if (window.location.protocol.indexOf('http') === 0) {\n        return '//' + url\n      } else {\n        return 'http://' + url\n      }\n    } catch (err) {\n      Log.warn(err)\n      return 'http://localhost/'\n    }\n  },\n\n  /**\n   * Return n if it isn't NaN, negative, Infinity, null or undefined.\n   * In any other case, return def.\n   *\n   * @param {mixed} n Number to be parsed.\n   * @param {number} defl Number to return if n is not correct.\n   */\n  parseNumber: function (n, def) {\n    if (\n      !isNaN(n) &&\n      n >= 0 &&\n      n !== Infinity &&\n      n !== -Infinity &&\n      n !== null &&\n      typeof n !== 'undefined'\n    ) {\n      return n\n    } else {\n      return def\n    }\n  },\n\n  /**\n   * This utility function will add most of the HTML5 event listener to the player sent.\n   * This common events will be listened: 'canplay', 'buffering', 'waiting', 'ended', 'play',\n   * 'playing', 'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked', 'stalled',\n   * 'dispose', 'loadeddata', 'loadstart'.\n   *\n   * Events will be reported as DEBUG level messages.\n   *\n   * @param {object|function} o Object to attach the events.\n   * @param {array} [extraEvents]\n   * An array of extra events to watch. ie:  ['timeupdate', 'progress'].\n   * If the first item is null, no common events will be added.\n   * @param {function} [report] Callback function called to report events.\n   * Default calls Log.debug()\n   */\n  listenAllEvents: function (o, extraEvents, report) {\n    try {\n      if (Log.logLevel <= Log.Level.DEBUG) {\n        report = report || function (e) {\n          Log.debug('Event: ' + e.type)\n        }\n\n        var playerEvents = [\n          'canplay', 'buffering', 'waiting', 'ended', 'play', 'playing',\n          'pause', 'resume', 'error', 'abort', 'seek', 'seeking', 'seeked',\n          'stalled', 'dispose', 'loadeddata', 'loadstart'\n        ]\n        if (extraEvents) {\n          if (extraEvents[0] === null) {\n            extraEvents.shift()\n            playerEvents = extraEvents\n          } else {\n            playerEvents = playerEvents.concat(extraEvents)\n          }\n        }\n\n        for (var i = 0; i < playerEvents.length; i++) {\n          if (typeof o === 'function') {\n            o.call(window, playerEvents[i], report)\n          } else if (o.on) {\n            o.on(playerEvents[i], report)\n          } else if (o.addEventListener) {\n            o.addEventListener(playerEvents[i], report)\n          }\n        }\n      }\n    } catch (err) {\n      Log.error(err)\n    }\n  },\n\n  /**\n   * Builds a string that represents the rendition.\n   *\n   * The returned string will have the following format: <width>x<height>@bitrate<suffix?>.\n   * If either the width or height are < 1, only the bitrate will be returned.\n   * If bitrate is < 1, only the dimensions will be returned.\n   * If bitrate is < and there is no dimensions, a null will be returned.\n   * The bitrate will also have one of the following suffixes dependin on its\n   * magnitude: bps, Kbps, Mbps\n   *\n   * @param {any} width The width of the asset. If only 1 argument is sent, it will be treated\n   * as bitrate.\n   * @param {any} height The height of the asset.\n   * @param {any} bitrate The indicated bitrate (in the manifest) of the asset.\n   * @returns {string} A string with the following format: <width>x<height>@<bitrate><suffix>\n   */\n  buildRenditionString: function (width, height, bitrate) {\n    if (arguments.length === 1) {\n      bitrate = width\n      width = null\n      height = null\n    }\n\n    var ret = ''\n    if (width && height) {\n      ret = width + 'x' + height\n      if (bitrate > 0) {\n        ret += '@'\n      }\n    }\n\n    if (bitrate < 1) {\n      return ret\n    } else if (bitrate < 1e3) {\n      ret += Math.round(bitrate) + 'bps'\n    } else if (bitrate < 1e6) {\n      bitrate = Math.round(bitrate / 1e3)\n      ret += bitrate + 'Kbps'\n    } else {\n      bitrate = Math.round(bitrate / 1e4) / 1e2\n      ret += bitrate + 'Mbps'\n    }\n\n    return ret || null\n  }\n\n}\n\nmodule.exports = Util\n","module.exports = require('../package.json').version\n","// No-Conflict\nvar previousYoubora = youbora\nvar youbora = {}\n\n/**\n * This allows you to run multiple instances of YouboraLib on the same webapp.\n * After loading the new version, call `noConflict()` to get a reference to it.\n * At the same time the old version will be returned to Youbora.\n */\nyoubora.noConflict = function () {\n  youbora = previousYoubora\n  return this\n}\n\n// Info\nyoubora.VERSION = require('./version')\n\n// Polyfills\nyoubora.polyfills = require('./polyfills')\n\n// Classes\nyoubora.Object = require('./object')\nyoubora.Emitter = require('./emitter')\nyoubora.Util = require('./util')\nyoubora.Chrono = require('./chrono')\nyoubora.Timer = require('./timer')\n\n// Log\nyoubora.Log = require('./log')\nyoubora.Log.loadLevelFromUrl()\n\n// Comm classes\nyoubora.Request = require('./comm/request')\nyoubora.Communication = require('./comm/communication')\n\n// Resource Transform\nyoubora.Transform = require('./comm/transform/transform')\nyoubora.ViewTransform = require('./comm/transform/view')\nyoubora.Nqs6Transform = require('./comm/transform/nqs6')\nyoubora.ResourceTransform = require('./comm/transform/resource')\nyoubora.CdnParser = require('./comm/transform/cdnparser')\nyoubora.HlsParser = require('./comm/transform/hlsparser')\n\n// Plugin Classes\nyoubora.Options = require('./plugin/options')\nyoubora.Plugin = require('./plugin/plugin')\nyoubora.RequestBuilder = require('./plugin/requestbuilder')\n\n// Adapters\nyoubora.PlayheadMonitor = require('./adapter/playheadmonitor')\nyoubora.Adapter = require('./adapter/adapter')\nyoubora.adapters = {}\n\nmodule.exports = youbora\n","module.exports={\n  \"name\": \"youbora-html5-adapter\",\n  \"version\": \"6.0.0-rc\",\n  \"main\": \"src/adapter.js\",\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"version\": \"npm run build && git add -A\",\n    \"postversion\": \"git push && git push --tags\"\n  },\n  \"dependencies\": {\n    \"youboralib\": \"git+https://github.com/NPAW/plugin-core-js.git\"\n  },\n  \"devDependencies\": {\n    \"fs\": \"0.0.1-security\",\n    \"gulp-npawify\": \"^1.0.1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/NPAW/html5-adapter-js.git\"\n  },\n  \"author\": \"Jordi Aguilar\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"email\": \"support@nicepeopleatwork.com\"\n  }\n}\n","var youbora = require('youboralib')\nvar pkg = require('../package.json')\n\nyoubora.adapters.Html5 = youbora.Adapter.extend({\n  getVersion: function () {\n    return pkg.version + '-html5'\n  },\n\n  getPlayhead: function () {\n    return this.player.currentTime\n  },\n\n  getDuration: function () {\n    return this.player.duration\n  },\n\n  getResource: function () {\n    return this.player.currentSrc\n  },\n\n  getPlayerName: function () {\n    return 'html5'\n  },\n\n  getPlayerVersion: function () {\n    return this.getPlayerName()\n  },\n\n  registerListeners: function () {\n    youbora.Util.listenAllEvents(this.player)\n\n    // Enable playhead monitor\n    this.monitorPlayhead(true, false)\n\n    // Register listeners\n    this.player.addEventListener('play', this.playListener.bind(this))\n    this.player.addEventListener('timeupdate', this.timeupdateListener.bind(this))\n    this.player.addEventListener('pause', this.pauseListener.bind(this))\n    this.player.addEventListener('playing', this.playingListener.bind(this))\n    this.player.addEventListener('error', this.errorListener.bind(this))\n    this.player.addEventListener('seeking', this.seekingListener.bind(this))\n    this.player.addEventListener('ended', this.endedListener.bind(this))\n  },\n\n  playListener: function (e) {\n    this.fireStart()\n  },\n\n  timeupdateListener: function (e) {\n    if (this.getPlayhead() > 0.1) {\n      this.fireJoin()\n    }\n  },\n\n  pauseListener: function (e) {\n    this.firePause()\n  },\n\n  playingListener: function (e) {\n    this.fireResume()\n    this.fireSeekEnd()\n  },\n\n  errorListener: function (e) {\n    this.fireError()\n  },\n\n  seekingListener: function (e) {\n    this.fireSeekBegin()\n  },\n\n  endedListener: function (e) {\n    this.fireStop()\n  },\n\n  unregisterListeners: function () {\n    // Disable playhead monitoring\n    this.monitor.stop()\n\n    // unregister listeners\n    this.player.removeEventListener('play', this.onPlay)\n    this.player.removeEventListener('timeupdate', this.onTimeupdate)\n    this.player.removeEventListener('pause', this.onPause)\n    this.player.removeEventListener('playing', this.onPlaying)\n    this.player.removeEventListener('error', this.onError)\n    this.player.removeEventListener('seeking', this.onSeeking)\n    this.player.removeEventListener('ended', this.onEnded)\n  }\n\n})\n\nmodule.exports = youbora.adapters.Html5\n","var youbora = require('youboralib')\nrequire('./adapter')\n\nmodule.exports = youbora\n"]}